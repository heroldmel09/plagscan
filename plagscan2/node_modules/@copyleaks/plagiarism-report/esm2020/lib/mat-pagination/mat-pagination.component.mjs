import { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';
import { Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "../plagiarism-report/services/copyleaks-translate.service";
import * as i2 from "@angular/cdk/a11y";
import * as i3 from "@angular/material/button";
import * as i4 from "@angular/material/icon";
import * as i5 from "@angular/material/form-field";
import * as i6 from "@angular/cdk/bidi";
import * as i7 from "@angular/common";
import * as i8 from "@angular/material/tooltip";
import * as i9 from "@angular/material/input";
import * as i10 from "@angular/forms";
export class MatPaginationComponent {
    constructor(translationsService, announcer) {
        this.translationsService = translationsService;
        this.announcer = announcer;
        this.totalPages = 1;
        this.page = new EventEmitter();
        this._currentPage = 1;
        this.currentPageChange = new EventEmitter();
    }
    get currentPage() {
        return this._currentPage;
    }
    set currentPage(v) {
        const currentPage = coerceNumberProperty(v);
        this._currentPage = Math.min(Math.max(currentPage, 1), this.totalPages);
        this.currentPageChange.emit(currentPage);
    }
    get disabled() {
        return this._disabled;
    }
    set disabled(value) {
        this._disabled = coerceBooleanProperty(value);
    }
    get showFirstLastButtons() {
        return this._showFirstLastButtons;
    }
    set showFirstLastButtons(value) {
        this._showFirstLastButtons = coerceBooleanProperty(value);
    }
    /**
     * init translations on component init
     */
    ngOnInit() {
        this.translations = this.translationsService.translations;
    }
    /**
     * Navigate to the next page.
     * This will cause the paginator to emit a `PageChangeEvent`
     */
    next() {
        const previousPage = this.currentPage;
        this.currentPage = this.currentPage + 1;
        this.page.emit({
            currentPage: this.currentPage,
            totalPages: this.totalPages,
            previousPage,
        });
        this.announcer.announce('Moved page', 'assertive');
    }
    /**
     * Navigate to the previous page.
     * This will cause the paginator to emit a `PageChangeEvent`
     */
    back() {
        const previousPage = this.currentPage;
        this.currentPage = this.currentPage - 1;
        this.page.emit({
            currentPage: this.currentPage,
            totalPages: this.totalPages,
            previousPage,
        });
        this.announcer.announce('Moved page', 'assertive');
    }
    /**
     * Navigate to page.
     * This will cause the paginator to emit a `PageChangeEvent`
     */
    goToPage(page) {
        const previousPage = this.currentPage;
        this.currentPage = page;
        this.page.emit({
            currentPage: this.currentPage,
            totalPages: this.totalPages,
            previousPage,
        });
        this.announcer.announce('Moved page', 'assertive');
    }
    /**
     * On blur handler for the paginator input will update the input with the current page
     * @param event the default blur event object
     */
    onInputBlur(event) {
        event.target.value = `${this._currentPage}`;
    }
    /**
     * flag indicating whether the paginator has multiple pages
     */
    get hasPages() {
        return this.totalPages > 1;
    }
    /**
     * check if the paginator is at the first page
     */
    get isFirstPage() {
        return this.currentPage === 1;
    }
    /**
     * check if the paginator is at the last page
     */
    get isLastPage() {
        return this.currentPage === this.totalPages;
    }
}
MatPaginationComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.3", ngImport: i0, type: MatPaginationComponent, deps: [{ token: i1.CopyleaksTranslateService }, { token: i2.LiveAnnouncer }], target: i0.ɵɵFactoryTarget.Component });
MatPaginationComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.3", type: MatPaginationComponent, selector: "cr-mat-pagination", inputs: { totalPages: "totalPages", currentPage: "currentPage", disabled: "disabled", showFirstLastButtons: "showFirstLastButtons" }, outputs: { page: "page", currentPageChange: "currentPageChange" }, ngImport: i0, template: "<div mat-pagination-wrapper dir=\"ltr\">\n\t<button\n\t\taria-label=\"Go to the first page.\"\n\t\t*ngIf=\"showFirstLastButtons\"\n\t\tmat-button\n\t\t[matTooltip]=\"translations?.SHARED?.ACTIONS?.FIRST_PAGE || 'First page'\"\n\t\t(click)=\"goToPage(1)\"\n\t\t[disabled]=\"!hasPages || isFirstPage || disabled\">\n\t\t<mat-icon [svgIcon]=\"!hasPages || isFirstPage || disabled ? 'first_page_disabled' : 'first_page'\"></mat-icon>\n\t</button>\n\t<button\n\t\taria-label=\"Go to the previous page.\"\n\t\tmat-button\n\t\t[matTooltip]=\"translations?.SHARED?.ACTIONS?.PREV_PAGE || 'Previous page'\"\n\t\t(click)=\"back()\"\n\t\t[disabled]=\"!hasPages || isFirstPage || disabled\">\n\t\t<mat-icon [svgIcon]=\"!hasPages || isFirstPage || disabled ? 'chevron_left_disabled' : 'chevron_left'\"></mat-icon>\n\t</button>\n\t<mat-form-field>\n\t\t<input\n\t\t\taria-label=\"Enter page number to go to.\"\n\t\t\tmatInput\n\t\t\t(blur)=\"onInputBlur($event)\"\n\t\t\t[min]=\"1\"\n\t\t\t[max]=\"totalPages\"\n\t\t\tautocomplete=\"off\"\n\t\t\ttype=\"number\"\n\t\t\t[ngModelOptions]=\"{ updateOn: 'blur' }\"\n\t\t\t[(ngModel)]=\"currentPage\"\n\t\t\t[disabled]=\"!hasPages || disabled\" />\n\t\t<span matSuffix>{{ translations?.SHARED?.OF || 'of' }} {{ totalPages }}</span>\n\t</mat-form-field>\n\t<button\n\t\taria-label=\"Go to the next page.\"\n\t\tmat-button\n\t\t[matTooltip]=\"translations?.SHARED?.ACTIONS?.NEXT_PAGE || 'Next page'\"\n\t\t(click)=\"next()\"\n\t\t[disabled]=\"!hasPages || isLastPage || disabled\">\n\t\t<mat-icon [svgIcon]=\"!hasPages || isLastPage || disabled ? 'chevron_right_disabled' : 'chevron_right'\"></mat-icon>\n\t</button>\n\t<button\n\t\taria-label=\"Go to the last page.\"\n\t\t*ngIf=\"showFirstLastButtons\"\n\t\tmat-button\n\t\t[matTooltip]=\"translations?.SHARED?.ACTIONS?.LAST_PAGE || 'Last page'\"\n\t\t(click)=\"goToPage(totalPages)\"\n\t\t[disabled]=\"!hasPages || isLastPage || disabled\">\n\t\t<mat-icon [svgIcon]=\"!hasPages || isLastPage || disabled ? 'last_page_disabled' : 'last_page'\"></mat-icon>\n\t</button>\n</div>\n", styles: ["[mat-pagination-wrapper]{display:flex;flex-flow:row nowrap;align-items:center;color:#0000008a}[mat-pagination-wrapper]>:not(:last-child){margin-right:.25em}[mat-pagination-wrapper] mat-form-field{width:100px}[mat-pagination-wrapper] input[type=number]::-webkit-inner-spin-button,[mat-pagination-wrapper] input[type=number]::-webkit-outer-spin-button{-webkit-appearance:none;margin:0}[mat-pagination-wrapper] button[mat-button]{min-width:36px;padding:0}[mat-pagination-wrapper] button[mat-button] mat-icon{height:28px;width:28px;font-size:28px}[mat-pagination-wrapper] .mat-form-field-appearance-legacy .mat-form-field-wrapper{padding:0}[mat-pagination-wrapper] .mat-form-field-appearance-legacy .mat-form-field-infix{padding:0;border:0}[mat-pagination-wrapper] .mat-form-field-appearance-legacy .mat-form-field-label-wrapper{padding:0}[mat-pagination-wrapper] .mat-form-field-appearance-legacy .mat-form-field-underline{bottom:-2px}.cdk-keyboard-focused{outline:2px solid black!important}\n"], components: [{ type: i3.MatButton, selector: "button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]", inputs: ["disabled", "disableRipple", "color"], exportAs: ["matButton"] }, { type: i4.MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }, { type: i5.MatFormField, selector: "mat-form-field", inputs: ["color", "appearance", "hideRequiredMarker", "hintLabel", "floatLabel"], exportAs: ["matFormField"] }], directives: [{ type: i6.Dir, selector: "[dir]", inputs: ["dir"], outputs: ["dirChange"], exportAs: ["dir"] }, { type: i7.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i8.MatTooltip, selector: "[matTooltip]", exportAs: ["matTooltip"] }, { type: i9.MatInput, selector: "input[matInput], textarea[matInput], select[matNativeControl],      input[matNativeControl], textarea[matNativeControl]", inputs: ["disabled", "id", "placeholder", "name", "required", "type", "errorStateMatcher", "aria-describedby", "value", "readonly"], exportAs: ["matInput"] }, { type: i10.MinValidator, selector: "input[type=number][min][formControlName],input[type=number][min][formControl],input[type=number][min][ngModel]", inputs: ["min"] }, { type: i10.MaxValidator, selector: "input[type=number][max][formControlName],input[type=number][max][formControl],input[type=number][max][ngModel]", inputs: ["max"] }, { type: i10.NumberValueAccessor, selector: "input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]" }, { type: i10.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { type: i10.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i10.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { type: i5.MatSuffix, selector: "[matSuffix]" }], encapsulation: i0.ViewEncapsulation.None });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.3", ngImport: i0, type: MatPaginationComponent, decorators: [{
            type: Component,
            args: [{ selector: 'cr-mat-pagination', encapsulation: ViewEncapsulation.None, template: "<div mat-pagination-wrapper dir=\"ltr\">\n\t<button\n\t\taria-label=\"Go to the first page.\"\n\t\t*ngIf=\"showFirstLastButtons\"\n\t\tmat-button\n\t\t[matTooltip]=\"translations?.SHARED?.ACTIONS?.FIRST_PAGE || 'First page'\"\n\t\t(click)=\"goToPage(1)\"\n\t\t[disabled]=\"!hasPages || isFirstPage || disabled\">\n\t\t<mat-icon [svgIcon]=\"!hasPages || isFirstPage || disabled ? 'first_page_disabled' : 'first_page'\"></mat-icon>\n\t</button>\n\t<button\n\t\taria-label=\"Go to the previous page.\"\n\t\tmat-button\n\t\t[matTooltip]=\"translations?.SHARED?.ACTIONS?.PREV_PAGE || 'Previous page'\"\n\t\t(click)=\"back()\"\n\t\t[disabled]=\"!hasPages || isFirstPage || disabled\">\n\t\t<mat-icon [svgIcon]=\"!hasPages || isFirstPage || disabled ? 'chevron_left_disabled' : 'chevron_left'\"></mat-icon>\n\t</button>\n\t<mat-form-field>\n\t\t<input\n\t\t\taria-label=\"Enter page number to go to.\"\n\t\t\tmatInput\n\t\t\t(blur)=\"onInputBlur($event)\"\n\t\t\t[min]=\"1\"\n\t\t\t[max]=\"totalPages\"\n\t\t\tautocomplete=\"off\"\n\t\t\ttype=\"number\"\n\t\t\t[ngModelOptions]=\"{ updateOn: 'blur' }\"\n\t\t\t[(ngModel)]=\"currentPage\"\n\t\t\t[disabled]=\"!hasPages || disabled\" />\n\t\t<span matSuffix>{{ translations?.SHARED?.OF || 'of' }} {{ totalPages }}</span>\n\t</mat-form-field>\n\t<button\n\t\taria-label=\"Go to the next page.\"\n\t\tmat-button\n\t\t[matTooltip]=\"translations?.SHARED?.ACTIONS?.NEXT_PAGE || 'Next page'\"\n\t\t(click)=\"next()\"\n\t\t[disabled]=\"!hasPages || isLastPage || disabled\">\n\t\t<mat-icon [svgIcon]=\"!hasPages || isLastPage || disabled ? 'chevron_right_disabled' : 'chevron_right'\"></mat-icon>\n\t</button>\n\t<button\n\t\taria-label=\"Go to the last page.\"\n\t\t*ngIf=\"showFirstLastButtons\"\n\t\tmat-button\n\t\t[matTooltip]=\"translations?.SHARED?.ACTIONS?.LAST_PAGE || 'Last page'\"\n\t\t(click)=\"goToPage(totalPages)\"\n\t\t[disabled]=\"!hasPages || isLastPage || disabled\">\n\t\t<mat-icon [svgIcon]=\"!hasPages || isLastPage || disabled ? 'last_page_disabled' : 'last_page'\"></mat-icon>\n\t</button>\n</div>\n", styles: ["[mat-pagination-wrapper]{display:flex;flex-flow:row nowrap;align-items:center;color:#0000008a}[mat-pagination-wrapper]>:not(:last-child){margin-right:.25em}[mat-pagination-wrapper] mat-form-field{width:100px}[mat-pagination-wrapper] input[type=number]::-webkit-inner-spin-button,[mat-pagination-wrapper] input[type=number]::-webkit-outer-spin-button{-webkit-appearance:none;margin:0}[mat-pagination-wrapper] button[mat-button]{min-width:36px;padding:0}[mat-pagination-wrapper] button[mat-button] mat-icon{height:28px;width:28px;font-size:28px}[mat-pagination-wrapper] .mat-form-field-appearance-legacy .mat-form-field-wrapper{padding:0}[mat-pagination-wrapper] .mat-form-field-appearance-legacy .mat-form-field-infix{padding:0;border:0}[mat-pagination-wrapper] .mat-form-field-appearance-legacy .mat-form-field-label-wrapper{padding:0}[mat-pagination-wrapper] .mat-form-field-appearance-legacy .mat-form-field-underline{bottom:-2px}.cdk-keyboard-focused{outline:2px solid black!important}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.CopyleaksTranslateService }, { type: i2.LiveAnnouncer }]; }, propDecorators: { totalPages: [{
                type: Input
            }], page: [{
                type: Output
            }], currentPage: [{
                type: Input
            }], currentPageChange: [{
                type: Output
            }], disabled: [{
                type: Input
            }], showFirstLastButtons: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,