import { Component, EventEmitter, HostBinding, Input, Output, } from '@angular/core';
import packageInfo from '../report-version.json';
import { untilDestroy } from '../shared/operators/untilDestroy';
import { HighlightService } from './services/highlight.service';
import { MatchService } from './services/match.service';
import { ReportService } from './services/report.service';
import { StatisticsService } from './services/statistics.service';
import { EReportViewModel, ViewModeService } from './services/view-mode.service';
import { IconRegistryService } from './services/icon-registry.service';
import * as i0 from "@angular/core";
import * as i1 from "./services/report.service";
import * as i2 from "./services/copyleaks.service";
import * as i3 from "./services/view-mode.service";
import * as i4 from "./services/direction.service";
import * as i5 from "./services/icon-registry.service";
import * as i6 from "./components/properties/properties.component";
import * as i7 from "./components/original/original.component";
import * as i8 from "./components/suspect/suspect.component";
import * as i9 from "./components/results/results.component";
import * as i10 from "./components/alerts/alerts.component";
import * as i11 from "@angular/common";
import * as i12 from "@angular/flex-layout/flex";
import * as i13 from "@angular/flex-layout/extended";
import * as i14 from "../expansion-panel/expansion-panel.component";
export class CopyleaksReportComponent {
    constructor(reportService, copyleaksService, viewModeService, directionService, el, renderer, iconRegistryService) {
        this.reportService = reportService;
        this.copyleaksService = copyleaksService;
        this.viewModeService = viewModeService;
        this.directionService = directionService;
        this.el = el;
        this.iconRegistryService = iconRegistryService;
        this.typography = true;
        this.config = {};
        this.isPDFDownloading = false;
        this.hideCreationTime = false;
        this.showProductUpgradeButton = false;
        this.showAIContentProperty = true;
        this.configChange = new EventEmitter();
        this.help = new EventEmitter();
        this.share = new EventEmitter();
        this.download = new EventEmitter();
        this.propertiesExpandChange = new EventEmitter();
        this.upgradePlan = new EventEmitter();
        this.upgradeProduct = new EventEmitter();
        this.dir = 'ltr';
        this.resultsActive = false;
        this.aaa = false;
        this.hasResultsOverlay = false;
        this.eReportViewModel = EReportViewModel;
        renderer.setAttribute(el.nativeElement, 'plagiarism-report-version', packageInfo.version);
    }
    get isOneToOne() {
        return this.viewMode === 'one-to-one';
    }
    get isOneToMany() {
        return this.viewMode === 'one-to-many';
    }
    /**
     * life-cycle method
     * Initialize the component view mode
     */
    ngOnInit() {
        this.directionService.setDir(this.dir);
        const { viewMode$, helpClick$, shareClick$, downloadClick$, configChange$, planUpgradeEvent$ } = this.reportService;
        viewMode$.pipe(untilDestroy(this)).subscribe(viewMode => (this.viewMode = viewMode));
        helpClick$.pipe(untilDestroy(this)).subscribe(data => this.help.emit(data));
        shareClick$.pipe(untilDestroy(this)).subscribe(data => this.share.emit(data));
        downloadClick$.pipe(untilDestroy(this)).subscribe(data => this.download.emit(data));
        planUpgradeEvent$.pipe(untilDestroy(this)).subscribe(data => this.upgradePlan.emit(data));
        configChange$.pipe(untilDestroy(this)).subscribe(config => this.configChange.emit(config));
        this.hasResultsOverlay = !!this.config && !!this.config.resultsOverlayComponent;
        this.viewModeService.reportViewMode$
            .pipe(untilDestroy(this))
            .subscribe(viewMode => (this.reportViewMode = viewMode));
        this.iconRegistryService.init();
    }
    /**
     * Life-cycle method
     * Handles `changes` for input properties
     * @param changes the changes
     */
    ngOnChanges(changes) {
        if (changes.config) {
            this.copyleaksService.setConfig({ ...changes.config.currentValue });
            this.hasResultsOverlay = !!changes.config.currentValue && !!changes.config.currentValue.resultsOverlayComponent;
        }
    }
    /**
     * Life-cycle method
     * empty for `untilDestroy` rxjs operator
     */
    ngOnDestroy() { }
}
CopyleaksReportComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.3", ngImport: i0, type: CopyleaksReportComponent, deps: [{ token: i1.ReportService }, { token: i2.CopyleaksService }, { token: i3.ViewModeService }, { token: i4.DirectionService }, { token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i5.IconRegistryService }], target: i0.ɵɵFactoryTarget.Component });
CopyleaksReportComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.3", type: CopyleaksReportComponent, selector: "cr-copyleaks-report", inputs: { config: "config", isPDFDownloading: "isPDFDownloading", hideCreationTime: "hideCreationTime", showProductUpgradeButton: "showProductUpgradeButton", showAIContentProperty: "showAIContentProperty", dir: "dir" }, outputs: { configChange: "configChange", help: "help", share: "share", download: "download", propertiesExpandChange: "propertiesExpandChange", upgradePlan: "upgradePlan", upgradeProduct: "upgradeProduct" }, host: { properties: { "class.mat-typography": "this.typography", "class.one-to-one": "this.isOneToOne", "class.one-to-many": "this.isOneToMany" } }, providers: [ReportService, StatisticsService, MatchService, HighlightService, ViewModeService, IconRegistryService], usesOnChanges: true, ngImport: i0, template: "<cr-properties\n\t*ngIf=\"!hasResultsOverlay\"\n\t[scanSummaryComponent]=\"config.scanSummaryComponent\"\n\t[isPDFDownloading]=\"isPDFDownloading\"\n\t[hideCreationTime]=\"hideCreationTime\"\n\t[expanded]=\"config.propertiesExpanded != null ? config.propertiesExpanded : true\"\n\t(expandChange)=\"propertiesExpandChange.emit($event)\"\n\t(upgrade)=\"upgradeProduct.emit($event)\"\n\t[showUpgradeButton]=\"showProductUpgradeButton\"\n\t[showAIContentProperty]=\"showAIContentProperty\">\n\t<ng-content select=\"cr-custom-report-action\"></ng-content>\n</cr-properties>\n\n<div\n\tmain-wrapper\n\tfxLayout=\"row nowrap\"\n\tfxLayoutAlign=\"start stretch\"\n\tfxLayout.lt-sm=\"column nowrap\"\n\t[class]=\"'cr-report-' + dir\">\n\t<cr-original [style.margin-right]=\"reportViewMode == eReportViewModel.ScanningResult ? '1em' : ''\"></cr-original>\n\t<ng-container *ngIf=\"reportViewMode == eReportViewModel.ScanningResult\">\n\t\t<cr-suspect [fxShow]=\"isOneToOne\"></cr-suspect>\n\t\t<cr-results [fxShow]=\"isOneToMany\"></cr-results>\n\t</ng-container>\n\t<ng-container *ngIf=\"reportViewMode == eReportViewModel.Alerts\">\n\t\t<cr-alerts></cr-alerts>\n\t</ng-container>\n</div>\n", styles: [".sat-tooltip{color:#fff;border-radius:4px;margin:14px;max-width:250px;padding:.5em;overflow:hidden;text-overflow:ellipsis;background:rgba(0,0,0,.8)}.identical{background-color:#ff796e}.minor-changes{background-color:#ff9a9a}.related{background-color:#ffd9b0}.omitted{background-color:#fff}.text-identical{color:#ff796e}.text-minor-changes{color:#ff9a9a}.text-related{color:#ffd9b0}.dot{border:1px solid #171717;width:1.5em;min-width:1.5em;min-height:1.5em;height:1.5em;border-radius:50%}@media screen and (max-width: 959px){.dot{width:1em;min-width:1em;min-height:1em;height:1em}}.copyleaks-report-dialog .mat-dialog-container{padding:0}.cdk-keyboard-focused{outline:2px solid black!important}:host{display:contents;flex-flow:column nowrap;position:relative;width:100%}[wrapper]{display:flex;flex-flow:column nowrap;position:relative;place-content:center start}cr-properties{width:100%}@media screen and (max-width: 599px){cr-properties{margin-bottom:0}}[main-wrapper]{height:100%;padding:1em}@media screen and (max-width: 599px){[main-wrapper]{position:relative;overflow:hidden}}cr-original{flex:1}@media screen and (max-width: 599px){cr-original{width:100%;height:100%;background-color:#fff}cr-original:focus{flex:2}}cr-results{width:30%;max-width:530px}@media screen and (max-width: 599px){cr-results{flex:1;position:absolute;width:calc(100% - 2em);height:calc(100% - 2em);background-color:#fff}cr-results:not(.active){top:calc(100% - 2.35em)}}@media screen and (max-width: 599px){:host(.one-to-many) cr-original{padding-bottom:calc(2.35em - 2px)}}:host(.one-to-one) cr-original{max-width:50%}@media screen and (max-width: 599px){:host(.one-to-one) cr-original{max-width:100%;margin-bottom:-1px}}:host(.one-to-one) cr-suspect{flex:1;width:50%;max-width:50%}@media screen and (max-width: 599px){:host(.one-to-one) cr-suspect{width:100%;max-width:100%}}.cr-report-rtl cr-original{margin-right:0;margin-left:1em}\n"], components: [{ type: i6.PropertiesComponent, selector: "cr-properties", inputs: ["scanSummaryComponent", "isPDFDownloading", "hideCreationTime", "expanded", "showUpgradeButton", "showAIContentProperty"], outputs: ["upgrade", "expandChange"] }, { type: i7.OriginalComponent, selector: "cr-original" }, { type: i8.SuspectComponent, selector: "cr-suspect" }, { type: i9.ResultsComponent, selector: "cr-results" }, { type: i10.AlertsComponent, selector: "cr-alerts" }], directives: [{ type: i11.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i12.DefaultLayoutDirective, selector: "  [fxLayout], [fxLayout.xs], [fxLayout.sm], [fxLayout.md],  [fxLayout.lg], [fxLayout.xl], [fxLayout.lt-sm], [fxLayout.lt-md],  [fxLayout.lt-lg], [fxLayout.lt-xl], [fxLayout.gt-xs], [fxLayout.gt-sm],  [fxLayout.gt-md], [fxLayout.gt-lg]", inputs: ["fxLayout", "fxLayout.xs", "fxLayout.sm", "fxLayout.md", "fxLayout.lg", "fxLayout.xl", "fxLayout.lt-sm", "fxLayout.lt-md", "fxLayout.lt-lg", "fxLayout.lt-xl", "fxLayout.gt-xs", "fxLayout.gt-sm", "fxLayout.gt-md", "fxLayout.gt-lg"] }, { type: i12.DefaultLayoutAlignDirective, selector: "  [fxLayoutAlign], [fxLayoutAlign.xs], [fxLayoutAlign.sm], [fxLayoutAlign.md],  [fxLayoutAlign.lg], [fxLayoutAlign.xl], [fxLayoutAlign.lt-sm], [fxLayoutAlign.lt-md],  [fxLayoutAlign.lt-lg], [fxLayoutAlign.lt-xl], [fxLayoutAlign.gt-xs], [fxLayoutAlign.gt-sm],  [fxLayoutAlign.gt-md], [fxLayoutAlign.gt-lg]", inputs: ["fxLayoutAlign", "fxLayoutAlign.xs", "fxLayoutAlign.sm", "fxLayoutAlign.md", "fxLayoutAlign.lg", "fxLayoutAlign.xl", "fxLayoutAlign.lt-sm", "fxLayoutAlign.lt-md", "fxLayoutAlign.lt-lg", "fxLayoutAlign.lt-xl", "fxLayoutAlign.gt-xs", "fxLayoutAlign.gt-sm", "fxLayoutAlign.gt-md", "fxLayoutAlign.gt-lg"] }, { type: i13.DefaultShowHideDirective, selector: "  [fxShow], [fxShow.print],  [fxShow.xs], [fxShow.sm], [fxShow.md], [fxShow.lg], [fxShow.xl],  [fxShow.lt-sm], [fxShow.lt-md], [fxShow.lt-lg], [fxShow.lt-xl],  [fxShow.gt-xs], [fxShow.gt-sm], [fxShow.gt-md], [fxShow.gt-lg],  [fxHide], [fxHide.print],  [fxHide.xs], [fxHide.sm], [fxHide.md], [fxHide.lg], [fxHide.xl],  [fxHide.lt-sm], [fxHide.lt-md], [fxHide.lt-lg], [fxHide.lt-xl],  [fxHide.gt-xs], [fxHide.gt-sm], [fxHide.gt-md], [fxHide.gt-lg]", inputs: ["fxShow", "fxShow.print", "fxShow.xs", "fxShow.sm", "fxShow.md", "fxShow.lg", "fxShow.xl", "fxShow.lt-sm", "fxShow.lt-md", "fxShow.lt-lg", "fxShow.lt-xl", "fxShow.gt-xs", "fxShow.gt-sm", "fxShow.gt-md", "fxShow.gt-lg", "fxHide", "fxHide.print", "fxHide.xs", "fxHide.sm", "fxHide.md", "fxHide.lg", "fxHide.xl", "fxHide.lt-sm", "fxHide.lt-md", "fxHide.lt-lg", "fxHide.lt-xl", "fxHide.gt-xs", "fxHide.gt-sm", "fxHide.gt-md", "fxHide.gt-lg"] }], animations: [] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.3", ngImport: i0, type: CopyleaksReportComponent, decorators: [{
            type: Component,
            args: [{ selector: 'cr-copyleaks-report', animations: [], providers: [ReportService, StatisticsService, MatchService, HighlightService, ViewModeService, IconRegistryService], template: "<cr-properties\n\t*ngIf=\"!hasResultsOverlay\"\n\t[scanSummaryComponent]=\"config.scanSummaryComponent\"\n\t[isPDFDownloading]=\"isPDFDownloading\"\n\t[hideCreationTime]=\"hideCreationTime\"\n\t[expanded]=\"config.propertiesExpanded != null ? config.propertiesExpanded : true\"\n\t(expandChange)=\"propertiesExpandChange.emit($event)\"\n\t(upgrade)=\"upgradeProduct.emit($event)\"\n\t[showUpgradeButton]=\"showProductUpgradeButton\"\n\t[showAIContentProperty]=\"showAIContentProperty\">\n\t<ng-content select=\"cr-custom-report-action\"></ng-content>\n</cr-properties>\n\n<div\n\tmain-wrapper\n\tfxLayout=\"row nowrap\"\n\tfxLayoutAlign=\"start stretch\"\n\tfxLayout.lt-sm=\"column nowrap\"\n\t[class]=\"'cr-report-' + dir\">\n\t<cr-original [style.margin-right]=\"reportViewMode == eReportViewModel.ScanningResult ? '1em' : ''\"></cr-original>\n\t<ng-container *ngIf=\"reportViewMode == eReportViewModel.ScanningResult\">\n\t\t<cr-suspect [fxShow]=\"isOneToOne\"></cr-suspect>\n\t\t<cr-results [fxShow]=\"isOneToMany\"></cr-results>\n\t</ng-container>\n\t<ng-container *ngIf=\"reportViewMode == eReportViewModel.Alerts\">\n\t\t<cr-alerts></cr-alerts>\n\t</ng-container>\n</div>\n", styles: [".sat-tooltip{color:#fff;border-radius:4px;margin:14px;max-width:250px;padding:.5em;overflow:hidden;text-overflow:ellipsis;background:rgba(0,0,0,.8)}.identical{background-color:#ff796e}.minor-changes{background-color:#ff9a9a}.related{background-color:#ffd9b0}.omitted{background-color:#fff}.text-identical{color:#ff796e}.text-minor-changes{color:#ff9a9a}.text-related{color:#ffd9b0}.dot{border:1px solid #171717;width:1.5em;min-width:1.5em;min-height:1.5em;height:1.5em;border-radius:50%}@media screen and (max-width: 959px){.dot{width:1em;min-width:1em;min-height:1em;height:1em}}.copyleaks-report-dialog .mat-dialog-container{padding:0}.cdk-keyboard-focused{outline:2px solid black!important}:host{display:contents;flex-flow:column nowrap;position:relative;width:100%}[wrapper]{display:flex;flex-flow:column nowrap;position:relative;place-content:center start}cr-properties{width:100%}@media screen and (max-width: 599px){cr-properties{margin-bottom:0}}[main-wrapper]{height:100%;padding:1em}@media screen and (max-width: 599px){[main-wrapper]{position:relative;overflow:hidden}}cr-original{flex:1}@media screen and (max-width: 599px){cr-original{width:100%;height:100%;background-color:#fff}cr-original:focus{flex:2}}cr-results{width:30%;max-width:530px}@media screen and (max-width: 599px){cr-results{flex:1;position:absolute;width:calc(100% - 2em);height:calc(100% - 2em);background-color:#fff}cr-results:not(.active){top:calc(100% - 2.35em)}}@media screen and (max-width: 599px){:host(.one-to-many) cr-original{padding-bottom:calc(2.35em - 2px)}}:host(.one-to-one) cr-original{max-width:50%}@media screen and (max-width: 599px){:host(.one-to-one) cr-original{max-width:100%;margin-bottom:-1px}}:host(.one-to-one) cr-suspect{flex:1;width:50%;max-width:50%}@media screen and (max-width: 599px){:host(.one-to-one) cr-suspect{width:100%;max-width:100%}}.cr-report-rtl cr-original{margin-right:0;margin-left:1em}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.ReportService }, { type: i2.CopyleaksService }, { type: i3.ViewModeService }, { type: i4.DirectionService }, { type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i5.IconRegistryService }]; }, propDecorators: { typography: [{
                type: HostBinding,
                args: ['class.mat-typography']
            }], isOneToOne: [{
                type: HostBinding,
                args: ['class.one-to-one']
            }], isOneToMany: [{
                type: HostBinding,
                args: ['class.one-to-many']
            }], config: [{
                type: Input
            }], isPDFDownloading: [{
                type: Input
            }], hideCreationTime: [{
                type: Input
            }], showProductUpgradeButton: [{
                type: Input
            }], showAIContentProperty: [{
                type: Input
            }], configChange: [{
                type: Output
            }], help: [{
                type: Output
            }], share: [{
                type: Output
            }], download: [{
                type: Output
            }], propertiesExpandChange: [{
                type: Output
            }], upgradePlan: [{
                type: Output
            }], upgradeProduct: [{
                type: Output
            }], dir: [{
                type: Input
            }] } });
export class CustomReportActionComponent {
}
CustomReportActionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.3", ngImport: i0, type: CustomReportActionComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
CustomReportActionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.3", type: CustomReportActionComponent, selector: "cr-custom-report-action", ngImport: i0, template: '<cr-expansion-panel-menu-item><ng-content></ng-content></cr-expansion-panel-menu-item>', isInline: true, components: [{ type: i14.ExpansionPanelMenuItemComponent, selector: "cr-expansion-panel-menu-item" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.3", ngImport: i0, type: CustomReportActionComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'cr-custom-report-action',
                    template: '<cr-expansion-panel-menu-item><ng-content></ng-content></cr-expansion-panel-menu-item>',
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29weWxlYWtzLXJlcG9ydC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9wbGFnaWFyaXNtLXJlcG9ydC9zcmMvbGliL3BsYWdpYXJpc20tcmVwb3J0L2NvcHlsZWFrcy1yZXBvcnQuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvcGxhZ2lhcmlzbS1yZXBvcnQvc3JjL2xpYi9wbGFnaWFyaXNtLXJlcG9ydC9jb3B5bGVha3MtcmVwb3J0LmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDTixTQUFTLEVBRVQsWUFBWSxFQUNaLFdBQVcsRUFDWCxLQUFLLEVBSUwsTUFBTSxHQUdOLE1BQU0sZUFBZSxDQUFDO0FBRXZCLE9BQU8sV0FBVyxNQUFNLHdCQUF3QixDQUFDO0FBQ2pELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUloRSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUNoRSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDeEQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBQzFELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQ2xFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxlQUFlLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUVqRixPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7OztBQVF2RSxNQUFNLE9BQU8sd0JBQXdCO0lBaURwQyxZQUNTLGFBQTRCLEVBQzVCLGdCQUFrQyxFQUNsQyxlQUFnQyxFQUNoQyxnQkFBa0MsRUFDbkMsRUFBYyxFQUNyQixRQUFtQixFQUNYLG1CQUF3QztRQU54QyxrQkFBYSxHQUFiLGFBQWEsQ0FBZTtRQUM1QixxQkFBZ0IsR0FBaEIsZ0JBQWdCLENBQWtCO1FBQ2xDLG9CQUFlLEdBQWYsZUFBZSxDQUFpQjtRQUNoQyxxQkFBZ0IsR0FBaEIsZ0JBQWdCLENBQWtCO1FBQ25DLE9BQUUsR0FBRixFQUFFLENBQVk7UUFFYix3QkFBbUIsR0FBbkIsbUJBQW1CLENBQXFCO1FBdERqQyxlQUFVLEdBQUcsSUFBSSxDQUFDO1FBVzNCLFdBQU0sR0FBMEIsRUFBRSxDQUFDO1FBRW5DLHFCQUFnQixHQUFHLEtBQUssQ0FBQztRQUV6QixxQkFBZ0IsR0FBRyxLQUFLLENBQUM7UUFFekIsNkJBQXdCLEdBQUcsS0FBSyxDQUFDO1FBRWpDLDBCQUFxQixHQUFHLElBQUksQ0FBQztRQUc3QixpQkFBWSxHQUFHLElBQUksWUFBWSxFQUF5QixDQUFDO1FBRXpELFNBQUksR0FBRyxJQUFJLFlBQVksRUFBYyxDQUFDO1FBRXRDLFVBQUssR0FBRyxJQUFJLFlBQVksRUFBYyxDQUFDO1FBRXZDLGFBQVEsR0FBRyxJQUFJLFlBQVksRUFBYyxDQUFDO1FBRTFDLDJCQUFzQixHQUFHLElBQUksWUFBWSxFQUFXLENBQUM7UUFFckQsZ0JBQVcsR0FBRyxJQUFJLFlBQVksRUFBVSxDQUFDO1FBRXpDLG1CQUFjLEdBQUcsSUFBSSxZQUFZLEVBQXNCLENBQUM7UUFHeEQsUUFBRyxHQUFrQixLQUFLLENBQUM7UUFHM0Isa0JBQWEsR0FBRyxLQUFLLENBQUM7UUFDdEIsUUFBRyxHQUFHLEtBQUssQ0FBQztRQUNaLHNCQUFpQixHQUFHLEtBQUssQ0FBQztRQUcxQixxQkFBZ0IsR0FBRyxnQkFBZ0IsQ0FBQztRQVcxQyxRQUFRLENBQUMsWUFBWSxDQUFDLEVBQUUsQ0FBQyxhQUFhLEVBQUUsMkJBQTJCLEVBQUUsV0FBVyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQzNGLENBQUM7SUF2REQsSUFBcUMsVUFBVTtRQUM5QyxPQUFPLElBQUksQ0FBQyxRQUFRLEtBQUssWUFBWSxDQUFDO0lBQ3ZDLENBQUM7SUFFRCxJQUFzQyxXQUFXO1FBQ2hELE9BQU8sSUFBSSxDQUFDLFFBQVEsS0FBSyxhQUFhLENBQUM7SUFDeEMsQ0FBQztJQW1ERDs7O09BR0c7SUFDSCxRQUFRO1FBQ1AsSUFBSSxDQUFDLGdCQUFnQixDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDdkMsTUFBTSxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsV0FBVyxFQUFFLGNBQWMsRUFBRSxhQUFhLEVBQUUsaUJBQWlCLEVBQUUsR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDO1FBQ3BILFNBQVMsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQyxDQUFDLENBQUM7UUFDckYsVUFBVSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO1FBQzVFLFdBQVcsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztRQUM5RSxjQUFjLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7UUFDcEYsaUJBQWlCLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7UUFDMUYsYUFBYSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO1FBQzNGLElBQUksQ0FBQyxpQkFBaUIsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyx1QkFBdUIsQ0FBQztRQUVoRixJQUFJLENBQUMsZUFBZSxDQUFDLGVBQWU7YUFDbEMsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsQ0FBQzthQUN4QixTQUFTLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxjQUFjLEdBQUcsUUFBUSxDQUFDLENBQUMsQ0FBQztRQUUxRCxJQUFJLENBQUMsbUJBQW1CLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDakMsQ0FBQztJQUVEOzs7O09BSUc7SUFDSCxXQUFXLENBQUMsT0FBc0I7UUFDakMsSUFBSSxPQUFPLENBQUMsTUFBTSxFQUFFO1lBQ25CLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxTQUFTLENBQUMsRUFBRSxHQUFHLE9BQU8sQ0FBQyxNQUFNLENBQUMsWUFBWSxFQUFFLENBQUMsQ0FBQztZQUNwRSxJQUFJLENBQUMsaUJBQWlCLEdBQUcsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsWUFBWSxJQUFJLENBQUMsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLFlBQVksQ0FBQyx1QkFBdUIsQ0FBQztTQUNoSDtJQUNGLENBQUM7SUFFRDs7O09BR0c7SUFDSCxXQUFXLEtBQUksQ0FBQzs7cUhBbkdKLHdCQUF3Qjt5R0FBeEIsd0JBQXdCLDhtQkFGekIsQ0FBQyxhQUFhLEVBQUUsaUJBQWlCLEVBQUUsWUFBWSxFQUFFLGdCQUFnQixFQUFFLGVBQWUsRUFBRSxtQkFBbUIsQ0FBQywrQ0MvQnBILDhwQ0E0QkEsMGlKREVhLEVBQUU7MkZBR0Ysd0JBQXdCO2tCQVBwQyxTQUFTOytCQUNDLHFCQUFxQixjQUduQixFQUFFLGFBQ0gsQ0FBQyxhQUFhLEVBQUUsaUJBQWlCLEVBQUUsWUFBWSxFQUFFLGdCQUFnQixFQUFFLGVBQWUsRUFBRSxtQkFBbUIsQ0FBQzttUkFJbkcsVUFBVTtzQkFEekIsV0FBVzt1QkFBQyxzQkFBc0I7Z0JBR0UsVUFBVTtzQkFBOUMsV0FBVzt1QkFBQyxrQkFBa0I7Z0JBSU8sV0FBVztzQkFBaEQsV0FBVzt1QkFBQyxtQkFBbUI7Z0JBS3pCLE1BQU07c0JBRFosS0FBSztnQkFHQyxnQkFBZ0I7c0JBRHRCLEtBQUs7Z0JBR0MsZ0JBQWdCO3NCQUR0QixLQUFLO2dCQUdDLHdCQUF3QjtzQkFEOUIsS0FBSztnQkFHQyxxQkFBcUI7c0JBRDNCLEtBQUs7Z0JBSUMsWUFBWTtzQkFEbEIsTUFBTTtnQkFHQSxJQUFJO3NCQURWLE1BQU07Z0JBR0EsS0FBSztzQkFEWCxNQUFNO2dCQUdBLFFBQVE7c0JBRGQsTUFBTTtnQkFHQSxzQkFBc0I7c0JBRDVCLE1BQU07Z0JBR0EsV0FBVztzQkFEakIsTUFBTTtnQkFHQSxjQUFjO3NCQURwQixNQUFNO2dCQUlBLEdBQUc7c0JBRFQsS0FBSzs7QUFvRVAsTUFBTSxPQUFPLDJCQUEyQjs7d0hBQTNCLDJCQUEyQjs0R0FBM0IsMkJBQTJCLCtEQUY3Qix3RkFBd0Y7MkZBRXRGLDJCQUEyQjtrQkFKdkMsU0FBUzttQkFBQztvQkFDVixRQUFRLEVBQUUseUJBQXlCO29CQUNuQyxRQUFRLEVBQUUsd0ZBQXdGO2lCQUNsRyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG5cdENvbXBvbmVudCxcblx0RWxlbWVudFJlZixcblx0RXZlbnRFbWl0dGVyLFxuXHRIb3N0QmluZGluZyxcblx0SW5wdXQsXG5cdE9uQ2hhbmdlcyxcblx0T25EZXN0cm95LFxuXHRPbkluaXQsXG5cdE91dHB1dCxcblx0UmVuZGVyZXIyLFxuXHRTaW1wbGVDaGFuZ2VzLFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHBhY2thZ2VJbmZvIGZyb20gJy4uL3JlcG9ydC12ZXJzaW9uLmpzb24nO1xuaW1wb3J0IHsgdW50aWxEZXN0cm95IH0gZnJvbSAnLi4vc2hhcmVkL29wZXJhdG9ycy91bnRpbERlc3Ryb3knO1xuaW1wb3J0IHsgQ29weWxlYWtzUmVwb3J0Q29uZmlnLCBWaWV3TW9kZSB9IGZyb20gJy4vbW9kZWxzL0NvcHlsZWFrc1JlcG9ydENvbmZpZyc7XG5pbXBvcnQgeyBDb3B5bGVha3NTZXJ2aWNlIH0gZnJvbSAnLi9zZXJ2aWNlcy9jb3B5bGVha3Muc2VydmljZSc7XG5pbXBvcnQgeyBEaXJlY3Rpb25TZXJ2aWNlIH0gZnJvbSAnLi9zZXJ2aWNlcy9kaXJlY3Rpb24uc2VydmljZSc7XG5pbXBvcnQgeyBIaWdobGlnaHRTZXJ2aWNlIH0gZnJvbSAnLi9zZXJ2aWNlcy9oaWdobGlnaHQuc2VydmljZSc7XG5pbXBvcnQgeyBNYXRjaFNlcnZpY2UgfSBmcm9tICcuL3NlcnZpY2VzL21hdGNoLnNlcnZpY2UnO1xuaW1wb3J0IHsgUmVwb3J0U2VydmljZSB9IGZyb20gJy4vc2VydmljZXMvcmVwb3J0LnNlcnZpY2UnO1xuaW1wb3J0IHsgU3RhdGlzdGljc1NlcnZpY2UgfSBmcm9tICcuL3NlcnZpY2VzL3N0YXRpc3RpY3Muc2VydmljZSc7XG5pbXBvcnQgeyBFUmVwb3J0Vmlld01vZGVsLCBWaWV3TW9kZVNlcnZpY2UgfSBmcm9tICcuL3NlcnZpY2VzL3ZpZXctbW9kZS5zZXJ2aWNlJztcbmltcG9ydCB7IEVDUlBhY2thZ2VQcm9kdWN0cyB9IGZyb20gJy4vbW9kZWxzJztcbmltcG9ydCB7IEljb25SZWdpc3RyeVNlcnZpY2UgfSBmcm9tICcuL3NlcnZpY2VzL2ljb24tcmVnaXN0cnkuc2VydmljZSc7XG5AQ29tcG9uZW50KHtcblx0c2VsZWN0b3I6ICdjci1jb3B5bGVha3MtcmVwb3J0Jyxcblx0dGVtcGxhdGVVcmw6ICdjb3B5bGVha3MtcmVwb3J0LmNvbXBvbmVudC5odG1sJyxcblx0c3R5bGVVcmxzOiBbJy4vY29weWxlYWtzLXJlcG9ydC5jb21wb25lbnQuc2NzcyddLFxuXHRhbmltYXRpb25zOiBbXSxcblx0cHJvdmlkZXJzOiBbUmVwb3J0U2VydmljZSwgU3RhdGlzdGljc1NlcnZpY2UsIE1hdGNoU2VydmljZSwgSGlnaGxpZ2h0U2VydmljZSwgVmlld01vZGVTZXJ2aWNlLCBJY29uUmVnaXN0cnlTZXJ2aWNlXSxcbn0pXG5leHBvcnQgY2xhc3MgQ29weWxlYWtzUmVwb3J0Q29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3ksIE9uQ2hhbmdlcyB7XG5cdEBIb3N0QmluZGluZygnY2xhc3MubWF0LXR5cG9ncmFwaHknKVxuXHRwdWJsaWMgcmVhZG9ubHkgdHlwb2dyYXBoeSA9IHRydWU7XG5cblx0QEhvc3RCaW5kaW5nKCdjbGFzcy5vbmUtdG8tb25lJykgZ2V0IGlzT25lVG9PbmUoKSB7XG5cdFx0cmV0dXJuIHRoaXMudmlld01vZGUgPT09ICdvbmUtdG8tb25lJztcblx0fVxuXG5cdEBIb3N0QmluZGluZygnY2xhc3Mub25lLXRvLW1hbnknKSBnZXQgaXNPbmVUb01hbnkoKSB7XG5cdFx0cmV0dXJuIHRoaXMudmlld01vZGUgPT09ICdvbmUtdG8tbWFueSc7XG5cdH1cblxuXHRASW5wdXQoKVxuXHRwdWJsaWMgY29uZmlnOiBDb3B5bGVha3NSZXBvcnRDb25maWcgPSB7fTtcblx0QElucHV0KClcblx0cHVibGljIGlzUERGRG93bmxvYWRpbmcgPSBmYWxzZTtcblx0QElucHV0KClcblx0cHVibGljIGhpZGVDcmVhdGlvblRpbWUgPSBmYWxzZTtcblx0QElucHV0KClcblx0cHVibGljIHNob3dQcm9kdWN0VXBncmFkZUJ1dHRvbiA9IGZhbHNlO1xuXHRASW5wdXQoKVxuXHRwdWJsaWMgc2hvd0FJQ29udGVudFByb3BlcnR5ID0gdHJ1ZTtcblxuXHRAT3V0cHV0KClcblx0cHVibGljIGNvbmZpZ0NoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXI8Q29weWxlYWtzUmVwb3J0Q29uZmlnPigpO1xuXHRAT3V0cHV0KClcblx0cHVibGljIGhlbHAgPSBuZXcgRXZlbnRFbWl0dGVyPE1vdXNlRXZlbnQ+KCk7XG5cdEBPdXRwdXQoKVxuXHRwdWJsaWMgc2hhcmUgPSBuZXcgRXZlbnRFbWl0dGVyPE1vdXNlRXZlbnQ+KCk7XG5cdEBPdXRwdXQoKVxuXHRwdWJsaWMgZG93bmxvYWQgPSBuZXcgRXZlbnRFbWl0dGVyPE1vdXNlRXZlbnQ+KCk7XG5cdEBPdXRwdXQoKVxuXHRwdWJsaWMgcHJvcGVydGllc0V4cGFuZENoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXI8Ym9vbGVhbj4oKTtcblx0QE91dHB1dCgpXG5cdHB1YmxpYyB1cGdyYWRlUGxhbiA9IG5ldyBFdmVudEVtaXR0ZXI8bnVtYmVyPigpO1xuXHRAT3V0cHV0KClcblx0cHVibGljIHVwZ3JhZGVQcm9kdWN0ID0gbmV3IEV2ZW50RW1pdHRlcjxFQ1JQYWNrYWdlUHJvZHVjdHM+KCk7XG5cblx0QElucHV0KClcblx0cHVibGljIGRpcjogJ3J0bCcgfCAnbHRyJyA9ICdsdHInO1xuXG5cdHB1YmxpYyB2aWV3TW9kZTogVmlld01vZGU7XG5cdHB1YmxpYyByZXN1bHRzQWN0aXZlID0gZmFsc2U7XG5cdHB1YmxpYyBhYWEgPSBmYWxzZTtcblx0cHVibGljIGhhc1Jlc3VsdHNPdmVybGF5ID0gZmFsc2U7XG5cblx0cHVibGljIHJlcG9ydFZpZXdNb2RlOiBFUmVwb3J0Vmlld01vZGVsO1xuXHRwdWJsaWMgZVJlcG9ydFZpZXdNb2RlbCA9IEVSZXBvcnRWaWV3TW9kZWw7XG5cblx0Y29uc3RydWN0b3IoXG5cdFx0cHJpdmF0ZSByZXBvcnRTZXJ2aWNlOiBSZXBvcnRTZXJ2aWNlLFxuXHRcdHByaXZhdGUgY29weWxlYWtzU2VydmljZTogQ29weWxlYWtzU2VydmljZSxcblx0XHRwcml2YXRlIHZpZXdNb2RlU2VydmljZTogVmlld01vZGVTZXJ2aWNlLFxuXHRcdHByaXZhdGUgZGlyZWN0aW9uU2VydmljZTogRGlyZWN0aW9uU2VydmljZSxcblx0XHRwdWJsaWMgZWw6IEVsZW1lbnRSZWYsXG5cdFx0cmVuZGVyZXI6IFJlbmRlcmVyMixcblx0XHRwcml2YXRlIGljb25SZWdpc3RyeVNlcnZpY2U6IEljb25SZWdpc3RyeVNlcnZpY2Vcblx0KSB7XG5cdFx0cmVuZGVyZXIuc2V0QXR0cmlidXRlKGVsLm5hdGl2ZUVsZW1lbnQsICdwbGFnaWFyaXNtLXJlcG9ydC12ZXJzaW9uJywgcGFja2FnZUluZm8udmVyc2lvbik7XG5cdH1cblxuXHQvKipcblx0ICogbGlmZS1jeWNsZSBtZXRob2Rcblx0ICogSW5pdGlhbGl6ZSB0aGUgY29tcG9uZW50IHZpZXcgbW9kZVxuXHQgKi9cblx0bmdPbkluaXQoKSB7XG5cdFx0dGhpcy5kaXJlY3Rpb25TZXJ2aWNlLnNldERpcih0aGlzLmRpcik7XG5cdFx0Y29uc3QgeyB2aWV3TW9kZSQsIGhlbHBDbGljayQsIHNoYXJlQ2xpY2skLCBkb3dubG9hZENsaWNrJCwgY29uZmlnQ2hhbmdlJCwgcGxhblVwZ3JhZGVFdmVudCQgfSA9IHRoaXMucmVwb3J0U2VydmljZTtcblx0XHR2aWV3TW9kZSQucGlwZSh1bnRpbERlc3Ryb3kodGhpcykpLnN1YnNjcmliZSh2aWV3TW9kZSA9PiAodGhpcy52aWV3TW9kZSA9IHZpZXdNb2RlKSk7XG5cdFx0aGVscENsaWNrJC5waXBlKHVudGlsRGVzdHJveSh0aGlzKSkuc3Vic2NyaWJlKGRhdGEgPT4gdGhpcy5oZWxwLmVtaXQoZGF0YSkpO1xuXHRcdHNoYXJlQ2xpY2skLnBpcGUodW50aWxEZXN0cm95KHRoaXMpKS5zdWJzY3JpYmUoZGF0YSA9PiB0aGlzLnNoYXJlLmVtaXQoZGF0YSkpO1xuXHRcdGRvd25sb2FkQ2xpY2skLnBpcGUodW50aWxEZXN0cm95KHRoaXMpKS5zdWJzY3JpYmUoZGF0YSA9PiB0aGlzLmRvd25sb2FkLmVtaXQoZGF0YSkpO1xuXHRcdHBsYW5VcGdyYWRlRXZlbnQkLnBpcGUodW50aWxEZXN0cm95KHRoaXMpKS5zdWJzY3JpYmUoZGF0YSA9PiB0aGlzLnVwZ3JhZGVQbGFuLmVtaXQoZGF0YSkpO1xuXHRcdGNvbmZpZ0NoYW5nZSQucGlwZSh1bnRpbERlc3Ryb3kodGhpcykpLnN1YnNjcmliZShjb25maWcgPT4gdGhpcy5jb25maWdDaGFuZ2UuZW1pdChjb25maWcpKTtcblx0XHR0aGlzLmhhc1Jlc3VsdHNPdmVybGF5ID0gISF0aGlzLmNvbmZpZyAmJiAhIXRoaXMuY29uZmlnLnJlc3VsdHNPdmVybGF5Q29tcG9uZW50O1xuXG5cdFx0dGhpcy52aWV3TW9kZVNlcnZpY2UucmVwb3J0Vmlld01vZGUkXG5cdFx0XHQucGlwZSh1bnRpbERlc3Ryb3kodGhpcykpXG5cdFx0XHQuc3Vic2NyaWJlKHZpZXdNb2RlID0+ICh0aGlzLnJlcG9ydFZpZXdNb2RlID0gdmlld01vZGUpKTtcblxuXHRcdHRoaXMuaWNvblJlZ2lzdHJ5U2VydmljZS5pbml0KCk7XG5cdH1cblxuXHQvKipcblx0ICogTGlmZS1jeWNsZSBtZXRob2Rcblx0ICogSGFuZGxlcyBgY2hhbmdlc2AgZm9yIGlucHV0IHByb3BlcnRpZXNcblx0ICogQHBhcmFtIGNoYW5nZXMgdGhlIGNoYW5nZXNcblx0ICovXG5cdG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpIHtcblx0XHRpZiAoY2hhbmdlcy5jb25maWcpIHtcblx0XHRcdHRoaXMuY29weWxlYWtzU2VydmljZS5zZXRDb25maWcoeyAuLi5jaGFuZ2VzLmNvbmZpZy5jdXJyZW50VmFsdWUgfSk7XG5cdFx0XHR0aGlzLmhhc1Jlc3VsdHNPdmVybGF5ID0gISFjaGFuZ2VzLmNvbmZpZy5jdXJyZW50VmFsdWUgJiYgISFjaGFuZ2VzLmNvbmZpZy5jdXJyZW50VmFsdWUucmVzdWx0c092ZXJsYXlDb21wb25lbnQ7XG5cdFx0fVxuXHR9XG5cblx0LyoqXG5cdCAqIExpZmUtY3ljbGUgbWV0aG9kXG5cdCAqIGVtcHR5IGZvciBgdW50aWxEZXN0cm95YCByeGpzIG9wZXJhdG9yXG5cdCAqL1xuXHRuZ09uRGVzdHJveSgpIHt9XG59XG5cbkBDb21wb25lbnQoe1xuXHRzZWxlY3RvcjogJ2NyLWN1c3RvbS1yZXBvcnQtYWN0aW9uJyxcblx0dGVtcGxhdGU6ICc8Y3ItZXhwYW5zaW9uLXBhbmVsLW1lbnUtaXRlbT48bmctY29udGVudD48L25nLWNvbnRlbnQ+PC9jci1leHBhbnNpb24tcGFuZWwtbWVudS1pdGVtPicsXG59KVxuZXhwb3J0IGNsYXNzIEN1c3RvbVJlcG9ydEFjdGlvbkNvbXBvbmVudCB7fVxuIiwiPGNyLXByb3BlcnRpZXNcblx0Km5nSWY9XCIhaGFzUmVzdWx0c092ZXJsYXlcIlxuXHRbc2NhblN1bW1hcnlDb21wb25lbnRdPVwiY29uZmlnLnNjYW5TdW1tYXJ5Q29tcG9uZW50XCJcblx0W2lzUERGRG93bmxvYWRpbmddPVwiaXNQREZEb3dubG9hZGluZ1wiXG5cdFtoaWRlQ3JlYXRpb25UaW1lXT1cImhpZGVDcmVhdGlvblRpbWVcIlxuXHRbZXhwYW5kZWRdPVwiY29uZmlnLnByb3BlcnRpZXNFeHBhbmRlZCAhPSBudWxsID8gY29uZmlnLnByb3BlcnRpZXNFeHBhbmRlZCA6IHRydWVcIlxuXHQoZXhwYW5kQ2hhbmdlKT1cInByb3BlcnRpZXNFeHBhbmRDaGFuZ2UuZW1pdCgkZXZlbnQpXCJcblx0KHVwZ3JhZGUpPVwidXBncmFkZVByb2R1Y3QuZW1pdCgkZXZlbnQpXCJcblx0W3Nob3dVcGdyYWRlQnV0dG9uXT1cInNob3dQcm9kdWN0VXBncmFkZUJ1dHRvblwiXG5cdFtzaG93QUlDb250ZW50UHJvcGVydHldPVwic2hvd0FJQ29udGVudFByb3BlcnR5XCI+XG5cdDxuZy1jb250ZW50IHNlbGVjdD1cImNyLWN1c3RvbS1yZXBvcnQtYWN0aW9uXCI+PC9uZy1jb250ZW50PlxuPC9jci1wcm9wZXJ0aWVzPlxuXG48ZGl2XG5cdG1haW4td3JhcHBlclxuXHRmeExheW91dD1cInJvdyBub3dyYXBcIlxuXHRmeExheW91dEFsaWduPVwic3RhcnQgc3RyZXRjaFwiXG5cdGZ4TGF5b3V0Lmx0LXNtPVwiY29sdW1uIG5vd3JhcFwiXG5cdFtjbGFzc109XCInY3ItcmVwb3J0LScgKyBkaXJcIj5cblx0PGNyLW9yaWdpbmFsIFtzdHlsZS5tYXJnaW4tcmlnaHRdPVwicmVwb3J0Vmlld01vZGUgPT0gZVJlcG9ydFZpZXdNb2RlbC5TY2FubmluZ1Jlc3VsdCA/ICcxZW0nIDogJydcIj48L2NyLW9yaWdpbmFsPlxuXHQ8bmctY29udGFpbmVyICpuZ0lmPVwicmVwb3J0Vmlld01vZGUgPT0gZVJlcG9ydFZpZXdNb2RlbC5TY2FubmluZ1Jlc3VsdFwiPlxuXHRcdDxjci1zdXNwZWN0IFtmeFNob3ddPVwiaXNPbmVUb09uZVwiPjwvY3Itc3VzcGVjdD5cblx0XHQ8Y3ItcmVzdWx0cyBbZnhTaG93XT1cImlzT25lVG9NYW55XCI+PC9jci1yZXN1bHRzPlxuXHQ8L25nLWNvbnRhaW5lcj5cblx0PG5nLWNvbnRhaW5lciAqbmdJZj1cInJlcG9ydFZpZXdNb2RlID09IGVSZXBvcnRWaWV3TW9kZWwuQWxlcnRzXCI+XG5cdFx0PGNyLWFsZXJ0cz48L2NyLWFsZXJ0cz5cblx0PC9uZy1jb250YWluZXI+XG48L2Rpdj5cbiJdfQ==