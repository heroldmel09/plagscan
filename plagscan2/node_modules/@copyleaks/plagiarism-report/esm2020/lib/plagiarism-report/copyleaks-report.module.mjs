import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { FlexLayoutModule } from '@angular/flex-layout';
import { FormsModule } from '@angular/forms';
import { MatButtonModule } from '@angular/material/button';
import { MatCheckboxModule } from '@angular/material/checkbox';
import { MatRippleModule } from '@angular/material/core';
import { MatDialogModule } from '@angular/material/dialog';
import { MatDividerModule } from '@angular/material/divider';
import { MatIconModule } from '@angular/material/icon';
import { MatInputModule } from '@angular/material/input';
import { MatListModule } from '@angular/material/list';
import { MatMenuModule } from '@angular/material/menu';
import { MatPaginatorModule } from '@angular/material/paginator';
import { MatProgressSpinnerModule } from '@angular/material/progress-spinner';
import { MatSlideToggleModule } from '@angular/material/slide-toggle';
import { MatTooltipModule } from '@angular/material/tooltip';
import { SatPopoverModule } from '@ncstate/sat-popover';
import { ChartCommonModule, PieChartModule } from '@swimlane/ngx-charts';
import { NgxSkeletonLoaderModule } from 'ngx-skeleton-loader';
import { ExpansionPanelModule } from '../expansion-panel/expansion-panel.module';
import { MatPaginationModule } from '../mat-pagination/mat-pagination.module';
import { PanelModule } from '../panel/panel.module';
import { SharedModule } from '../shared/shared.module';
import { OptionsDialogComponent } from './components/options-dialog/options-dialog.component';
import { OriginalComponent } from './components/original/original.component';
import { PoweredByComponent } from './components/powered-by/powered-by.component';
import { PropertiesComponent } from './components/properties/properties.component';
import { ResultCardComponent } from './components/result-card/result-card.component';
import { ResultsFilterDialogComponent } from './components/results-filter-dialog/results-filter-dialog.component';
import { ResultsComponent } from './components/results/results.component';
import { SuspectComponent } from './components/suspect/suspect.component';
import { CopyleaksReportComponent, CustomReportActionComponent } from './copyleaks-report.component';
import { VirtualScrollerModule } from 'ngx-virtual-scroller';
import { AlertCardComponent } from './components/alert-card/alert-card.component';
import { AlertsComponent } from './components/alerts/alerts.component';
import { ExcludePartialScanComponent } from './components/exclude-partial-scan/exclude-partial-scan.component';
import { OriginalHtmlHelperComponent } from './components/html-helpers/original-html-helper.component';
import { SourceHtmlHelperComponent } from './components/html-helpers/source-html-helper.component';
import { SuspectHtmlHelperComponent } from './components/html-helpers/suspect-html-helper.component';
import { MatchComponent } from './components/match/match.component';
import { NotificationsDialogComponent } from './components/notifications-dialog/notifications-dialog.component';
import { NotificationsComponent } from './components/notifications/notifications.component';
import { PlagiarismFreeComponent } from './components/plagiarism-free/plagiarism-free.component';
import { SpinnerComponent } from './components/spinner/spinner.component';
import { OriginalTextHelperDirective } from './components/text-helpers/original-text-helper.directive';
import { SourceTextHelperDirective } from './components/text-helpers/source-text-helper.directive';
import { SuspectTextHelperDirective } from './components/text-helpers/suspect-text-helper.directive';
import { CopyleaksTranslateService } from './services/copyleaks-translate.service';
import { CopyleaksService } from './services/copyleaks.service';
import { DirectionService } from './services/direction.service';
import { COPYLEAKS_CONFIG_INJECTION_TOKEN, COPYLEAKS_TEXT_CONFIG_INJECTION_TOKEN, DEFAULT_REPORT_CONFIG, DEFAULT_TEXT_CONFIG, } from './utils/constants';
import { IconRegistryService } from './services/icon-registry.service';
import * as i0 from "@angular/core";
export class CopyleaksReportModule {
    /**
     * Modify the config that is added to the root module providers
     * @param config the modified report config
     * @param textConfig config containing custom text messages
     */
    static forRoot(config = {}, textConfig = {}) {
        return {
            ngModule: CopyleaksReportModule,
            providers: [
                { provide: COPYLEAKS_CONFIG_INJECTION_TOKEN, useValue: { ...DEFAULT_REPORT_CONFIG, ...config } },
                { provide: COPYLEAKS_TEXT_CONFIG_INJECTION_TOKEN, useValue: { ...DEFAULT_TEXT_CONFIG, ...textConfig } },
            ],
        };
    }
    /**
     * Modify the config that is added to the child module providers
     * @param config the modified config
     */
    static forChild(config = {}, textConfig = {}) {
        return {
            ngModule: CopyleaksReportModule,
            providers: [
                { provide: COPYLEAKS_CONFIG_INJECTION_TOKEN, useValue: { ...DEFAULT_REPORT_CONFIG, ...config } },
                { provide: COPYLEAKS_TEXT_CONFIG_INJECTION_TOKEN, useValue: { ...DEFAULT_TEXT_CONFIG, ...textConfig } },
            ],
        };
    }
}
CopyleaksReportModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.3", ngImport: i0, type: CopyleaksReportModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
CopyleaksReportModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.3.3", ngImport: i0, type: CopyleaksReportModule, declarations: [SpinnerComponent,
        CopyleaksReportComponent,
        PropertiesComponent,
        ResultsComponent,
        OriginalComponent,
        ResultCardComponent,
        SuspectComponent,
        OptionsDialogComponent,
        ResultsFilterDialogComponent,
        PoweredByComponent,
        MatchComponent,
        OriginalHtmlHelperComponent,
        SourceHtmlHelperComponent,
        SuspectHtmlHelperComponent,
        OriginalTextHelperDirective,
        SourceTextHelperDirective,
        SuspectTextHelperDirective,
        PlagiarismFreeComponent,
        NotificationsComponent,
        NotificationsDialogComponent,
        AlertsComponent,
        AlertCardComponent,
        ExcludePartialScanComponent,
        CustomReportActionComponent], imports: [CommonModule,
        PanelModule,
        SharedModule,
        ExpansionPanelModule,
        MatIconModule,
        FormsModule,
        MatDividerModule,
        MatButtonModule,
        FlexLayoutModule,
        ChartCommonModule,
        PieChartModule,
        SatPopoverModule,
        MatTooltipModule,
        MatDialogModule,
        MatInputModule,
        MatMenuModule,
        MatListModule,
        MatCheckboxModule,
        MatSlideToggleModule,
        MatPaginatorModule,
        MatRippleModule,
        NgxSkeletonLoaderModule,
        MatPaginationModule,
        MatProgressSpinnerModule,
        VirtualScrollerModule], exports: [CopyleaksReportComponent, CustomReportActionComponent] });
CopyleaksReportModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.3.3", ngImport: i0, type: CopyleaksReportModule, providers: [
        IconRegistryService,
        CopyleaksService,
        CopyleaksTranslateService,
        DirectionService,
        { provide: COPYLEAKS_CONFIG_INJECTION_TOKEN, useValue: { ...DEFAULT_REPORT_CONFIG } },
        { provide: COPYLEAKS_TEXT_CONFIG_INJECTION_TOKEN, useValue: { ...DEFAULT_TEXT_CONFIG } },
    ], imports: [[
            CommonModule,
            PanelModule,
            SharedModule,
            ExpansionPanelModule,
            MatIconModule,
            FormsModule,
            MatDividerModule,
            MatButtonModule,
            FlexLayoutModule,
            ChartCommonModule,
            PieChartModule,
            SatPopoverModule,
            MatTooltipModule,
            MatDialogModule,
            MatInputModule,
            MatMenuModule,
            MatListModule,
            MatCheckboxModule,
            MatSlideToggleModule,
            MatPaginatorModule,
            MatRippleModule,
            NgxSkeletonLoaderModule,
            MatPaginationModule,
            MatProgressSpinnerModule,
            VirtualScrollerModule,
        ]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.3", ngImport: i0, type: CopyleaksReportModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [
                        SpinnerComponent,
                        CopyleaksReportComponent,
                        PropertiesComponent,
                        ResultsComponent,
                        OriginalComponent,
                        ResultCardComponent,
                        SuspectComponent,
                        OptionsDialogComponent,
                        ResultsFilterDialogComponent,
                        PoweredByComponent,
                        MatchComponent,
                        OriginalHtmlHelperComponent,
                        SourceHtmlHelperComponent,
                        SuspectHtmlHelperComponent,
                        OriginalTextHelperDirective,
                        SourceTextHelperDirective,
                        SuspectTextHelperDirective,
                        PlagiarismFreeComponent,
                        NotificationsComponent,
                        NotificationsDialogComponent,
                        AlertsComponent,
                        AlertCardComponent,
                        ExcludePartialScanComponent,
                        CustomReportActionComponent,
                    ],
                    imports: [
                        CommonModule,
                        PanelModule,
                        SharedModule,
                        ExpansionPanelModule,
                        MatIconModule,
                        FormsModule,
                        MatDividerModule,
                        MatButtonModule,
                        FlexLayoutModule,
                        ChartCommonModule,
                        PieChartModule,
                        SatPopoverModule,
                        MatTooltipModule,
                        MatDialogModule,
                        MatInputModule,
                        MatMenuModule,
                        MatListModule,
                        MatCheckboxModule,
                        MatSlideToggleModule,
                        MatPaginatorModule,
                        MatRippleModule,
                        NgxSkeletonLoaderModule,
                        MatPaginationModule,
                        MatProgressSpinnerModule,
                        VirtualScrollerModule,
                    ],
                    providers: [
                        IconRegistryService,
                        CopyleaksService,
                        CopyleaksTranslateService,
                        DirectionService,
                        { provide: COPYLEAKS_CONFIG_INJECTION_TOKEN, useValue: { ...DEFAULT_REPORT_CONFIG } },
                        { provide: COPYLEAKS_TEXT_CONFIG_INJECTION_TOKEN, useValue: { ...DEFAULT_TEXT_CONFIG } },
                    ],
                    entryComponents: [OptionsDialogComponent, ResultsFilterDialogComponent, NotificationsDialogComponent],
                    exports: [CopyleaksReportComponent, CustomReportActionComponent],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29weWxlYWtzLXJlcG9ydC5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9wbGFnaWFyaXNtLXJlcG9ydC9zcmMvbGliL3BsYWdpYXJpc20tcmVwb3J0L2NvcHlsZWFrcy1yZXBvcnQubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQXVCLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM5RCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUN4RCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDN0MsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQzNELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQy9ELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUN6RCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDM0QsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDN0QsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUN6RCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDdkQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBQ2pFLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLG9DQUFvQyxDQUFDO0FBQzlFLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBQ3RF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QixFQUFFLDRCQUE0QixFQUFFLDRCQUE0QixDQUFDO29CQUNyRyxPQUFPLEVBQUUsQ0FBQyx3QkFBd0IsRUFBRSwyQkFBMkIsQ0FBQztpQkFDaEUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgTW9kdWxlV2l0aFByb3ZpZGVycywgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZsZXhMYXlvdXRNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mbGV4LWxheW91dCc7XG5pbXBvcnQgeyBGb3Jtc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7IE1hdEJ1dHRvbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL2J1dHRvbic7XG5pbXBvcnQgeyBNYXRDaGVja2JveE1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL2NoZWNrYm94JztcbmltcG9ydCB7IE1hdFJpcHBsZU1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL2NvcmUnO1xuaW1wb3J0IHsgTWF0RGlhbG9nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvZGlhbG9nJztcbmltcG9ydCB7IE1hdERpdmlkZXJNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9kaXZpZGVyJztcbmltcG9ydCB7IE1hdEljb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9pY29uJztcbmltcG9ydCB7IE1hdElucHV0TW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvaW5wdXQnO1xuaW1wb3J0IHsgTWF0TGlzdE1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL2xpc3QnO1xuaW1wb3J0IHsgTWF0TWVudU1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL21lbnUnO1xuaW1wb3J0IHsgTWF0UGFnaW5hdG9yTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvcGFnaW5hdG9yJztcbmltcG9ydCB7IE1hdFByb2dyZXNzU3Bpbm5lck1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL3Byb2dyZXNzLXNwaW5uZXInO1xuaW1wb3J0IHsgTWF0U2xpZGVUb2dnbGVNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9zbGlkZS10b2dnbGUnO1xuaW1wb3J0IHsgTWF0VG9vbHRpcE1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL3Rvb2x0aXAnO1xuaW1wb3J0IHsgU2F0UG9wb3Zlck1vZHVsZSB9IGZyb20gJ0BuY3N0YXRlL3NhdC1wb3BvdmVyJztcbmltcG9ydCB7IENoYXJ0Q29tbW9uTW9kdWxlLCBQaWVDaGFydE1vZHVsZSB9IGZyb20gJ0Bzd2ltbGFuZS9uZ3gtY2hhcnRzJztcbmltcG9ydCB7IE5neFNrZWxldG9uTG9hZGVyTW9kdWxlIH0gZnJvbSAnbmd4LXNrZWxldG9uLWxvYWRlcic7XG5pbXBvcnQgeyBFeHBhbnNpb25QYW5lbE1vZHVsZSB9IGZyb20gJy4uL2V4cGFuc2lvbi1wYW5lbC9leHBhbnNpb24tcGFuZWwubW9kdWxlJztcbmltcG9ydCB7IE1hdFBhZ2luYXRpb25Nb2R1bGUgfSBmcm9tICcuLi9tYXQtcGFnaW5hdGlvbi9tYXQtcGFnaW5hdGlvbi5tb2R1bGUnO1xuaW1wb3J0IHsgUGFuZWxNb2R1bGUgfSBmcm9tICcuLi9wYW5lbC9wYW5lbC5tb2R1bGUnO1xuaW1wb3J0IHsgU2hhcmVkTW9kdWxlIH0gZnJvbSAnLi4vc2hhcmVkL3NoYXJlZC5tb2R1bGUnO1xuaW1wb3J0IHsgT3B0aW9uc0RpYWxvZ0NvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9vcHRpb25zLWRpYWxvZy9vcHRpb25zLWRpYWxvZy5jb21wb25lbnQnO1xuaW1wb3J0IHsgT3JpZ2luYWxDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvb3JpZ2luYWwvb3JpZ2luYWwuY29tcG9uZW50JztcbmltcG9ydCB7IFBvd2VyZWRCeUNvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9wb3dlcmVkLWJ5L3Bvd2VyZWQtYnkuY29tcG9uZW50JztcbmltcG9ydCB7IFByb3BlcnRpZXNDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvcHJvcGVydGllcy9wcm9wZXJ0aWVzLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBSZXN1bHRDYXJkQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL3Jlc3VsdC1jYXJkL3Jlc3VsdC1jYXJkLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBSZXN1bHRzRmlsdGVyRGlhbG9nQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL3Jlc3VsdHMtZmlsdGVyLWRpYWxvZy9yZXN1bHRzLWZpbHRlci1kaWFsb2cuY29tcG9uZW50JztcbmltcG9ydCB7IFJlc3VsdHNDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvcmVzdWx0cy9yZXN1bHRzLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBTdXNwZWN0Q29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL3N1c3BlY3Qvc3VzcGVjdC5jb21wb25lbnQnO1xuaW1wb3J0IHsgQ29weWxlYWtzUmVwb3J0Q29tcG9uZW50LCBDdXN0b21SZXBvcnRBY3Rpb25Db21wb25lbnQgfSBmcm9tICcuL2NvcHlsZWFrcy1yZXBvcnQuY29tcG9uZW50JztcblxuaW1wb3J0IHsgVmlydHVhbFNjcm9sbGVyTW9kdWxlIH0gZnJvbSAnbmd4LXZpcnR1YWwtc2Nyb2xsZXInO1xuaW1wb3J0IHsgQWxlcnRDYXJkQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL2FsZXJ0LWNhcmQvYWxlcnQtY2FyZC5jb21wb25lbnQnO1xuaW1wb3J0IHsgQWxlcnRzQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL2FsZXJ0cy9hbGVydHMuY29tcG9uZW50JztcbmltcG9ydCB7IEV4Y2x1ZGVQYXJ0aWFsU2NhbkNvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9leGNsdWRlLXBhcnRpYWwtc2Nhbi9leGNsdWRlLXBhcnRpYWwtc2Nhbi5jb21wb25lbnQnO1xuaW1wb3J0IHsgT3JpZ2luYWxIdG1sSGVscGVyQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL2h0bWwtaGVscGVycy9vcmlnaW5hbC1odG1sLWhlbHBlci5jb21wb25lbnQnO1xuaW1wb3J0IHsgU291cmNlSHRtbEhlbHBlckNvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9odG1sLWhlbHBlcnMvc291cmNlLWh0bWwtaGVscGVyLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBTdXNwZWN0SHRtbEhlbHBlckNvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9odG1sLWhlbHBlcnMvc3VzcGVjdC1odG1sLWhlbHBlci5jb21wb25lbnQnO1xuaW1wb3J0IHsgTWF0Y2hDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvbWF0Y2gvbWF0Y2guY29tcG9uZW50JztcbmltcG9ydCB7IE5vdGlmaWNhdGlvbnNEaWFsb2dDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvbm90aWZpY2F0aW9ucy1kaWFsb2cvbm90aWZpY2F0aW9ucy1kaWFsb2cuY29tcG9uZW50JztcbmltcG9ydCB7IE5vdGlmaWNhdGlvbnNDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvbm90aWZpY2F0aW9ucy9ub3RpZmljYXRpb25zLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBQbGFnaWFyaXNtRnJlZUNvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9wbGFnaWFyaXNtLWZyZWUvcGxhZ2lhcmlzbS1mcmVlLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBTcGlubmVyQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL3NwaW5uZXIvc3Bpbm5lci5jb21wb25lbnQnO1xuaW1wb3J0IHsgT3JpZ2luYWxUZXh0SGVscGVyRGlyZWN0aXZlIH0gZnJvbSAnLi9jb21wb25lbnRzL3RleHQtaGVscGVycy9vcmlnaW5hbC10ZXh0LWhlbHBlci5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgU291cmNlVGV4dEhlbHBlckRpcmVjdGl2ZSB9IGZyb20gJy4vY29tcG9uZW50cy90ZXh0LWhlbHBlcnMvc291cmNlLXRleHQtaGVscGVyLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBTdXNwZWN0VGV4dEhlbHBlckRpcmVjdGl2ZSB9IGZyb20gJy4vY29tcG9uZW50cy90ZXh0LWhlbHBlcnMvc3VzcGVjdC10ZXh0LWhlbHBlci5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgQ29weWxlYWtzUmVwb3J0Q29uZmlnIH0gZnJvbSAnLi9tb2RlbHMnO1xuaW1wb3J0IHsgQ29weWxlYWtzVGV4dENvbmZpZyB9IGZyb20gJy4vbW9kZWxzL0NvcHlsZWFrc1RleHRDb25maWcnO1xuaW1wb3J0IHsgQ29weWxlYWtzVHJhbnNsYXRlU2VydmljZSB9IGZyb20gJy4vc2VydmljZXMvY29weWxlYWtzLXRyYW5zbGF0ZS5zZXJ2aWNlJztcbmltcG9ydCB7IENvcHlsZWFrc1NlcnZpY2UgfSBmcm9tICcuL3NlcnZpY2VzL2NvcHlsZWFrcy5zZXJ2aWNlJztcbmltcG9ydCB7IERpcmVjdGlvblNlcnZpY2UgfSBmcm9tICcuL3NlcnZpY2VzL2RpcmVjdGlvbi5zZXJ2aWNlJztcbmltcG9ydCB7XG5cdENPUFlMRUFLU19DT05GSUdfSU5KRUNUSU9OX1RPS0VOLFxuXHRDT1BZTEVBS1NfVEVYVF9DT05GSUdfSU5KRUNUSU9OX1RPS0VOLFxuXHRERUZBVUxUX1JFUE9SVF9DT05GSUcsXG5cdERFRkFVTFRfVEVYVF9DT05GSUcsXG59IGZyb20gJy4vdXRpbHMvY29uc3RhbnRzJztcbmltcG9ydCB7IEljb25SZWdpc3RyeVNlcnZpY2UgfSBmcm9tICcuL3NlcnZpY2VzL2ljb24tcmVnaXN0cnkuc2VydmljZSc7XG5ATmdNb2R1bGUoe1xuXHRkZWNsYXJhdGlvbnM6IFtcblx0XHRTcGlubmVyQ29tcG9uZW50LFxuXHRcdENvcHlsZWFrc1JlcG9ydENvbXBvbmVudCxcblx0XHRQcm9wZXJ0aWVzQ29tcG9uZW50LFxuXHRcdFJlc3VsdHNDb21wb25lbnQsXG5cdFx0T3JpZ2luYWxDb21wb25lbnQsXG5cdFx0UmVzdWx0Q2FyZENvbXBvbmVudCxcblx0XHRTdXNwZWN0Q29tcG9uZW50LFxuXHRcdE9wdGlvbnNEaWFsb2dDb21wb25lbnQsXG5cdFx0UmVzdWx0c0ZpbHRlckRpYWxvZ0NvbXBvbmVudCxcblx0XHRQb3dlcmVkQnlDb21wb25lbnQsXG5cdFx0TWF0Y2hDb21wb25lbnQsXG5cdFx0T3JpZ2luYWxIdG1sSGVscGVyQ29tcG9uZW50LFxuXHRcdFNvdXJjZUh0bWxIZWxwZXJDb21wb25lbnQsXG5cdFx0U3VzcGVjdEh0bWxIZWxwZXJDb21wb25lbnQsXG5cdFx0T3JpZ2luYWxUZXh0SGVscGVyRGlyZWN0aXZlLFxuXHRcdFNvdXJjZVRleHRIZWxwZXJEaXJlY3RpdmUsXG5cdFx0U3VzcGVjdFRleHRIZWxwZXJEaXJlY3RpdmUsXG5cdFx0UGxhZ2lhcmlzbUZyZWVDb21wb25lbnQsXG5cdFx0Tm90aWZpY2F0aW9uc0NvbXBvbmVudCxcblx0XHROb3RpZmljYXRpb25zRGlhbG9nQ29tcG9uZW50LFxuXHRcdEFsZXJ0c0NvbXBvbmVudCxcblx0XHRBbGVydENhcmRDb21wb25lbnQsXG5cdFx0RXhjbHVkZVBhcnRpYWxTY2FuQ29tcG9uZW50LFxuXHRcdEN1c3RvbVJlcG9ydEFjdGlvbkNvbXBvbmVudCxcblx0XSxcblx0aW1wb3J0czogW1xuXHRcdENvbW1vbk1vZHVsZSxcblx0XHRQYW5lbE1vZHVsZSxcblx0XHRTaGFyZWRNb2R1bGUsXG5cdFx0RXhwYW5zaW9uUGFuZWxNb2R1bGUsXG5cdFx0TWF0SWNvbk1vZHVsZSxcblx0XHRGb3Jtc01vZHVsZSxcblx0XHRNYXREaXZpZGVyTW9kdWxlLFxuXHRcdE1hdEJ1dHRvbk1vZHVsZSxcblx0XHRGbGV4TGF5b3V0TW9kdWxlLFxuXHRcdENoYXJ0Q29tbW9uTW9kdWxlLFxuXHRcdFBpZUNoYXJ0TW9kdWxlLFxuXHRcdFNhdFBvcG92ZXJNb2R1bGUsXG5cdFx0TWF0VG9vbHRpcE1vZHVsZSxcblx0XHRNYXREaWFsb2dNb2R1bGUsXG5cdFx0TWF0SW5wdXRNb2R1bGUsXG5cdFx0TWF0TWVudU1vZHVsZSxcblx0XHRNYXRMaXN0TW9kdWxlLFxuXHRcdE1hdENoZWNrYm94TW9kdWxlLFxuXHRcdE1hdFNsaWRlVG9nZ2xlTW9kdWxlLFxuXHRcdE1hdFBhZ2luYXRvck1vZHVsZSxcblx0XHRNYXRSaXBwbGVNb2R1bGUsXG5cdFx0Tmd4U2tlbGV0b25Mb2FkZXJNb2R1bGUsXG5cdFx0TWF0UGFnaW5hdGlvbk1vZHVsZSxcblx0XHRNYXRQcm9ncmVzc1NwaW5uZXJNb2R1bGUsXG5cdFx0VmlydHVhbFNjcm9sbGVyTW9kdWxlLFxuXHRdLFxuXHRwcm92aWRlcnM6IFtcblx0XHRJY29uUmVnaXN0cnlTZXJ2aWNlLFxuXHRcdENvcHlsZWFrc1NlcnZpY2UsXG5cdFx0Q29weWxlYWtzVHJhbnNsYXRlU2VydmljZSxcblx0XHREaXJlY3Rpb25TZXJ2aWNlLFxuXHRcdHsgcHJvdmlkZTogQ09QWUxFQUtTX0NPTkZJR19JTkpFQ1RJT05fVE9LRU4sIHVzZVZhbHVlOiB7IC4uLkRFRkFVTFRfUkVQT1JUX0NPTkZJRyB9IH0sXG5cdFx0eyBwcm92aWRlOiBDT1BZTEVBS1NfVEVYVF9DT05GSUdfSU5KRUNUSU9OX1RPS0VOLCB1c2VWYWx1ZTogeyAuLi5ERUZBVUxUX1RFWFRfQ09ORklHIH0gfSxcblx0XSxcblx0ZW50cnlDb21wb25lbnRzOiBbT3B0aW9uc0RpYWxvZ0NvbXBvbmVudCwgUmVzdWx0c0ZpbHRlckRpYWxvZ0NvbXBvbmVudCwgTm90aWZpY2F0aW9uc0RpYWxvZ0NvbXBvbmVudF0sXG5cdGV4cG9ydHM6IFtDb3B5bGVha3NSZXBvcnRDb21wb25lbnQsIEN1c3RvbVJlcG9ydEFjdGlvbkNvbXBvbmVudF0sXG59KVxuZXhwb3J0IGNsYXNzIENvcHlsZWFrc1JlcG9ydE1vZHVsZSB7XG5cdC8qKlxuXHQgKiBNb2RpZnkgdGhlIGNvbmZpZyB0aGF0IGlzIGFkZGVkIHRvIHRoZSByb290IG1vZHVsZSBwcm92aWRlcnNcblx0ICogQHBhcmFtIGNvbmZpZyB0aGUgbW9kaWZpZWQgcmVwb3J0IGNvbmZpZ1xuXHQgKiBAcGFyYW0gdGV4dENvbmZpZyBjb25maWcgY29udGFpbmluZyBjdXN0b20gdGV4dCBtZXNzYWdlc1xuXHQgKi9cblx0c3RhdGljIGZvclJvb3QoXG5cdFx0Y29uZmlnID0ge30gYXMgQ29weWxlYWtzUmVwb3J0Q29uZmlnLFxuXHRcdHRleHRDb25maWcgPSB7fSBhcyBDb3B5bGVha3NUZXh0Q29uZmlnXG5cdCk6IE1vZHVsZVdpdGhQcm92aWRlcnM8Q29weWxlYWtzUmVwb3J0TW9kdWxlPiB7XG5cdFx0cmV0dXJuIHtcblx0XHRcdG5nTW9kdWxlOiBDb3B5bGVha3NSZXBvcnRNb2R1bGUsXG5cdFx0XHRwcm92aWRlcnM6IFtcblx0XHRcdFx0eyBwcm92aWRlOiBDT1BZTEVBS1NfQ09ORklHX0lOSkVDVElPTl9UT0tFTiwgdXNlVmFsdWU6IHsgLi4uREVGQVVMVF9SRVBPUlRfQ09ORklHLCAuLi5jb25maWcgfSB9LFxuXHRcdFx0XHR7IHByb3ZpZGU6IENPUFlMRUFLU19URVhUX0NPTkZJR19JTkpFQ1RJT05fVE9LRU4sIHVzZVZhbHVlOiB7IC4uLkRFRkFVTFRfVEVYVF9DT05GSUcsIC4uLnRleHRDb25maWcgfSB9LFxuXHRcdFx0XSxcblx0XHR9IGFzIE1vZHVsZVdpdGhQcm92aWRlcnM8Q29weWxlYWtzUmVwb3J0TW9kdWxlPjtcblx0fVxuXG5cdC8qKlxuXHQgKiBNb2RpZnkgdGhlIGNvbmZpZyB0aGF0IGlzIGFkZGVkIHRvIHRoZSBjaGlsZCBtb2R1bGUgcHJvdmlkZXJzXG5cdCAqIEBwYXJhbSBjb25maWcgdGhlIG1vZGlmaWVkIGNvbmZpZ1xuXHQgKi9cblx0c3RhdGljIGZvckNoaWxkKFxuXHRcdGNvbmZpZyA9IHt9IGFzIENvcHlsZWFrc1JlcG9ydENvbmZpZyxcblx0XHR0ZXh0Q29uZmlnID0ge30gYXMgQ29weWxlYWtzVGV4dENvbmZpZ1xuXHQpOiBNb2R1bGVXaXRoUHJvdmlkZXJzPENvcHlsZWFrc1JlcG9ydE1vZHVsZT4ge1xuXHRcdHJldHVybiB7XG5cdFx0XHRuZ01vZHVsZTogQ29weWxlYWtzUmVwb3J0TW9kdWxlLFxuXHRcdFx0cHJvdmlkZXJzOiBbXG5cdFx0XHRcdHsgcHJvdmlkZTogQ09QWUxFQUtTX0NPTkZJR19JTkpFQ1RJT05fVE9LRU4sIHVzZVZhbHVlOiB7IC4uLkRFRkFVTFRfUkVQT1JUX0NPTkZJRywgLi4uY29uZmlnIH0gfSxcblx0XHRcdFx0eyBwcm92aWRlOiBDT1BZTEVBS1NfVEVYVF9DT05GSUdfSU5KRUNUSU9OX1RPS0VOLCB1c2VWYWx1ZTogeyAuLi5ERUZBVUxUX1RFWFRfQ09ORklHLCAuLi50ZXh0Q29uZmlnIH0gfSxcblx0XHRcdF0sXG5cdFx0fSBhcyBNb2R1bGVXaXRoUHJvdmlkZXJzPENvcHlsZWFrc1JlcG9ydE1vZHVsZT47XG5cdH1cbn1cbiJdfQ==