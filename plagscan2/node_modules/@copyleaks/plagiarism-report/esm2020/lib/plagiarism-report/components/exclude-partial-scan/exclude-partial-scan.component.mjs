import { Component, HostListener, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "../../services/report.service";
export class ExcludePartialScanComponent {
    constructor(element, reportService) {
        this.element = element;
        this.reportService = reportService;
    }
    /**
     * emits the upgrade plan event
     */
    click() {
        this.reportService.upgradePlanEvent();
    }
}
ExcludePartialScanComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.3", ngImport: i0, type: ExcludePartialScanComponent, deps: [{ token: i0.ElementRef }, { token: i1.ReportService }], target: i0.ɵɵFactoryTarget.Component });
ExcludePartialScanComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.3", type: ExcludePartialScanComponent, selector: "span[cr-exclude-partial-scan]", inputs: { match: ["cr-exclude-partial-scan", "match"] }, host: { listeners: { "click": "click()" } }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, styles: [":host{filter:blur(3px);cursor:pointer}\n"] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.3", ngImport: i0, type: ExcludePartialScanComponent, decorators: [{
            type: Component,
            args: [{ selector: 'span[cr-exclude-partial-scan]', template: '<ng-content></ng-content>', styles: [":host{filter:blur(3px);cursor:pointer}\n"] }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.ReportService }]; }, propDecorators: { match: [{
                type: Input,
                args: ['cr-exclude-partial-scan']
            }], click: [{
                type: HostListener,
                args: ['click']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhjbHVkZS1wYXJ0aWFsLXNjYW4uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvcGxhZ2lhcmlzbS1yZXBvcnQvc3JjL2xpYi9wbGFnaWFyaXNtLXJlcG9ydC9jb21wb25lbnRzL2V4Y2x1ZGUtcGFydGlhbC1zY2FuL2V4Y2x1ZGUtcGFydGlhbC1zY2FuLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFjLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7OztBQVMzRSxNQUFNLE9BQU8sMkJBQTJCO0lBQ3ZDLFlBQW1CLE9BQWdDLEVBQVUsYUFBNEI7UUFBdEUsWUFBTyxHQUFQLE9BQU8sQ0FBeUI7UUFBVSxrQkFBYSxHQUFiLGFBQWEsQ0FBZTtJQUFHLENBQUM7SUFNN0Y7O09BRUc7SUFFSSxLQUFLO1FBQ1gsSUFBSSxDQUFDLGFBQWEsQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDO0lBQ3ZDLENBQUM7O3dIQWJXLDJCQUEyQjs0R0FBM0IsMkJBQTJCLDJLQUY3QiwyQkFBMkI7MkZBRXpCLDJCQUEyQjtrQkFMdkMsU0FBUzsrQkFDQywrQkFBK0IsWUFFL0IsMkJBQTJCOzZIQU85QixLQUFLO3NCQURYLEtBQUs7dUJBQUMseUJBQXlCO2dCQU96QixLQUFLO3NCQURYLFlBQVk7dUJBQUMsT0FBTyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRWxlbWVudFJlZiwgSG9zdExpc3RlbmVyLCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTWF0Y2ggfSBmcm9tICcuLi8uLi9tb2RlbHMvTWF0Y2hlcyc7XG5pbXBvcnQgeyBSZXBvcnRTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2VydmljZXMvcmVwb3J0LnNlcnZpY2UnO1xuXG5AQ29tcG9uZW50KHtcblx0c2VsZWN0b3I6ICdzcGFuW2NyLWV4Y2x1ZGUtcGFydGlhbC1zY2FuXScsXG5cdHN0eWxlVXJsczogWycuL2V4Y2x1ZGUtcGFydGlhbC1zY2FuLmNvbXBvbmVudC5zY3NzJ10sXG5cdHRlbXBsYXRlOiAnPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PicsXG59KVxuZXhwb3J0IGNsYXNzIEV4Y2x1ZGVQYXJ0aWFsU2NhbkNvbXBvbmVudCB7XG5cdGNvbnN0cnVjdG9yKHB1YmxpYyBlbGVtZW50OiBFbGVtZW50UmVmPEhUTUxFbGVtZW50PiwgcHJpdmF0ZSByZXBvcnRTZXJ2aWNlOiBSZXBvcnRTZXJ2aWNlKSB7fVxuXG5cdC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpuby1pbnB1dC1yZW5hbWVcblx0QElucHV0KCdjci1leGNsdWRlLXBhcnRpYWwtc2NhbicpXG5cdHB1YmxpYyBtYXRjaDogTWF0Y2g7XG5cblx0LyoqXG5cdCAqIGVtaXRzIHRoZSB1cGdyYWRlIHBsYW4gZXZlbnRcblx0ICovXG5cdEBIb3N0TGlzdGVuZXIoJ2NsaWNrJylcblx0cHVibGljIGNsaWNrKCkge1xuXHRcdHRoaXMucmVwb3J0U2VydmljZS51cGdyYWRlUGxhbkV2ZW50KCk7XG5cdH1cbn1cbiJdfQ==