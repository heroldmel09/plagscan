import { Component, EventEmitter, Input, Output } from '@angular/core';
import { filter, take } from 'rxjs/operators';
import { untilDestroy } from '../../../shared/operators/untilDestroy';
import { CompleteResultNotificationAlertSeverity, MatchType } from '../../models';
import { EReportViewModel } from '../../services/view-mode.service';
import { ALERTS } from '../../utils/constants';
import * as i0 from "@angular/core";
import * as i1 from "../../services/view-mode.service";
import * as i2 from "../../services/highlight.service";
import * as i3 from "../../services/report.service";
import * as i4 from "../../services/match.service";
import * as i5 from "@angular/material/icon";
import * as i6 from "@angular/material/button";
import * as i7 from "@angular/flex-layout/flex";
import * as i8 from "@angular/common";
import * as i9 from "@angular/flex-layout/extended";
export class AlertCardComponent {
    constructor(viewModeService, highlightService, reportService, matchsService) {
        this.viewModeService = viewModeService;
        this.highlightService = highlightService;
        this.reportService = reportService;
        this.matchsService = matchsService;
        this.afterToggleError = new EventEmitter();
        this.severity = CompleteResultNotificationAlertSeverity;
        this.alertsConstants = ALERTS;
    }
    get isSelected() {
        return this.viewModeService?.selectedAlert?.code === this.alert?.code;
    }
    /**
     * this function will select an alert
     */
    toggleAlertPreview(alert) {
        if (this.isSelected) {
            this.viewModeService.selectedAlert = null;
        }
        else {
            this.viewModeService.selectedAlert = alert;
        }
        this.reportService.configure({ contentMode: 'text' });
        setTimeout(() => {
            this.viewModeService.changeViewMode$(EReportViewModel.Alerts);
            this.matchsService.originalTextMatches$
                .pipe(untilDestroy(this), take(1), filter(m => m.filter(mat => mat.filter(match => match.match.type !== MatchType.none).length !== 0).length !== 0))
                .subscribe(_ => {
                this.highlightService.jump(true);
            });
            if (this.afterToggleError) {
                this.afterToggleError.emit();
            }
        }, 100);
    }
    /**
     * life cycel method
     * required for untilDestored
     */
    ngOnDestroy() { }
}
AlertCardComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.3", ngImport: i0, type: AlertCardComponent, deps: [{ token: i1.ViewModeService }, { token: i2.HighlightService }, { token: i3.ReportService }, { token: i4.MatchService }], target: i0.ɵɵFactoryTarget.Component });
AlertCardComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.3", type: AlertCardComponent, selector: "cr-alert-card", inputs: { alert: "alert" }, outputs: { afterToggleError: "afterToggleError" }, ngImport: i0, template: "<div\n\tclass=\"alert-card\"\n\t[style.padding-bottom]=\"!alert?.helpLink ? '16px' : ''\"\n\tfxLayout=\"column\"\n\t[ngClass]=\"{\n\t\t'alert-card-error': alert.severity === severity.High || alert.severity === severity.VeryHigh,\n\t\t'alert-card-warning': alert.severity === severity.Medium\n\t}\"\n\tfxLayoutGap=\"10px\">\n\t<div fxLayout=\"row\" class=\"alert-card-header\" fxLayoutAlign=\"start center\" fxLayoutGap=\"10px\">\n\t\t<ng-container [ngSwitch]=\"alert.severity\">\n\t\t\t<mat-icon *ngSwitchCase=\"severity.Medium\">warning</mat-icon>\n\t\t\t<mat-icon *ngSwitchCase=\"severity.High\">error</mat-icon>\n\t\t\t<mat-icon *ngSwitchCase=\"severity.VeryHigh\">error</mat-icon>\n\t\t\t<mat-icon *ngSwitchDefault>info</mat-icon>\n\t\t</ng-container>\n\t\t<div>\n\t\t\t<div class=\"card-header-title\">{{ alert.title }}</div>\n\t\t\t<ng-container [ngSwitch]=\"alert.severity\">\n\t\t\t\t<p class=\"card-header-description\" *ngSwitchCase=\"severity.VeryLow\">Very Low</p>\n\t\t\t\t<p class=\"card-header-description\" *ngSwitchCase=\"severity.Low\">Low</p>\n\t\t\t\t<p class=\"card-header-description\" *ngSwitchCase=\"severity.Medium\">Medium</p>\n\t\t\t\t<p class=\"card-header-description\" *ngSwitchCase=\"severity.High\">High</p>\n\t\t\t\t<p class=\"card-header-description\" *ngSwitchCase=\"severity.VeryHigh\">Very High</p>\n\t\t\t</ng-container>\n\t\t</div>\n\t</div>\n\n\t<div style=\"text-align: justify\">\n\t\t{{ alert.message }}\n\t</div>\n\n\t<div\n\t\tclass=\"actions\"\n\t\t*ngIf=\"\n\t\t\talert.helpLink ||\n\t\t\talert.code == alertsConstants.SUSPECTED_CHARACTER_REPLACEMENT_CODE ||\n\t\t\talert.code == alertsConstants.SUSPECTED_AI_TEXT_DETECTED\n\t\t\">\n\t\t<ng-container\n\t\t\t*ngIf=\"\n\t\t\t\talert.code == alertsConstants.SUSPECTED_CHARACTER_REPLACEMENT_CODE ||\n\t\t\t\talert.code == alertsConstants.SUSPECTED_AI_TEXT_DETECTED\n\t\t\t\">\n\t\t\t<button mat-stroked-button *ngIf=\"!isSelected\" style=\"font-weight: bolder\" (click)=\"toggleAlertPreview(alert)\">\n\t\t\t\t<mat-icon>visibility</mat-icon>\n\t\t\t\tPreview\n\t\t\t</button>\n\t\t\t<button mat-raised-button *ngIf=\"isSelected\" color=\"primary\" (click)=\"toggleAlertPreview(alert)\">\n\t\t\t\t<mat-icon>visibility_off</mat-icon>\n\t\t\t\tStop preview\n\t\t\t</button>\n\t\t</ng-container>\n\n\t\t<a mat-stroked-button target=\"_blank\" *ngIf=\"alert.helpLink\" [href]=\"alert.helpLink\">Learn more</a>\n\t</div>\n</div>\n", styles: [".alert-card{padding:16px 16px 6px;border-top:3px solid #17a1ff;box-shadow:0 1px 2px #0000004f}.alert-card .alert-card-header mat-icon{color:#17a1ff;font-size:45px;width:45px;height:45px;line-height:45px}.alert-card .alert-card-header .card-header-title{margin-bottom:5px;font-size:17px;font-weight:700;color:#000000de}.alert-card .alert-card-header .card-header-description{font-size:14px;color:#0000008a;margin:0}.alert-card-error{border-color:red!important}.alert-card-error .alert-card-header mat-icon{color:red!important}.alert-card-warning{border-color:orange!important}.alert-card-warning .alert-card-header mat-icon{color:orange!important}.actions{display:flex;justify-content:flex-end;gap:10px}.actions a{padding:0 10px;font-weight:700;font-size:14px}\n"], components: [{ type: i5.MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }, { type: i6.MatButton, selector: "button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]", inputs: ["disabled", "disableRipple", "color"], exportAs: ["matButton"] }, { type: i6.MatAnchor, selector: "a[mat-button], a[mat-raised-button], a[mat-icon-button], a[mat-fab],             a[mat-mini-fab], a[mat-stroked-button], a[mat-flat-button]", inputs: ["disabled", "disableRipple", "color", "tabIndex"], exportAs: ["matButton", "matAnchor"] }], directives: [{ type: i7.DefaultLayoutDirective, selector: "  [fxLayout], [fxLayout.xs], [fxLayout.sm], [fxLayout.md],  [fxLayout.lg], [fxLayout.xl], [fxLayout.lt-sm], [fxLayout.lt-md],  [fxLayout.lt-lg], [fxLayout.lt-xl], [fxLayout.gt-xs], [fxLayout.gt-sm],  [fxLayout.gt-md], [fxLayout.gt-lg]", inputs: ["fxLayout", "fxLayout.xs", "fxLayout.sm", "fxLayout.md", "fxLayout.lg", "fxLayout.xl", "fxLayout.lt-sm", "fxLayout.lt-md", "fxLayout.lt-lg", "fxLayout.lt-xl", "fxLayout.gt-xs", "fxLayout.gt-sm", "fxLayout.gt-md", "fxLayout.gt-lg"] }, { type: i7.DefaultLayoutGapDirective, selector: "  [fxLayoutGap], [fxLayoutGap.xs], [fxLayoutGap.sm], [fxLayoutGap.md],  [fxLayoutGap.lg], [fxLayoutGap.xl], [fxLayoutGap.lt-sm], [fxLayoutGap.lt-md],  [fxLayoutGap.lt-lg], [fxLayoutGap.lt-xl], [fxLayoutGap.gt-xs], [fxLayoutGap.gt-sm],  [fxLayoutGap.gt-md], [fxLayoutGap.gt-lg]", inputs: ["fxLayoutGap", "fxLayoutGap.xs", "fxLayoutGap.sm", "fxLayoutGap.md", "fxLayoutGap.lg", "fxLayoutGap.xl", "fxLayoutGap.lt-sm", "fxLayoutGap.lt-md", "fxLayoutGap.lt-lg", "fxLayoutGap.lt-xl", "fxLayoutGap.gt-xs", "fxLayoutGap.gt-sm", "fxLayoutGap.gt-md", "fxLayoutGap.gt-lg"] }, { type: i8.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i9.DefaultClassDirective, selector: "  [ngClass], [ngClass.xs], [ngClass.sm], [ngClass.md], [ngClass.lg], [ngClass.xl],  [ngClass.lt-sm], [ngClass.lt-md], [ngClass.lt-lg], [ngClass.lt-xl],  [ngClass.gt-xs], [ngClass.gt-sm], [ngClass.gt-md], [ngClass.gt-lg]", inputs: ["ngClass", "ngClass.xs", "ngClass.sm", "ngClass.md", "ngClass.lg", "ngClass.xl", "ngClass.lt-sm", "ngClass.lt-md", "ngClass.lt-lg", "ngClass.lt-xl", "ngClass.gt-xs", "ngClass.gt-sm", "ngClass.gt-md", "ngClass.gt-lg"] }, { type: i7.DefaultLayoutAlignDirective, selector: "  [fxLayoutAlign], [fxLayoutAlign.xs], [fxLayoutAlign.sm], [fxLayoutAlign.md],  [fxLayoutAlign.lg], [fxLayoutAlign.xl], [fxLayoutAlign.lt-sm], [fxLayoutAlign.lt-md],  [fxLayoutAlign.lt-lg], [fxLayoutAlign.lt-xl], [fxLayoutAlign.gt-xs], [fxLayoutAlign.gt-sm],  [fxLayoutAlign.gt-md], [fxLayoutAlign.gt-lg]", inputs: ["fxLayoutAlign", "fxLayoutAlign.xs", "fxLayoutAlign.sm", "fxLayoutAlign.md", "fxLayoutAlign.lg", "fxLayoutAlign.xl", "fxLayoutAlign.lt-sm", "fxLayoutAlign.lt-md", "fxLayoutAlign.lt-lg", "fxLayoutAlign.lt-xl", "fxLayoutAlign.gt-xs", "fxLayoutAlign.gt-sm", "fxLayoutAlign.gt-md", "fxLayoutAlign.gt-lg"] }, { type: i8.NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { type: i8.NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { type: i8.NgSwitchDefault, selector: "[ngSwitchDefault]" }, { type: i8.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.3", ngImport: i0, type: AlertCardComponent, decorators: [{
            type: Component,
            args: [{ selector: 'cr-alert-card', template: "<div\n\tclass=\"alert-card\"\n\t[style.padding-bottom]=\"!alert?.helpLink ? '16px' : ''\"\n\tfxLayout=\"column\"\n\t[ngClass]=\"{\n\t\t'alert-card-error': alert.severity === severity.High || alert.severity === severity.VeryHigh,\n\t\t'alert-card-warning': alert.severity === severity.Medium\n\t}\"\n\tfxLayoutGap=\"10px\">\n\t<div fxLayout=\"row\" class=\"alert-card-header\" fxLayoutAlign=\"start center\" fxLayoutGap=\"10px\">\n\t\t<ng-container [ngSwitch]=\"alert.severity\">\n\t\t\t<mat-icon *ngSwitchCase=\"severity.Medium\">warning</mat-icon>\n\t\t\t<mat-icon *ngSwitchCase=\"severity.High\">error</mat-icon>\n\t\t\t<mat-icon *ngSwitchCase=\"severity.VeryHigh\">error</mat-icon>\n\t\t\t<mat-icon *ngSwitchDefault>info</mat-icon>\n\t\t</ng-container>\n\t\t<div>\n\t\t\t<div class=\"card-header-title\">{{ alert.title }}</div>\n\t\t\t<ng-container [ngSwitch]=\"alert.severity\">\n\t\t\t\t<p class=\"card-header-description\" *ngSwitchCase=\"severity.VeryLow\">Very Low</p>\n\t\t\t\t<p class=\"card-header-description\" *ngSwitchCase=\"severity.Low\">Low</p>\n\t\t\t\t<p class=\"card-header-description\" *ngSwitchCase=\"severity.Medium\">Medium</p>\n\t\t\t\t<p class=\"card-header-description\" *ngSwitchCase=\"severity.High\">High</p>\n\t\t\t\t<p class=\"card-header-description\" *ngSwitchCase=\"severity.VeryHigh\">Very High</p>\n\t\t\t</ng-container>\n\t\t</div>\n\t</div>\n\n\t<div style=\"text-align: justify\">\n\t\t{{ alert.message }}\n\t</div>\n\n\t<div\n\t\tclass=\"actions\"\n\t\t*ngIf=\"\n\t\t\talert.helpLink ||\n\t\t\talert.code == alertsConstants.SUSPECTED_CHARACTER_REPLACEMENT_CODE ||\n\t\t\talert.code == alertsConstants.SUSPECTED_AI_TEXT_DETECTED\n\t\t\">\n\t\t<ng-container\n\t\t\t*ngIf=\"\n\t\t\t\talert.code == alertsConstants.SUSPECTED_CHARACTER_REPLACEMENT_CODE ||\n\t\t\t\talert.code == alertsConstants.SUSPECTED_AI_TEXT_DETECTED\n\t\t\t\">\n\t\t\t<button mat-stroked-button *ngIf=\"!isSelected\" style=\"font-weight: bolder\" (click)=\"toggleAlertPreview(alert)\">\n\t\t\t\t<mat-icon>visibility</mat-icon>\n\t\t\t\tPreview\n\t\t\t</button>\n\t\t\t<button mat-raised-button *ngIf=\"isSelected\" color=\"primary\" (click)=\"toggleAlertPreview(alert)\">\n\t\t\t\t<mat-icon>visibility_off</mat-icon>\n\t\t\t\tStop preview\n\t\t\t</button>\n\t\t</ng-container>\n\n\t\t<a mat-stroked-button target=\"_blank\" *ngIf=\"alert.helpLink\" [href]=\"alert.helpLink\">Learn more</a>\n\t</div>\n</div>\n", styles: [".alert-card{padding:16px 16px 6px;border-top:3px solid #17a1ff;box-shadow:0 1px 2px #0000004f}.alert-card .alert-card-header mat-icon{color:#17a1ff;font-size:45px;width:45px;height:45px;line-height:45px}.alert-card .alert-card-header .card-header-title{margin-bottom:5px;font-size:17px;font-weight:700;color:#000000de}.alert-card .alert-card-header .card-header-description{font-size:14px;color:#0000008a;margin:0}.alert-card-error{border-color:red!important}.alert-card-error .alert-card-header mat-icon{color:red!important}.alert-card-warning{border-color:orange!important}.alert-card-warning .alert-card-header mat-icon{color:orange!important}.actions{display:flex;justify-content:flex-end;gap:10px}.actions a{padding:0 10px;font-weight:700;font-size:14px}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.ViewModeService }, { type: i2.HighlightService }, { type: i3.ReportService }, { type: i4.MatchService }]; }, propDecorators: { alert: [{
                type: Input
            }], afterToggleError: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,