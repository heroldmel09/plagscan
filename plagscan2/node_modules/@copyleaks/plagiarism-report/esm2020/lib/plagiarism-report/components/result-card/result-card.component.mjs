import { Component, HostBinding, Inject, Input, ViewContainerRef, ViewChild, } from '@angular/core';
import { combineLatest } from 'rxjs';
import { map, take, filter } from 'rxjs/operators';
import { ResultAccess, EResultPreviewType, } from '../../models';
import { COPYLEAKS_TEXT_CONFIG_INJECTION_TOKEN } from '../../utils/constants';
import { untilDestroy } from '../../../shared/operators/untilDestroy';
import { DatePipe } from '@angular/common';
import * as i0 from "@angular/core";
import * as i1 from "../../services/copyleaks-translate.service";
import * as i2 from "../../services/report.service";
import * as i3 from "../../services/direction.service";
import * as i4 from "@angular/common";
import * as i5 from "../spinner/spinner.component";
import * as i6 from "@angular/material/icon";
import * as i7 from "@angular/material/button";
import * as i8 from "@angular/material/menu";
import * as i9 from "@angular/material/divider";
import * as i10 from "@ncstate/sat-popover";
import * as i11 from "ngx-skeleton-loader";
import * as i12 from "@angular/material/tooltip";
import * as i13 from "@angular/flex-layout/extended";
import * as i14 from "@angular/flex-layout/flex";
import * as i15 from "@angular/cdk/bidi";
import * as i16 from "../../../shared/pipes/similarity.pipe";
export class ResultCardComponent {
    constructor(translatesService, componentFactoryResolver, reportService, directionService, datePipe, messages) {
        this.translatesService = translatesService;
        this.componentFactoryResolver = componentFactoryResolver;
        this.reportService = reportService;
        this.directionService = directionService;
        this.datePipe = datePipe;
        this.messages = messages;
        this.eResultPreviewType = EResultPreviewType;
        this.elevation = true;
        this.loading = true;
        this.access = ResultAccess.locked;
        this.resultAccess = ResultAccess;
        this.resultCardActions = [];
    }
    get urlDomain() {
        if (this.preview && this.preview.url) {
            const url = new URL(this.preview.url);
            return url.host;
        }
        return 'copyleaks.com';
    }
    get previewIconToolTip() {
        if (this.preview) {
            switch (this.preview.type) {
                case EResultPreviewType.Internet:
                    return this.translations &&
                        this.translations.RESULT_CARD &&
                        this.translations.RESULT_CARD.INTERNET_RESULT_TOOLTIP
                        ? this.translations.RESULT_CARD.INTERNET_RESULT_TOOLTIP
                        : 'Internet Result';
                case EResultPreviewType.Database:
                    return this.translations &&
                        this.translations.RESULT_CARD &&
                        this.translations.RESULT_CARD.INTERNAL_DATABASE_RESULT_TOOLTIP
                        ? this.translations.RESULT_CARD.INTERNAL_DATABASE_RESULT_TOOLTIP
                        : 'Internal Database Result';
                case EResultPreviewType.Batch:
                    return this.translations &&
                        this.translations.RESULT_CARD &&
                        this.translations.RESULT_CARD.BATCH_RESULT_TOOLTIP
                        ? this.translations.RESULT_CARD.BATCH_RESULT_TOOLTIP
                        : 'Batch Result';
                case EResultPreviewType.Repositroy:
                    return this.translations &&
                        this.translations.RESULT_CARD &&
                        this.translations.RESULT_CARD.REPOSITORY_RESULT_TOOLTIP
                        ? this.translations.RESULT_CARD.REPOSITORY_RESULT_TOOLTIP
                        : 'Repository Result';
                default:
                    return '';
            }
        }
        return '';
    }
    get titleIconTooltip() {
        return !this.loading && this.result === null
            ? this.translations?.RESULT_CARD?.RESULT_ERROR || this.messages.RESULT_PUSH_ERROR
            : !this.loading && this.result !== null && !this.disabled
                ? this.previewIconToolTip
                : !this.loading && this.disabled
                    ? 'You do not have access to this result'
                    : null;
    }
    /**
     * Card click handler, will update the suspect id and switch to one-to-one view mode
     */
    onTitleClick() {
        if (this.result && !this.disabled) {
            this.reportService.configure({ viewMode: 'one-to-one', suspectId: this.preview.id });
        }
    }
    /**
     * hide result
     */
    hideResult() {
        this.reportService.hiddenResults$.pipe(untilDestroy(this), take(1)).subscribe(hiddenResultsIds => {
            this.reportService.setHiddenResults([...hiddenResultsIds, this.preview.id]);
        });
    }
    /**
     * return the preview date from meta data
     */
    getPreviewDate() {
        if (this.preview?.metadata?.creationDate ||
            this.preview?.metadata?.lastModificationDate ||
            this.preview?.metadata?.publishDate) {
            try {
                const d = new Date(this.preview?.metadata?.creationDate ??
                    this.preview?.metadata?.lastModificationDate ??
                    this.preview?.metadata?.publishDate);
                if (Object.prototype.toString.call(d) === '[object Date]') {
                    if (isNaN(d.getTime())) {
                        return null;
                    }
                    else {
                        return this.datePipe.transform(d);
                    }
                }
                else {
                    return null;
                }
            }
            catch {
                return null;
            }
        }
        else {
            return null;
        }
    }
    /**
     * Life-cycle method
     * subscribe to:
     * - the scan result associated with this card
     */
    ngOnInit() {
        this.translations = this.translatesService.translations;
        if (!this.preview) {
            return;
        }
        if (this.preview?.metadata?.filename) {
            let filename = this.preview?.metadata?.filename;
            try {
                filename = decodeURIComponent(this.preview?.metadata?.filename);
            }
            catch {
                filename = this.preview?.metadata?.filename;
            }
            this.preview.metadata.filename = filename;
        }
        this.previewDate = this.getPreviewDate();
        if (this.preview?.metadata?.author || this.preview?.metadata?.organization || this.previewDate) {
            const author = this.preview?.metadata?.author;
            const organization = this.preview?.metadata?.organization;
            const previewDate = this.previewDate;
            // tslint:disable-next-line: max-line-length
            this.metaDataToolTip = `${author ? author : ''}${author && organization ? ' • ' : ''}${organization ? organization : ''}${(author || organization) && previewDate ? ' • ' : ''}${previewDate ? previewDate : ''}`;
        }
        if (this.preview.component) {
            const factory = this.componentFactoryResolver.resolveComponentFactory(this.preview.component);
            setTimeout(() => {
                const ref = this.vcr?.createComponent(factory);
                if (ref) {
                    this.componentInstance = ref.instance;
                    if (this.componentInstance.setPreview) {
                        this.componentInstance.setPreview(this.preview);
                    }
                    if (this.componentInstance.isLoading) {
                        this.componentInstance.isLoading(this.loading);
                    }
                    this.componentInstance.setParentRef(this);
                }
            }, 100);
        }
        const result$ = this.reportService.findResultById$(this.preview.id);
        const { source$, options$, resultCardActions$ } = this.reportService;
        combineLatest([result$, source$])
            .pipe(untilDestroy(this))
            .subscribe(([result, source]) => {
            this.source = source;
            this.result = result.result;
            this.loading = false;
            this.disabled = result.disabled;
            if (this.componentInstance) {
                if (this.componentInstance.isLoading) {
                    this.componentInstance.isLoading(this.loading);
                }
                if (this.componentInstance.setResult) {
                    this.componentInstance.setResult(result);
                }
            }
        });
        this.similarWords$ = combineLatest([result$, options$]).pipe(untilDestroy(this), map(([result, options]) => {
            if (result && result.result && options) {
                const { showIdentical, showMinorChanges, showRelated } = options;
                const { identical, minorChanges, relatedMeaning } = result.result.statistics;
                return ((showIdentical ? identical : 0) + (showMinorChanges ? minorChanges : 0) + (showRelated ? relatedMeaning : 0));
            }
            return this.preview.matchedWords;
        }));
        resultCardActions$
            .pipe(untilDestroy(this), filter(r => !!r && r.length !== 0))
            .subscribe(res => {
            this.resultCardActions = res;
        });
    }
    /**
     * Life-cycle method
     * empty for `untilDestroy` rxjs operator
     */
    ngOnDestroy() { }
}
ResultCardComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.3", ngImport: i0, type: ResultCardComponent, deps: [{ token: i1.CopyleaksTranslateService }, { token: i0.ComponentFactoryResolver }, { token: i2.ReportService }, { token: i3.DirectionService }, { token: i4.DatePipe }, { token: COPYLEAKS_TEXT_CONFIG_INJECTION_TOKEN }], target: i0.ɵɵFactoryTarget.Component });
ResultCardComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.3", type: ResultCardComponent, selector: "cr-result-card", inputs: { preview: "preview" }, host: { properties: { "class.mat-elevation-z3": "this.elevation" } }, providers: [DatePipe], viewQueries: [{ propertyName: "vcr", first: true, predicate: ["vcr"], descendants: true, read: ViewContainerRef }], ngImport: i0, template: "<ng-container *ngIf=\"preview; else skeleton__card\">\n\t<!-- card-icon -->\n\t<div class=\"title-icon\" [matTooltip]=\"titleIconTooltip\">\n\t\t<!-- when result is loading -->\n\t\t<cls-spinner *ngIf=\"loading\" title=\"Spinner\" width=\"20px\"></cls-spinner>\n\n\t\t<!-- when result is disabled (locked) -->\n\t\t<mat-icon class=\"success-icon\" *ngIf=\"disabled\" style=\"opacity: 0.5\">lock</mat-icon>\n\n\t\t<!-- when result has error -->\n\t\t<mat-icon class=\"error-icon\" *ngIf=\"!loading && result === null\" color=\"warn\">error</mat-icon>\n\n\t\t<!-- when result is loaded successfully and it is internal result-->\n\t\t<mat-icon\n\t\t\tclass=\"success-icon\"\n\t\t\t*ngIf=\"!loading && !disabled && result !== null && !preview.url\"\n\t\t\tstyle=\"opacity: 0.5\">\n\t\t\t<ng-container [ngSwitch]=\"preview.type\">\n\t\t\t\t<ng-container *ngSwitchCase=\"eResultPreviewType.Batch\">dns</ng-container>\n\t\t\t\t<ng-container *ngSwitchCase=\"eResultPreviewType.Database\">dns</ng-container>\n\t\t\t\t<ng-container *ngSwitchDefault>storage</ng-container>\n\t\t\t</ng-container>\n\t\t</mat-icon>\n\n\t\t<!-- when result is loaded successfully and it is external result-->\n\t\t<img\n\t\t\talt=\"Result image\"\n\t\t\t*ngIf=\"!loading && result !== null && preview.url\"\n\t\t\t[src]=\"'https://www.google.com/s2/favicons?domain=' + urlDomain\" />\n\t</div>\n\n\t<!-- customer body design -->\n\t<div *ngIf=\"preview?.component\" class=\"custom-component-wrapper\">\n\t\t<ng-container #vcr></ng-container>\n\t</div>\n\n\t<!-- default body design -->\n\t<ng-container *ngIf=\"!preview?.component\">\n\t\t<div header class=\"title\" [class]=\"'title-' + directionService.dir\">\n\t\t\t<button\n\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\tclass=\"result-title-btn\"\n\t\t\t\tmat-button\n\t\t\t\t(click)=\"onTitleClick()\"\n\t\t\t\taria-label=\"Click to see report against this result.\">\n\t\t\t\t<span\n\t\t\t\t\tclass=\"result-title\"\n\t\t\t\t\t[ngClass]=\"{ 'ellipsis-flex-text': preview.type === eResultPreviewType.Internet }\"\n\t\t\t\t\t[matTooltip]=\"preview.title\"\n\t\t\t\t\t[matTooltipDisabled]=\"preview.type !== eResultPreviewType.Internet\">\n\t\t\t\t\t{{ preview.title }}\n\t\t\t\t</span>\n\t\t\t</button>\n\t\t\t<button\n\t\t\t\tclass=\"menu-toggle-button\"\n\t\t\t\ttitle=\"Toggle Menu\"\n\t\t\t\taria-label=\"Opens up options menu for this result.\"\n\t\t\t\taria-haspopup=\"menu\"\n\t\t\t\tmat-icon-button\n\t\t\t\t[matMenuTriggerFor]=\"menu\"\n\t\t\t\tmatTooltip=\"Toggle Menu\">\n\t\t\t\t<mat-icon svgIcon=\"arrow_drop_down\"></mat-icon>\n\t\t\t</button>\n\t\t\t<mat-menu #menu=\"matMenu\" class=\"result-card-actions\">\n\t\t\t\t<button [title]=\"translations?.RESULT_CARD?.ACTIONS?.EXCLUDE || 'Exclude'\" mat-menu-item (click)=\"hideResult()\">\n\t\t\t\t\t{{ translations?.RESULT_CARD?.ACTIONS?.EXCLUDE || 'Exclude' }}\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\ttitle=\"action.name\"\n\t\t\t\t\taria-label=\"Click to choose option.\"\n\t\t\t\t\t*ngFor=\"let action of resultCardActions\"\n\t\t\t\t\tmat-menu-item\n\t\t\t\t\t(click)=\"action.action(preview)\">\n\t\t\t\t\t{{ action.name }}\n\t\t\t\t</button>\n\t\t\t</mat-menu>\n\t\t</div>\n\n\t\t<div\n\t\t\tbody\n\t\t\tclass=\"meta-data\"\n\t\t\t[title]=\"preview.metadata?.filename\"\n\t\t\t*ngIf=\"preview.type != eResultPreviewType.Internet && preview.metadata?.filename\">\n\t\t\t<span>{{ preview.metadata?.filename }}</span>\n\t\t</div>\n\n\t\t<a class=\"link-styles\" *ngIf=\"preview.url\" [href]=\"preview.url\" [title]=\"preview.url\" target=\"_blank\">\n\t\t\t{{ preview.url }}\n\t\t</a>\n\n\t\t<p\n\t\t\tbody\n\t\t\t*ngIf=\"preview.metadata?.author || preview.metadata?.organization || previewDate\"\n\t\t\tclass=\"meta-data\"\n\t\t\t#metaDataRef\n\t\t\t[matTooltip]=\"metaDataToolTip\">\n\t\t\t<span>{{ preview.metadata?.author }}</span>\n\t\t\t<span *ngIf=\"preview.metadata?.author && preview.metadata?.organization\" class=\"dot-divider\">&nbsp;\u2022&nbsp;</span>\n\t\t\t<span *ngIf=\"preview.metadata?.organization\">{{ preview.metadata?.organization }}</span>\n\t\t\t<span *ngIf=\"(preview.metadata?.author || preview.metadata?.organization) && previewDate\" class=\"dot-divider\">\n\t\t\t\t&nbsp;\u2022&nbsp;\n\t\t\t</span>\n\t\t\t<span *ngIf=\"previewDate\">{{ previewDate }}</span>\n\t\t</p>\n\t\t<p\n\t\t\tbody\n\t\t\ttabindex=\"0\"\n\t\t\trole=\"button\"\n\t\t\t(keyup.enter)=\"onTitleClick()\"\n\t\t\t(click)=\"onTitleClick()\"\n\t\t\t*ngIf=\"preview.introduction\"\n\t\t\t[style.cursor]=\"disabled ? 'default' : 'pointer'\"\n\t\t\taria-label=\"Click to see report against this result.\">\n\t\t\t{{ preview.introduction }}\n\t\t</p>\n\t</ng-container>\n\n\t<mat-divider></mat-divider>\n\n\t<div footer fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n\t\t<div [ngClass]=\"{ 'text-identical': true }\" *ngIf=\"source\" style=\"color: black; font-weight: 400\">\n\t\t\t{{ (similarWords$ | async) / (source?.metadata.words - source?.metadata.excluded) | similarity }}\n\t\t\t{{ translations?.RESULT_CARD?.SIMILAR_WORDS || 'similar words' }}\n\t\t</div>\n\t\t<span></span>\n\t\t<div\n\t\t\t[dir]=\"directionService.dir\"\n\t\t\tfxLayout=\"row\"\n\t\t\tfxLayoutGap=\"1em\"\n\t\t\tstyle=\"height: 28px\"\n\t\t\t[satPopoverAnchor]=\"popover\"\n\t\t\tsatPopoverHover\n\t\t\t[tabIndex]=\"0\"\n\t\t\taria-label=\"Use the enter key to see result similarity types.\"\n\t\t\taria-haspopup=\"true\"\n\t\t\trole=\"button\"\n\t\t\t(keyup.enter)=\"popover.toggle()\">\n\t\t\t<span class=\"dot identical\"></span>\n\t\t\t<span class=\"dot minor-changes\"></span>\n\t\t\t<span class=\"dot related\"></span>\n\t\t</div>\n\t</div>\n\n\t<sat-popover #popover horizontalAlign=\"before\" [restoreFocus]=\"true\" [autoFocus]=\"true\">\n\t\t<div fxLayout=\"column nowrap\" fxLayoutAlign=\"start start\" class=\"sat-tooltip mat-typography\" [tabIndex]=\"0\">\n\t\t\t<!--  -->\n\t\t\t<ng-container *ngIf=\"!source\">\n\t\t\t\t<div>\n\t\t\t\t\t<cls-spinner title=\"Spinner\" width=\"30px\"></cls-spinner>\n\t\t\t\t</div>\n\t\t\t</ng-container>\n\t\t\t<!--  -->\n\t\t\t<ng-container *ngIf=\"source\">\n\t\t\t\t<div class=\"text-identical\">\n\t\t\t\t\t{{ translations?.SHARED?.MATCH_TYPES?.IDENTICAL || 'Identical' }} -\n\t\t\t\t\t{{ result?.statistics.identical / (source?.metadata.words - source?.metadata.excluded) | similarity }}\n\t\t\t\t\t{{ translations?.SHARED?.WORDS || 'words' }}.\n\t\t\t\t</div>\n\t\t\t\t<div class=\"text-minor-changes\">\n\t\t\t\t\t{{ translations?.SHARED?.MATCH_TYPES?.MINOR_CHANGES || 'Minor Changes' }} -\n\t\t\t\t\t{{ result?.statistics.minorChanges / (source?.metadata.words - source?.metadata.excluded) | similarity }}\n\t\t\t\t\t{{ translations?.SHARED?.WORDS || 'words' }}.\n\t\t\t\t</div>\n\t\t\t\t<div class=\"text-related\">\n\t\t\t\t\t{{ translations?.SHARED?.MATCH_TYPES?.RELATED_MEANING || 'Paraphrased' }} -\n\t\t\t\t\t{{ result?.statistics.relatedMeaning / (source?.metadata.words - source?.metadata.excluded) | similarity }}\n\t\t\t\t\t{{ translations?.SHARED?.WORDS || 'words' }}.\n\t\t\t\t</div>\n\t\t\t</ng-container>\n\t\t\t<!--  -->\n\t\t</div>\n\t</sat-popover>\n</ng-container>\n\n<ng-template #skeleton__card>\n\t<div class=\"result-loading\">\n\t\t<p>\n\t\t\t<ngx-skeleton-loader></ngx-skeleton-loader>\n\t\t</p>\n\t\t<ngx-skeleton-loader></ngx-skeleton-loader>\n\t\t<ngx-skeleton-loader></ngx-skeleton-loader>\n\t\t<ngx-skeleton-loader></ngx-skeleton-loader>\n\t\t<p>\n\t\t\t<ngx-skeleton-loader></ngx-skeleton-loader>\n\t\t</p>\n\t</div>\n\t<mat-divider></mat-divider>\n\t<div footer fxLayout=\"row\" fxLayoutAlign=\"space-between stretch\">\n\t\t<ngx-skeleton-loader fxFlex=\"30\" [theme]=\"{ height: '28px', margin: 0 }\"></ngx-skeleton-loader>\n\t\t<div fxLayout=\"row\" fxLayoutGap=\"1em\">\n\t\t\t<ngx-skeleton-loader\n\t\t\t\t[theme]=\"{ height: '28px', width: '28px', margin: 0 }\"\n\t\t\t\tappearance=\"circle\"></ngx-skeleton-loader>\n\t\t\t<ngx-skeleton-loader\n\t\t\t\t[theme]=\"{ height: '28px', width: '28px', margin: 0 }\"\n\t\t\t\tappearance=\"circle\"></ngx-skeleton-loader>\n\t\t\t<ngx-skeleton-loader\n\t\t\t\t[theme]=\"{ height: '28px', width: '28px', margin: 0 }\"\n\t\t\t\tappearance=\"circle\"></ngx-skeleton-loader>\n\t\t</div>\n\t</div>\n</ng-template>\n", styles: [".sat-tooltip{color:#fff;border-radius:4px;margin:14px;max-width:250px;padding:.5em;overflow:hidden;text-overflow:ellipsis;background:rgba(0,0,0,.8)}.identical{background-color:#ff796e}.minor-changes{background-color:#ff9a9a}.related{background-color:#ffd9b0}.omitted{background-color:#fff}.text-identical{color:#ff796e}.text-minor-changes{color:#ff9a9a}.text-related{color:#ffd9b0}.dot{border:1px solid #171717;width:1.5em;min-width:1.5em;min-height:1.5em;height:1.5em;border-radius:50%}@media screen and (max-width: 959px){.dot{width:1em;min-width:1em;min-height:1em;height:1em}}.copyleaks-report-dialog .mat-dialog-container{padding:0}.cdk-keyboard-focused{outline:2px solid black!important}:host{display:flex;flex-flow:column nowrap;box-sizing:border-box;border-radius:10px;position:relative;margin:15px 10px 1.5em;box-shadow:#43475545 0 0 .25em,#5a7dbc0d 0 .25em 1em}:host cl-spinner{margin-top:1px}:host .title{display:flex;font-weight:700;justify-content:space-between;word-wrap:break-word;margin-top:17px;padding-bottom:10px}:host .title .result-title-btn{width:auto;height:auto;line-height:normal;border-radius:unset;padding:0 10px}:host .title .result-title-btn .result-title{max-width:450px;display:block;font-weight:700;color:#000;text-wrap:wrap}:host .title .menu-toggle-button{padding:0;width:24px;height:24px;line-height:normal;top:-16px}:host .title-icon{position:absolute;left:-10px;top:-15px;padding:2px;display:flex;justify-content:center;align-items:center;width:25px;height:25px;border:1.5px solid #e0e0e0;border-radius:100%;background:white}:host .title-icon .success-icon{font-size:16px;width:17px;height:16px;line-height:16px}:host .title-icon .error-icon{font-size:24px;width:24px;height:24px;line-height:24px}:host [body]{word-break:break-all;word-break:break-word;padding:1px 12px;color:#47575f}:host [url]{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;padding:0 12px 5px}:host [url] a{text-decoration:none;font-style:italic;color:#107ac3}:host [mat-button]{min-width:36px;padding:0;color:#a9a9a9}:host [footer]{padding:7px 10px;background:rgba(241,241,241,.41);font-weight:400}:host .ellipsis-flex-text{flex:1;text-wrap:wrap}:host .meta-data{font-style:italic;margin-bottom:5px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}:host .meta-data .dot-divider{margin:0 2px 0 0}:host .custom-component-wrapper{min-height:130px}.result-loading{padding:16px 10px 0 13px}::ng-deep .result-card-actions{min-height:unset}::ng-deep .result-card-actions .mat-menu-content:not(:empty){padding-top:0;padding-bottom:0}.result-introduction-btn{width:auto;height:auto;line-height:normal}.result-introduction-btn ::ng-deep .mat-button-wrapper{word-break:normal;padding:1px 12px;color:#47575f}.link-styles{font-style:italic;color:#107ac3;text-decoration:unset;word-wrap:break-word;padding:0 12px 5px}\n"], components: [{ type: i5.SpinnerComponent, selector: "cls-spinner", inputs: ["width", "color"] }, { type: i6.MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }, { type: i7.MatButton, selector: "button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]", inputs: ["disabled", "disableRipple", "color"], exportAs: ["matButton"] }, { type: i8.MatMenu, selector: "mat-menu", exportAs: ["matMenu"] }, { type: i8.MatMenuItem, selector: "[mat-menu-item]", inputs: ["disabled", "disableRipple", "role"], exportAs: ["matMenuItem"] }, { type: i9.MatDivider, selector: "mat-divider", inputs: ["vertical", "inset"] }, { type: i10.SatPopover, selector: "sat-popover", inputs: ["backdropClass", "anchor", "horizontalAlign", "xAlign", "verticalAlign", "yAlign", "forceAlignment", "lockAlignment", "autoFocus", "restoreFocus", "scrollStrategy", "hasBackdrop", "interactiveClose", "openTransition", "closeTransition"], outputs: ["opened", "closed", "afterOpen", "afterClose", "backdropClicked", "overlayKeydown"] }, { type: i11.NgxSkeletonLoaderComponent, selector: "ngx-skeleton-loader", inputs: ["count", "appearance", "theme"] }], directives: [{ type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i12.MatTooltip, selector: "[matTooltip]", exportAs: ["matTooltip"] }, { type: i4.NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { type: i4.NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { type: i4.NgSwitchDefault, selector: "[ngSwitchDefault]" }, { type: i4.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i13.DefaultClassDirective, selector: "  [ngClass], [ngClass.xs], [ngClass.sm], [ngClass.md], [ngClass.lg], [ngClass.xl],  [ngClass.lt-sm], [ngClass.lt-md], [ngClass.lt-lg], [ngClass.lt-xl],  [ngClass.gt-xs], [ngClass.gt-sm], [ngClass.gt-md], [ngClass.gt-lg]", inputs: ["ngClass", "ngClass.xs", "ngClass.sm", "ngClass.md", "ngClass.lg", "ngClass.xl", "ngClass.lt-sm", "ngClass.lt-md", "ngClass.lt-lg", "ngClass.lt-xl", "ngClass.gt-xs", "ngClass.gt-sm", "ngClass.gt-md", "ngClass.gt-lg"] }, { type: i8.MatMenuTrigger, selector: "[mat-menu-trigger-for], [matMenuTriggerFor]", exportAs: ["matMenuTrigger"] }, { type: i4.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i14.DefaultLayoutDirective, selector: "  [fxLayout], [fxLayout.xs], [fxLayout.sm], [fxLayout.md],  [fxLayout.lg], [fxLayout.xl], [fxLayout.lt-sm], [fxLayout.lt-md],  [fxLayout.lt-lg], [fxLayout.lt-xl], [fxLayout.gt-xs], [fxLayout.gt-sm],  [fxLayout.gt-md], [fxLayout.gt-lg]", inputs: ["fxLayout", "fxLayout.xs", "fxLayout.sm", "fxLayout.md", "fxLayout.lg", "fxLayout.xl", "fxLayout.lt-sm", "fxLayout.lt-md", "fxLayout.lt-lg", "fxLayout.lt-xl", "fxLayout.gt-xs", "fxLayout.gt-sm", "fxLayout.gt-md", "fxLayout.gt-lg"] }, { type: i14.DefaultLayoutAlignDirective, selector: "  [fxLayoutAlign], [fxLayoutAlign.xs], [fxLayoutAlign.sm], [fxLayoutAlign.md],  [fxLayoutAlign.lg], [fxLayoutAlign.xl], [fxLayoutAlign.lt-sm], [fxLayoutAlign.lt-md],  [fxLayoutAlign.lt-lg], [fxLayoutAlign.lt-xl], [fxLayoutAlign.gt-xs], [fxLayoutAlign.gt-sm],  [fxLayoutAlign.gt-md], [fxLayoutAlign.gt-lg]", inputs: ["fxLayoutAlign", "fxLayoutAlign.xs", "fxLayoutAlign.sm", "fxLayoutAlign.md", "fxLayoutAlign.lg", "fxLayoutAlign.xl", "fxLayoutAlign.lt-sm", "fxLayoutAlign.lt-md", "fxLayoutAlign.lt-lg", "fxLayoutAlign.lt-xl", "fxLayoutAlign.gt-xs", "fxLayoutAlign.gt-sm", "fxLayoutAlign.gt-md", "fxLayoutAlign.gt-lg"] }, { type: i14.DefaultLayoutGapDirective, selector: "  [fxLayoutGap], [fxLayoutGap.xs], [fxLayoutGap.sm], [fxLayoutGap.md],  [fxLayoutGap.lg], [fxLayoutGap.xl], [fxLayoutGap.lt-sm], [fxLayoutGap.lt-md],  [fxLayoutGap.lt-lg], [fxLayoutGap.lt-xl], [fxLayoutGap.gt-xs], [fxLayoutGap.gt-sm],  [fxLayoutGap.gt-md], [fxLayoutGap.gt-lg]", inputs: ["fxLayoutGap", "fxLayoutGap.xs", "fxLayoutGap.sm", "fxLayoutGap.md", "fxLayoutGap.lg", "fxLayoutGap.xl", "fxLayoutGap.lt-sm", "fxLayoutGap.lt-md", "fxLayoutGap.lt-lg", "fxLayoutGap.lt-xl", "fxLayoutGap.gt-xs", "fxLayoutGap.gt-sm", "fxLayoutGap.gt-md", "fxLayoutGap.gt-lg"] }, { type: i10.SatPopoverHoverDirective, selector: "[satPopoverHover]", inputs: ["satPopoverHover"] }, { type: i15.Dir, selector: "[dir]", inputs: ["dir"], outputs: ["dirChange"], exportAs: ["dir"] }, { type: i10.SatPopoverAnchor, selector: "[satPopoverAnchor]", inputs: ["satPopoverAnchor"], exportAs: ["satPopoverAnchor"] }, { type: i14.DefaultFlexDirective, selector: "  [fxFlex], [fxFlex.xs], [fxFlex.sm], [fxFlex.md],  [fxFlex.lg], [fxFlex.xl], [fxFlex.lt-sm], [fxFlex.lt-md],  [fxFlex.lt-lg], [fxFlex.lt-xl], [fxFlex.gt-xs], [fxFlex.gt-sm],  [fxFlex.gt-md], [fxFlex.gt-lg]", inputs: ["fxFlex", "fxFlex.xs", "fxFlex.sm", "fxFlex.md", "fxFlex.lg", "fxFlex.xl", "fxFlex.lt-sm", "fxFlex.lt-md", "fxFlex.lt-lg", "fxFlex.lt-xl", "fxFlex.gt-xs", "fxFlex.gt-sm", "fxFlex.gt-md", "fxFlex.gt-lg"] }], pipes: { "similarity": i16.SimilarityPipe, "async": i4.AsyncPipe } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.3", ngImport: i0, type: ResultCardComponent, decorators: [{
            type: Component,
            args: [{ selector: 'cr-result-card', providers: [DatePipe], template: "<ng-container *ngIf=\"preview; else skeleton__card\">\n\t<!-- card-icon -->\n\t<div class=\"title-icon\" [matTooltip]=\"titleIconTooltip\">\n\t\t<!-- when result is loading -->\n\t\t<cls-spinner *ngIf=\"loading\" title=\"Spinner\" width=\"20px\"></cls-spinner>\n\n\t\t<!-- when result is disabled (locked) -->\n\t\t<mat-icon class=\"success-icon\" *ngIf=\"disabled\" style=\"opacity: 0.5\">lock</mat-icon>\n\n\t\t<!-- when result has error -->\n\t\t<mat-icon class=\"error-icon\" *ngIf=\"!loading && result === null\" color=\"warn\">error</mat-icon>\n\n\t\t<!-- when result is loaded successfully and it is internal result-->\n\t\t<mat-icon\n\t\t\tclass=\"success-icon\"\n\t\t\t*ngIf=\"!loading && !disabled && result !== null && !preview.url\"\n\t\t\tstyle=\"opacity: 0.5\">\n\t\t\t<ng-container [ngSwitch]=\"preview.type\">\n\t\t\t\t<ng-container *ngSwitchCase=\"eResultPreviewType.Batch\">dns</ng-container>\n\t\t\t\t<ng-container *ngSwitchCase=\"eResultPreviewType.Database\">dns</ng-container>\n\t\t\t\t<ng-container *ngSwitchDefault>storage</ng-container>\n\t\t\t</ng-container>\n\t\t</mat-icon>\n\n\t\t<!-- when result is loaded successfully and it is external result-->\n\t\t<img\n\t\t\talt=\"Result image\"\n\t\t\t*ngIf=\"!loading && result !== null && preview.url\"\n\t\t\t[src]=\"'https://www.google.com/s2/favicons?domain=' + urlDomain\" />\n\t</div>\n\n\t<!-- customer body design -->\n\t<div *ngIf=\"preview?.component\" class=\"custom-component-wrapper\">\n\t\t<ng-container #vcr></ng-container>\n\t</div>\n\n\t<!-- default body design -->\n\t<ng-container *ngIf=\"!preview?.component\">\n\t\t<div header class=\"title\" [class]=\"'title-' + directionService.dir\">\n\t\t\t<button\n\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\tclass=\"result-title-btn\"\n\t\t\t\tmat-button\n\t\t\t\t(click)=\"onTitleClick()\"\n\t\t\t\taria-label=\"Click to see report against this result.\">\n\t\t\t\t<span\n\t\t\t\t\tclass=\"result-title\"\n\t\t\t\t\t[ngClass]=\"{ 'ellipsis-flex-text': preview.type === eResultPreviewType.Internet }\"\n\t\t\t\t\t[matTooltip]=\"preview.title\"\n\t\t\t\t\t[matTooltipDisabled]=\"preview.type !== eResultPreviewType.Internet\">\n\t\t\t\t\t{{ preview.title }}\n\t\t\t\t</span>\n\t\t\t</button>\n\t\t\t<button\n\t\t\t\tclass=\"menu-toggle-button\"\n\t\t\t\ttitle=\"Toggle Menu\"\n\t\t\t\taria-label=\"Opens up options menu for this result.\"\n\t\t\t\taria-haspopup=\"menu\"\n\t\t\t\tmat-icon-button\n\t\t\t\t[matMenuTriggerFor]=\"menu\"\n\t\t\t\tmatTooltip=\"Toggle Menu\">\n\t\t\t\t<mat-icon svgIcon=\"arrow_drop_down\"></mat-icon>\n\t\t\t</button>\n\t\t\t<mat-menu #menu=\"matMenu\" class=\"result-card-actions\">\n\t\t\t\t<button [title]=\"translations?.RESULT_CARD?.ACTIONS?.EXCLUDE || 'Exclude'\" mat-menu-item (click)=\"hideResult()\">\n\t\t\t\t\t{{ translations?.RESULT_CARD?.ACTIONS?.EXCLUDE || 'Exclude' }}\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\ttitle=\"action.name\"\n\t\t\t\t\taria-label=\"Click to choose option.\"\n\t\t\t\t\t*ngFor=\"let action of resultCardActions\"\n\t\t\t\t\tmat-menu-item\n\t\t\t\t\t(click)=\"action.action(preview)\">\n\t\t\t\t\t{{ action.name }}\n\t\t\t\t</button>\n\t\t\t</mat-menu>\n\t\t</div>\n\n\t\t<div\n\t\t\tbody\n\t\t\tclass=\"meta-data\"\n\t\t\t[title]=\"preview.metadata?.filename\"\n\t\t\t*ngIf=\"preview.type != eResultPreviewType.Internet && preview.metadata?.filename\">\n\t\t\t<span>{{ preview.metadata?.filename }}</span>\n\t\t</div>\n\n\t\t<a class=\"link-styles\" *ngIf=\"preview.url\" [href]=\"preview.url\" [title]=\"preview.url\" target=\"_blank\">\n\t\t\t{{ preview.url }}\n\t\t</a>\n\n\t\t<p\n\t\t\tbody\n\t\t\t*ngIf=\"preview.metadata?.author || preview.metadata?.organization || previewDate\"\n\t\t\tclass=\"meta-data\"\n\t\t\t#metaDataRef\n\t\t\t[matTooltip]=\"metaDataToolTip\">\n\t\t\t<span>{{ preview.metadata?.author }}</span>\n\t\t\t<span *ngIf=\"preview.metadata?.author && preview.metadata?.organization\" class=\"dot-divider\">&nbsp;\u2022&nbsp;</span>\n\t\t\t<span *ngIf=\"preview.metadata?.organization\">{{ preview.metadata?.organization }}</span>\n\t\t\t<span *ngIf=\"(preview.metadata?.author || preview.metadata?.organization) && previewDate\" class=\"dot-divider\">\n\t\t\t\t&nbsp;\u2022&nbsp;\n\t\t\t</span>\n\t\t\t<span *ngIf=\"previewDate\">{{ previewDate }}</span>\n\t\t</p>\n\t\t<p\n\t\t\tbody\n\t\t\ttabindex=\"0\"\n\t\t\trole=\"button\"\n\t\t\t(keyup.enter)=\"onTitleClick()\"\n\t\t\t(click)=\"onTitleClick()\"\n\t\t\t*ngIf=\"preview.introduction\"\n\t\t\t[style.cursor]=\"disabled ? 'default' : 'pointer'\"\n\t\t\taria-label=\"Click to see report against this result.\">\n\t\t\t{{ preview.introduction }}\n\t\t</p>\n\t</ng-container>\n\n\t<mat-divider></mat-divider>\n\n\t<div footer fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n\t\t<div [ngClass]=\"{ 'text-identical': true }\" *ngIf=\"source\" style=\"color: black; font-weight: 400\">\n\t\t\t{{ (similarWords$ | async) / (source?.metadata.words - source?.metadata.excluded) | similarity }}\n\t\t\t{{ translations?.RESULT_CARD?.SIMILAR_WORDS || 'similar words' }}\n\t\t</div>\n\t\t<span></span>\n\t\t<div\n\t\t\t[dir]=\"directionService.dir\"\n\t\t\tfxLayout=\"row\"\n\t\t\tfxLayoutGap=\"1em\"\n\t\t\tstyle=\"height: 28px\"\n\t\t\t[satPopoverAnchor]=\"popover\"\n\t\t\tsatPopoverHover\n\t\t\t[tabIndex]=\"0\"\n\t\t\taria-label=\"Use the enter key to see result similarity types.\"\n\t\t\taria-haspopup=\"true\"\n\t\t\trole=\"button\"\n\t\t\t(keyup.enter)=\"popover.toggle()\">\n\t\t\t<span class=\"dot identical\"></span>\n\t\t\t<span class=\"dot minor-changes\"></span>\n\t\t\t<span class=\"dot related\"></span>\n\t\t</div>\n\t</div>\n\n\t<sat-popover #popover horizontalAlign=\"before\" [restoreFocus]=\"true\" [autoFocus]=\"true\">\n\t\t<div fxLayout=\"column nowrap\" fxLayoutAlign=\"start start\" class=\"sat-tooltip mat-typography\" [tabIndex]=\"0\">\n\t\t\t<!--  -->\n\t\t\t<ng-container *ngIf=\"!source\">\n\t\t\t\t<div>\n\t\t\t\t\t<cls-spinner title=\"Spinner\" width=\"30px\"></cls-spinner>\n\t\t\t\t</div>\n\t\t\t</ng-container>\n\t\t\t<!--  -->\n\t\t\t<ng-container *ngIf=\"source\">\n\t\t\t\t<div class=\"text-identical\">\n\t\t\t\t\t{{ translations?.SHARED?.MATCH_TYPES?.IDENTICAL || 'Identical' }} -\n\t\t\t\t\t{{ result?.statistics.identical / (source?.metadata.words - source?.metadata.excluded) | similarity }}\n\t\t\t\t\t{{ translations?.SHARED?.WORDS || 'words' }}.\n\t\t\t\t</div>\n\t\t\t\t<div class=\"text-minor-changes\">\n\t\t\t\t\t{{ translations?.SHARED?.MATCH_TYPES?.MINOR_CHANGES || 'Minor Changes' }} -\n\t\t\t\t\t{{ result?.statistics.minorChanges / (source?.metadata.words - source?.metadata.excluded) | similarity }}\n\t\t\t\t\t{{ translations?.SHARED?.WORDS || 'words' }}.\n\t\t\t\t</div>\n\t\t\t\t<div class=\"text-related\">\n\t\t\t\t\t{{ translations?.SHARED?.MATCH_TYPES?.RELATED_MEANING || 'Paraphrased' }} -\n\t\t\t\t\t{{ result?.statistics.relatedMeaning / (source?.metadata.words - source?.metadata.excluded) | similarity }}\n\t\t\t\t\t{{ translations?.SHARED?.WORDS || 'words' }}.\n\t\t\t\t</div>\n\t\t\t</ng-container>\n\t\t\t<!--  -->\n\t\t</div>\n\t</sat-popover>\n</ng-container>\n\n<ng-template #skeleton__card>\n\t<div class=\"result-loading\">\n\t\t<p>\n\t\t\t<ngx-skeleton-loader></ngx-skeleton-loader>\n\t\t</p>\n\t\t<ngx-skeleton-loader></ngx-skeleton-loader>\n\t\t<ngx-skeleton-loader></ngx-skeleton-loader>\n\t\t<ngx-skeleton-loader></ngx-skeleton-loader>\n\t\t<p>\n\t\t\t<ngx-skeleton-loader></ngx-skeleton-loader>\n\t\t</p>\n\t</div>\n\t<mat-divider></mat-divider>\n\t<div footer fxLayout=\"row\" fxLayoutAlign=\"space-between stretch\">\n\t\t<ngx-skeleton-loader fxFlex=\"30\" [theme]=\"{ height: '28px', margin: 0 }\"></ngx-skeleton-loader>\n\t\t<div fxLayout=\"row\" fxLayoutGap=\"1em\">\n\t\t\t<ngx-skeleton-loader\n\t\t\t\t[theme]=\"{ height: '28px', width: '28px', margin: 0 }\"\n\t\t\t\tappearance=\"circle\"></ngx-skeleton-loader>\n\t\t\t<ngx-skeleton-loader\n\t\t\t\t[theme]=\"{ height: '28px', width: '28px', margin: 0 }\"\n\t\t\t\tappearance=\"circle\"></ngx-skeleton-loader>\n\t\t\t<ngx-skeleton-loader\n\t\t\t\t[theme]=\"{ height: '28px', width: '28px', margin: 0 }\"\n\t\t\t\tappearance=\"circle\"></ngx-skeleton-loader>\n\t\t</div>\n\t</div>\n</ng-template>\n", styles: [".sat-tooltip{color:#fff;border-radius:4px;margin:14px;max-width:250px;padding:.5em;overflow:hidden;text-overflow:ellipsis;background:rgba(0,0,0,.8)}.identical{background-color:#ff796e}.minor-changes{background-color:#ff9a9a}.related{background-color:#ffd9b0}.omitted{background-color:#fff}.text-identical{color:#ff796e}.text-minor-changes{color:#ff9a9a}.text-related{color:#ffd9b0}.dot{border:1px solid #171717;width:1.5em;min-width:1.5em;min-height:1.5em;height:1.5em;border-radius:50%}@media screen and (max-width: 959px){.dot{width:1em;min-width:1em;min-height:1em;height:1em}}.copyleaks-report-dialog .mat-dialog-container{padding:0}.cdk-keyboard-focused{outline:2px solid black!important}:host{display:flex;flex-flow:column nowrap;box-sizing:border-box;border-radius:10px;position:relative;margin:15px 10px 1.5em;box-shadow:#43475545 0 0 .25em,#5a7dbc0d 0 .25em 1em}:host cl-spinner{margin-top:1px}:host .title{display:flex;font-weight:700;justify-content:space-between;word-wrap:break-word;margin-top:17px;padding-bottom:10px}:host .title .result-title-btn{width:auto;height:auto;line-height:normal;border-radius:unset;padding:0 10px}:host .title .result-title-btn .result-title{max-width:450px;display:block;font-weight:700;color:#000;text-wrap:wrap}:host .title .menu-toggle-button{padding:0;width:24px;height:24px;line-height:normal;top:-16px}:host .title-icon{position:absolute;left:-10px;top:-15px;padding:2px;display:flex;justify-content:center;align-items:center;width:25px;height:25px;border:1.5px solid #e0e0e0;border-radius:100%;background:white}:host .title-icon .success-icon{font-size:16px;width:17px;height:16px;line-height:16px}:host .title-icon .error-icon{font-size:24px;width:24px;height:24px;line-height:24px}:host [body]{word-break:break-all;word-break:break-word;padding:1px 12px;color:#47575f}:host [url]{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;padding:0 12px 5px}:host [url] a{text-decoration:none;font-style:italic;color:#107ac3}:host [mat-button]{min-width:36px;padding:0;color:#a9a9a9}:host [footer]{padding:7px 10px;background:rgba(241,241,241,.41);font-weight:400}:host .ellipsis-flex-text{flex:1;text-wrap:wrap}:host .meta-data{font-style:italic;margin-bottom:5px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}:host .meta-data .dot-divider{margin:0 2px 0 0}:host .custom-component-wrapper{min-height:130px}.result-loading{padding:16px 10px 0 13px}::ng-deep .result-card-actions{min-height:unset}::ng-deep .result-card-actions .mat-menu-content:not(:empty){padding-top:0;padding-bottom:0}.result-introduction-btn{width:auto;height:auto;line-height:normal}.result-introduction-btn ::ng-deep .mat-button-wrapper{word-break:normal;padding:1px 12px;color:#47575f}.link-styles{font-style:italic;color:#107ac3;text-decoration:unset;word-wrap:break-word;padding:0 12px 5px}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.CopyleaksTranslateService }, { type: i0.ComponentFactoryResolver }, { type: i2.ReportService }, { type: i3.DirectionService }, { type: i4.DatePipe }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [COPYLEAKS_TEXT_CONFIG_INJECTION_TOKEN]
                }] }]; }, propDecorators: { elevation: [{
                type: HostBinding,
                args: ['class.mat-elevation-z3']
            }], vcr: [{
                type: ViewChild,
                args: ['vcr', { read: ViewContainerRef }]
            }], preview: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,