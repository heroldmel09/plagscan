import { Component, HostBinding, ViewChild, ViewContainerRef, } from '@angular/core';
import { combineLatest } from 'rxjs';
import { delay, filter } from 'rxjs/operators';
import { untilDestroy } from '../../../shared/operators/untilDestroy';
import { IMAGES } from '../../assets/images';
import { ResultsFilterDialogComponent } from '../results-filter-dialog/results-filter-dialog.component';
import * as i0 from "@angular/core";
import * as i1 from "../../services/copyleaks.service";
import * as i2 from "../../services/report.service";
import * as i3 from "@angular/material/dialog";
import * as i4 from "../../services/layout-media-query.service";
import * as i5 from "../../services/highlight.service";
import * as i6 from "../../services/copyleaks-translate.service";
import * as i7 from "../../services/direction.service";
import * as i8 from "@angular/cdk/a11y";
import * as i9 from "../../../panel/panel.component";
import * as i10 from "../spinner/spinner.component";
import * as i11 from "@angular/material/button";
import * as i12 from "@angular/material/icon";
import * as i13 from "../plagiarism-free/plagiarism-free.component";
import * as i14 from "ngx-virtual-scroller";
import * as i15 from "../result-card/result-card.component";
import * as i16 from "../powered-by/powered-by.component";
import * as i17 from "@angular/common";
import * as i18 from "@angular/flex-layout/extended";
import * as i19 from "@angular/material/tooltip";
import * as i20 from "@angular/flex-layout/flex";
import * as i21 from "../../../shared/pipes/whitelist.pipe";
export class ResultsComponent {
    constructor(componentFactoryResolver, copyleaksService, reportService, dialogService, layoutService, highlightService, translationsService, directionService, cd, elementRef, announcer) {
        this.componentFactoryResolver = componentFactoryResolver;
        this.copyleaksService = copyleaksService;
        this.reportService = reportService;
        this.dialogService = dialogService;
        this.layoutService = layoutService;
        this.highlightService = highlightService;
        this.translationsService = translationsService;
        this.directionService = directionService;
        this.cd = cd;
        this.elementRef = elementRef;
        this.announcer = announcer;
        this.hasOverlay = false;
        this.isLoadingResults = true;
        this.isComponentDisplayed = true;
        this.isActive = false;
        this.isMobile = false;
        this.hiddenResults = [];
        this.plagFreeImg = IMAGES.PLAGIARISM_FREE_PNG;
    }
    get visibleResults() {
        return this.focusedMatch.ids.filter(id => !this.hiddenResults.includes(id));
    }
    /**
     * Displays the results filter dialog modal
     */
    openFilterDialog() {
        this.dialogService.open(ResultsFilterDialogComponent, {
            direction: this.directionService.dir,
            data: this.reportService,
        });
    }
    /**
     * Life-cycle method
     * subscribe to:
     * - filtered match previews
     * - currently selected match
     * - user configured hidden results
     * - layout changes
     */
    ngOnInit() {
        this.translations = this.translationsService.translations;
        const { filteredPreviews$, hiddenResults$, contentMode$, results$ } = this.reportService;
        const { originalText$, originalHtml$ } = this.highlightService;
        combineLatest([originalText$, originalHtml$, contentMode$])
            .pipe(untilDestroy(this), filter(_ => this.isComponentDisplayed))
            .subscribe(([text, html, content]) => {
            this.focusedMatch = content === 'text' ? text && text.match : html;
            this.cd.detectChanges();
        });
        filteredPreviews$.pipe(untilDestroy(this)).subscribe(previews => {
            this.previews = this.copyleaksService.sortScanResults(previews);
        });
        hiddenResults$.pipe(untilDestroy(this)).subscribe(ids => {
            this.hiddenResults = ids;
            this.highlightService.clear();
            this.highlightService.clearAllMatchs();
        });
        this.layoutService.isMobile$.pipe(untilDestroy(this)).subscribe(isMobile => (this.isMobile = isMobile));
        this.copyleaksService.onReportConfig$.pipe(untilDestroy(this)).subscribe(config => {
            this.checkAndAddOverlay(config);
        });
        results$.pipe(untilDestroy(this), delay(1000)).subscribe(results => {
            if (results?.length === this.previews?.length) {
                this.isLoadingResults = false;
            }
        });
        this.listenForDisplayChange();
    }
    /**
     * listener for display change
     */
    listenForDisplayChange() {
        const observer = new MutationObserver(() => {
            this.isComponentDisplayed = this.elementRef?.nativeElement?.style?.display !== 'none';
        });
        const target = this.elementRef.nativeElement;
        observer.observe(target, { attributes: true, attributeFilter: ['style'] });
    }
    /**
     * check if the results overlay component was passed
     */
    checkAndAddOverlay(config) {
        if (config && config.resultsOverlayComponent) {
            this.hasOverlay = true;
            if (!this.resultsOverlayComponentInstance) {
                const factory = this.componentFactoryResolver.resolveComponentFactory(config.resultsOverlayComponent);
                setTimeout(() => {
                    if (!this.resultsOverlayComponentInstance) {
                        const resultsOverlayComponentInstance = this.vcr?.createComponent(factory);
                        if (resultsOverlayComponentInstance) {
                            this.resultsOverlayComponentInstance = resultsOverlayComponentInstance;
                        }
                    }
                }, 100);
            }
        }
        else {
            this.hasOverlay = false;
        }
    }
    /**
     * Removes the focus of the currently focused match
     */
    clearFocusedMatch() {
        this.highlightService.setOriginalTextMatch(null);
        this.highlightService.setOriginalHtmlMatch(null);
        this.announcer.announce('Cleared focused', 'assertive');
    }
    /**
     * Life-cycle method
     * empty for `untilDestroy` rxjs operator
     */
    ngOnDestroy() { }
}
ResultsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.3", ngImport: i0, type: ResultsComponent, deps: [{ token: i0.ComponentFactoryResolver }, { token: i1.CopyleaksService }, { token: i2.ReportService }, { token: i3.MatDialog }, { token: i4.LayoutMediaQueryService }, { token: i5.HighlightService }, { token: i6.CopyleaksTranslateService }, { token: i7.DirectionService }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i8.LiveAnnouncer }], target: i0.ɵɵFactoryTarget.Component });
ResultsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.3", type: ResultsComponent, selector: "cr-results", host: { properties: { "class.active": "this.isActive", "class.mobile": "this.isMobile" } }, viewQueries: [{ propertyName: "vcr", first: true, predicate: ["vcr"], descendants: true, read: ViewContainerRef }], ngImport: i0, template: "<cr-panel>\n\t<cr-panel-header>\n\t\t<!--  -->\n\t\t<cls-spinner\n\t\t\tstyle=\"margin-right: 8px\"\n\t\t\ttitle=\"Spinner\"\n\t\t\t*ngIf=\"previews?.length && isLoadingResults\"\n\t\t\twidth=\"20px\"></cls-spinner>\n\t\t<!--  -->\n\t\t{{ translations?.RESULTS_SECTION?.TITLE || 'Results' }}\n\t\t<ng-container *ngIf=\"focusedMatch\">\n\t\t\t({{ visibleResults.length }} {{ translations?.SHARED?.OF || 'of' }} {{ previews?.length }})\n\t\t</ng-container>\n\t\t<!--  -->\n\t</cr-panel-header>\n\t<cr-panel-actions>\n\t\t<cr-panel-action *ngIf=\"focusedMatch\">\n\t\t\t<ng-container *ngTemplateOutlet=\"menu__show_results\"></ng-container>\n\t\t</cr-panel-action>\n\t\t<cr-panel-action *ngIf=\"isMobile\">\n\t\t\t<button mat-button [disabled]=\"!previews\" (click)=\"isActive = !isActive\" aria-label=\"expend actions\">\n\t\t\t\t<mat-icon [svgIcon]=\"isActive ? 'arrow_downward' : 'arrow_upward'\"></mat-icon>\n\t\t\t</button>\n\t\t</cr-panel-action>\n\t\t<cr-panel-action *ngIf=\"!isMobile || isActive\">\n\t\t\t<div id=\"cr-hint-results-filter-list\"></div>\n\t\t\t<button\n\t\t\t\ttitle=\"Filter results\"\n\t\t\t\ttabindex=\"0\"\n\t\t\t\trole=\"button\"\n\t\t\t\tmat-button\n\t\t\t\t[ngClass]=\"{ 'mat-stroked-button mat-warn': hiddenResults.length }\"\n\t\t\t\t[disabled]=\"!previews || hasOverlay\"\n\t\t\t\t[matTooltip]=\"\n\t\t\t\t\thiddenResults.length\n\t\t\t\t\t\t? hiddenResults.length + (translations?.RESULTS_SECTION?.FILTERED_RESULTS_TOOLTIP || ' results are hidden')\n\t\t\t\t\t\t: translations?.RESULTS_SECTION?.FILTER_TOOLTIP || 'Filter results'\n\t\t\t\t\"\n\t\t\t\t(click)=\"openFilterDialog()\"\n\t\t\t\taria-label=\"Opens a dialog to filter out results from report.\">\n\t\t\t\t<mat-icon [svgIcon]=\"hiddenResults.length ? 'filter_list_color_red' : 'filter_list'\"></mat-icon>\n\t\t\t</button>\n\t\t</cr-panel-action>\n\t</cr-panel-actions>\n\t<cr-panel-body fxLayout=\"column\" fxFlex=\"100\">\n\t\t<div id=\"cr-hint-results-card\"></div>\n\t\t<ng-container *ngIf=\"hasOverlay\">\n\t\t\t<div class=\"overlay-component-wrapper\">\n\t\t\t\t<ng-container #vcr></ng-container>\n\t\t\t</div>\n\t\t</ng-container>\n\t\t<cr-plagiarism-free\n\t\t\t*ngIf=\"previews && previews.length === 0\"\n\t\t\t[ngClass]=\"hasOverlay ? 'blur' : ''\"></cr-plagiarism-free>\n\t\t<virtual-scroller\n\t\t\t*ngIf=\"previews\"\n\t\t\t[ngClass]=\"hasOverlay ? 'blur' : ''\"\n\t\t\t[bufferAmount]=\"7\"\n\t\t\t#scroll\n\t\t\tfxFlex\n\t\t\t[items]=\"previews | whitelist : 'id' : focusedMatch?.ids\">\n\t\t\t<cr-result-card *ngFor=\"let preview of scroll.viewPortItems\" [preview]=\"preview\"></cr-result-card>\n\t\t</virtual-scroller>\n\t\t<virtual-scroller *ngIf=\"!previews\" [ngClass]=\"hasOverlay ? 'blur' : ''\" #scroll fxFlex [items]=\"[1, 2, 3, 4]\">\n\t\t\t<cr-result-card *ngFor=\"let preview of scroll.viewPortItems\"></cr-result-card>\n\t\t</virtual-scroller>\n\t\t<div class=\"powered-by-section\">\n\t\t\t<cr-powered-by></cr-powered-by>\n\t\t</div>\n\t</cr-panel-body>\n</cr-panel>\n<ng-template #menu__show_results>\n\t<button\n\t\taria-label=\"Clear focused results\"\n\t\t[title]=\"translations?.RESULTS_SECTION?.CLEAR_FILTER || 'Clear focused'\"\n\t\tmat-button\n\t\t(click)=\"clearFocusedMatch()\"\n\t\t[matTooltip]=\"translations?.RESULTS_SECTION?.CLEAR_FILTER || 'Clear focused'\">\n\t\t<mat-icon>close</mat-icon>\n\t</button>\n</ng-template>\n\n<ng-template #skeleton__fakes>\n\t<cr-result-card></cr-result-card>\n\t<cr-result-card></cr-result-card>\n\t<cr-result-card></cr-result-card>\n</ng-template>\n", styles: [".sat-tooltip{color:#fff;border-radius:4px;margin:14px;max-width:250px;padding:.5em;overflow:hidden;text-overflow:ellipsis;background:rgba(0,0,0,.8)}.identical{background-color:#ff796e}.minor-changes{background-color:#ff9a9a}.related{background-color:#ffd9b0}.omitted{background-color:#fff}.text-identical{color:#ff796e}.text-minor-changes{color:#ff9a9a}.text-related{color:#ffd9b0}.dot{border:1px solid #171717;width:1.5em;min-width:1.5em;min-height:1.5em;height:1.5em;border-radius:50%}@media screen and (max-width: 959px){.dot{width:1em;min-width:1em;min-height:1em;height:1em}}.copyleaks-report-dialog .mat-dialog-container{padding:0}.cdk-keyboard-focused{outline:2px solid black!important}:host{background-color:#fff;overflow:hidden}cr-panel{flex:1;height:100%}cr-panel cr-panel-header{text-transform:uppercase}cr-panel-body{position:relative}cr-panel-body .overlay-component-wrapper{position:absolute;display:flex;right:0;left:0;bottom:0;top:0;z-index:1}cr-panel-body cdk-virtual-scroll-viewport{padding:1em;margin:-1em;scrollbar-width:0px;overflow-y:scroll}cr-panel-body cdk-virtual-scroll-viewport ::ng-deep .cdk-virtual-scroll-content-wrapper{max-width:100%}cr-panel-body cdk-virtual-scroll-viewport ::ng-deep .cdk-virtual-scroll-spacer:nth-child(0),cr-panel-body cdk-virtual-scroll-viewport ::ng-deep .cdk-virtual-scroll-spacer:nth-child(1),cr-panel-body cdk-virtual-scroll-viewport ::ng-deep .cdk-virtual-scroll-spacer:nth-child(2),cr-panel-body cdk-virtual-scroll-viewport ::ng-deep .cdk-virtual-scroll-spacer:nth-child(3){transform:scaleY(0)}@media screen and (max-width: 599px){cr-panel-body cdk-virtual-scroll-viewport{padding:.5em;margin:0 -.5em}}@media screen and (max-width: 599px){cr-panel-body{margin-top:0}}[skeleton__card] mat-divider{margin:1em -1em}[skeleton__card] [footer]{height:28px}[skeleton__card] ngx-skeleton-loader:nth-child(5n+1){width:.88}[skeleton__card] ngx-skeleton-loader:nth-child(5n+2){width:.94}[skeleton__card] ngx-skeleton-loader:nth-child(5n+3){width:.71}[skeleton__card] ngx-skeleton-loader:nth-child(5n+4){width:.87}[skeleton__card] ngx-skeleton-loader:nth-child(5n+5){width:.82}[mat-button]{min-width:36px;padding:0}.blur{filter:blur(5px);overflow:hidden!important}.powered-by-section cr-powered-by{height:44px;padding-top:1px;border-top:1px solid rgba(0,0,0,.12);margin-top:12px;margin-bottom:-4px}#cr-hint-results-filter-list{position:relative;top:-5px;right:-11px}#cr-hint-results-card{transform:translate(45%)}\n"], components: [{ type: i9.PanelComponent, selector: "cr-panel" }, { type: i9.PanelHeaderComponent, selector: "cr-panel-header" }, { type: i10.SpinnerComponent, selector: "cls-spinner", inputs: ["width", "color"] }, { type: i9.PanelActionsComponent, selector: "cr-panel-actions" }, { type: i9.PanelActionComponent, selector: "cr-panel-action" }, { type: i11.MatButton, selector: "button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]", inputs: ["disabled", "disableRipple", "color"], exportAs: ["matButton"] }, { type: i12.MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }, { type: i9.PanelBodyComponent, selector: "cr-panel-body" }, { type: i13.PlagiarismFreeComponent, selector: "cr-plagiarism-free" }, { type: i14.VirtualScrollerComponent, selector: "virtual-scroller,[virtualScroller]", inputs: ["executeRefreshOutsideAngularZone", "RTL", "useMarginInsteadOfTranslate", "ssrViewportWidth", "ssrViewportHeight", "compareItems", "checkResizeInterval", "modifyOverflowStyleOfParentScroll", "resizeBypassRefreshThreshold", "scrollAnimationTime", "scrollDebounceTime", "scrollThrottlingTime", "scrollbarHeight", "scrollbarWidth", "stripedTable", "horizontal", "enableUnequalChildrenSizes", "bufferAmount", "items", "parentScroll", "childWidth", "childHeight", "ssrChildWidth", "ssrChildHeight"], outputs: ["vsUpdate", "vsChange", "vsStart", "vsEnd"], exportAs: ["virtualScroller"] }, { type: i15.ResultCardComponent, selector: "cr-result-card", inputs: ["preview"] }, { type: i16.PoweredByComponent, selector: "cr-powered-by" }], directives: [{ type: i17.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i17.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }, { type: i17.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i18.DefaultClassDirective, selector: "  [ngClass], [ngClass.xs], [ngClass.sm], [ngClass.md], [ngClass.lg], [ngClass.xl],  [ngClass.lt-sm], [ngClass.lt-md], [ngClass.lt-lg], [ngClass.lt-xl],  [ngClass.gt-xs], [ngClass.gt-sm], [ngClass.gt-md], [ngClass.gt-lg]", inputs: ["ngClass", "ngClass.xs", "ngClass.sm", "ngClass.md", "ngClass.lg", "ngClass.xl", "ngClass.lt-sm", "ngClass.lt-md", "ngClass.lt-lg", "ngClass.lt-xl", "ngClass.gt-xs", "ngClass.gt-sm", "ngClass.gt-md", "ngClass.gt-lg"] }, { type: i19.MatTooltip, selector: "[matTooltip]", exportAs: ["matTooltip"] }, { type: i20.DefaultLayoutDirective, selector: "  [fxLayout], [fxLayout.xs], [fxLayout.sm], [fxLayout.md],  [fxLayout.lg], [fxLayout.xl], [fxLayout.lt-sm], [fxLayout.lt-md],  [fxLayout.lt-lg], [fxLayout.lt-xl], [fxLayout.gt-xs], [fxLayout.gt-sm],  [fxLayout.gt-md], [fxLayout.gt-lg]", inputs: ["fxLayout", "fxLayout.xs", "fxLayout.sm", "fxLayout.md", "fxLayout.lg", "fxLayout.xl", "fxLayout.lt-sm", "fxLayout.lt-md", "fxLayout.lt-lg", "fxLayout.lt-xl", "fxLayout.gt-xs", "fxLayout.gt-sm", "fxLayout.gt-md", "fxLayout.gt-lg"] }, { type: i20.DefaultFlexDirective, selector: "  [fxFlex], [fxFlex.xs], [fxFlex.sm], [fxFlex.md],  [fxFlex.lg], [fxFlex.xl], [fxFlex.lt-sm], [fxFlex.lt-md],  [fxFlex.lt-lg], [fxFlex.lt-xl], [fxFlex.gt-xs], [fxFlex.gt-sm],  [fxFlex.gt-md], [fxFlex.gt-lg]", inputs: ["fxFlex", "fxFlex.xs", "fxFlex.sm", "fxFlex.md", "fxFlex.lg", "fxFlex.xl", "fxFlex.lt-sm", "fxFlex.lt-md", "fxFlex.lt-lg", "fxFlex.lt-xl", "fxFlex.gt-xs", "fxFlex.gt-sm", "fxFlex.gt-md", "fxFlex.gt-lg"] }, { type: i17.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }], pipes: { "whitelist": i21.WhitelistPipe }, animations: [] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.3", ngImport: i0, type: ResultsComponent, decorators: [{
            type: Component,
            args: [{ selector: 'cr-results', animations: [], template: "<cr-panel>\n\t<cr-panel-header>\n\t\t<!--  -->\n\t\t<cls-spinner\n\t\t\tstyle=\"margin-right: 8px\"\n\t\t\ttitle=\"Spinner\"\n\t\t\t*ngIf=\"previews?.length && isLoadingResults\"\n\t\t\twidth=\"20px\"></cls-spinner>\n\t\t<!--  -->\n\t\t{{ translations?.RESULTS_SECTION?.TITLE || 'Results' }}\n\t\t<ng-container *ngIf=\"focusedMatch\">\n\t\t\t({{ visibleResults.length }} {{ translations?.SHARED?.OF || 'of' }} {{ previews?.length }})\n\t\t</ng-container>\n\t\t<!--  -->\n\t</cr-panel-header>\n\t<cr-panel-actions>\n\t\t<cr-panel-action *ngIf=\"focusedMatch\">\n\t\t\t<ng-container *ngTemplateOutlet=\"menu__show_results\"></ng-container>\n\t\t</cr-panel-action>\n\t\t<cr-panel-action *ngIf=\"isMobile\">\n\t\t\t<button mat-button [disabled]=\"!previews\" (click)=\"isActive = !isActive\" aria-label=\"expend actions\">\n\t\t\t\t<mat-icon [svgIcon]=\"isActive ? 'arrow_downward' : 'arrow_upward'\"></mat-icon>\n\t\t\t</button>\n\t\t</cr-panel-action>\n\t\t<cr-panel-action *ngIf=\"!isMobile || isActive\">\n\t\t\t<div id=\"cr-hint-results-filter-list\"></div>\n\t\t\t<button\n\t\t\t\ttitle=\"Filter results\"\n\t\t\t\ttabindex=\"0\"\n\t\t\t\trole=\"button\"\n\t\t\t\tmat-button\n\t\t\t\t[ngClass]=\"{ 'mat-stroked-button mat-warn': hiddenResults.length }\"\n\t\t\t\t[disabled]=\"!previews || hasOverlay\"\n\t\t\t\t[matTooltip]=\"\n\t\t\t\t\thiddenResults.length\n\t\t\t\t\t\t? hiddenResults.length + (translations?.RESULTS_SECTION?.FILTERED_RESULTS_TOOLTIP || ' results are hidden')\n\t\t\t\t\t\t: translations?.RESULTS_SECTION?.FILTER_TOOLTIP || 'Filter results'\n\t\t\t\t\"\n\t\t\t\t(click)=\"openFilterDialog()\"\n\t\t\t\taria-label=\"Opens a dialog to filter out results from report.\">\n\t\t\t\t<mat-icon [svgIcon]=\"hiddenResults.length ? 'filter_list_color_red' : 'filter_list'\"></mat-icon>\n\t\t\t</button>\n\t\t</cr-panel-action>\n\t</cr-panel-actions>\n\t<cr-panel-body fxLayout=\"column\" fxFlex=\"100\">\n\t\t<div id=\"cr-hint-results-card\"></div>\n\t\t<ng-container *ngIf=\"hasOverlay\">\n\t\t\t<div class=\"overlay-component-wrapper\">\n\t\t\t\t<ng-container #vcr></ng-container>\n\t\t\t</div>\n\t\t</ng-container>\n\t\t<cr-plagiarism-free\n\t\t\t*ngIf=\"previews && previews.length === 0\"\n\t\t\t[ngClass]=\"hasOverlay ? 'blur' : ''\"></cr-plagiarism-free>\n\t\t<virtual-scroller\n\t\t\t*ngIf=\"previews\"\n\t\t\t[ngClass]=\"hasOverlay ? 'blur' : ''\"\n\t\t\t[bufferAmount]=\"7\"\n\t\t\t#scroll\n\t\t\tfxFlex\n\t\t\t[items]=\"previews | whitelist : 'id' : focusedMatch?.ids\">\n\t\t\t<cr-result-card *ngFor=\"let preview of scroll.viewPortItems\" [preview]=\"preview\"></cr-result-card>\n\t\t</virtual-scroller>\n\t\t<virtual-scroller *ngIf=\"!previews\" [ngClass]=\"hasOverlay ? 'blur' : ''\" #scroll fxFlex [items]=\"[1, 2, 3, 4]\">\n\t\t\t<cr-result-card *ngFor=\"let preview of scroll.viewPortItems\"></cr-result-card>\n\t\t</virtual-scroller>\n\t\t<div class=\"powered-by-section\">\n\t\t\t<cr-powered-by></cr-powered-by>\n\t\t</div>\n\t</cr-panel-body>\n</cr-panel>\n<ng-template #menu__show_results>\n\t<button\n\t\taria-label=\"Clear focused results\"\n\t\t[title]=\"translations?.RESULTS_SECTION?.CLEAR_FILTER || 'Clear focused'\"\n\t\tmat-button\n\t\t(click)=\"clearFocusedMatch()\"\n\t\t[matTooltip]=\"translations?.RESULTS_SECTION?.CLEAR_FILTER || 'Clear focused'\">\n\t\t<mat-icon>close</mat-icon>\n\t</button>\n</ng-template>\n\n<ng-template #skeleton__fakes>\n\t<cr-result-card></cr-result-card>\n\t<cr-result-card></cr-result-card>\n\t<cr-result-card></cr-result-card>\n</ng-template>\n", styles: [".sat-tooltip{color:#fff;border-radius:4px;margin:14px;max-width:250px;padding:.5em;overflow:hidden;text-overflow:ellipsis;background:rgba(0,0,0,.8)}.identical{background-color:#ff796e}.minor-changes{background-color:#ff9a9a}.related{background-color:#ffd9b0}.omitted{background-color:#fff}.text-identical{color:#ff796e}.text-minor-changes{color:#ff9a9a}.text-related{color:#ffd9b0}.dot{border:1px solid #171717;width:1.5em;min-width:1.5em;min-height:1.5em;height:1.5em;border-radius:50%}@media screen and (max-width: 959px){.dot{width:1em;min-width:1em;min-height:1em;height:1em}}.copyleaks-report-dialog .mat-dialog-container{padding:0}.cdk-keyboard-focused{outline:2px solid black!important}:host{background-color:#fff;overflow:hidden}cr-panel{flex:1;height:100%}cr-panel cr-panel-header{text-transform:uppercase}cr-panel-body{position:relative}cr-panel-body .overlay-component-wrapper{position:absolute;display:flex;right:0;left:0;bottom:0;top:0;z-index:1}cr-panel-body cdk-virtual-scroll-viewport{padding:1em;margin:-1em;scrollbar-width:0px;overflow-y:scroll}cr-panel-body cdk-virtual-scroll-viewport ::ng-deep .cdk-virtual-scroll-content-wrapper{max-width:100%}cr-panel-body cdk-virtual-scroll-viewport ::ng-deep .cdk-virtual-scroll-spacer:nth-child(0),cr-panel-body cdk-virtual-scroll-viewport ::ng-deep .cdk-virtual-scroll-spacer:nth-child(1),cr-panel-body cdk-virtual-scroll-viewport ::ng-deep .cdk-virtual-scroll-spacer:nth-child(2),cr-panel-body cdk-virtual-scroll-viewport ::ng-deep .cdk-virtual-scroll-spacer:nth-child(3){transform:scaleY(0)}@media screen and (max-width: 599px){cr-panel-body cdk-virtual-scroll-viewport{padding:.5em;margin:0 -.5em}}@media screen and (max-width: 599px){cr-panel-body{margin-top:0}}[skeleton__card] mat-divider{margin:1em -1em}[skeleton__card] [footer]{height:28px}[skeleton__card] ngx-skeleton-loader:nth-child(5n+1){width:.88}[skeleton__card] ngx-skeleton-loader:nth-child(5n+2){width:.94}[skeleton__card] ngx-skeleton-loader:nth-child(5n+3){width:.71}[skeleton__card] ngx-skeleton-loader:nth-child(5n+4){width:.87}[skeleton__card] ngx-skeleton-loader:nth-child(5n+5){width:.82}[mat-button]{min-width:36px;padding:0}.blur{filter:blur(5px);overflow:hidden!important}.powered-by-section cr-powered-by{height:44px;padding-top:1px;border-top:1px solid rgba(0,0,0,.12);margin-top:12px;margin-bottom:-4px}#cr-hint-results-filter-list{position:relative;top:-5px;right:-11px}#cr-hint-results-card{transform:translate(45%)}\n"] }]
        }], ctorParameters: function () { return [{ type: i0.ComponentFactoryResolver }, { type: i1.CopyleaksService }, { type: i2.ReportService }, { type: i3.MatDialog }, { type: i4.LayoutMediaQueryService }, { type: i5.HighlightService }, { type: i6.CopyleaksTranslateService }, { type: i7.DirectionService }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i8.LiveAnnouncer }]; }, propDecorators: { vcr: [{
                type: ViewChild,
                args: ['vcr', { read: ViewContainerRef }]
            }], isActive: [{
                type: HostBinding,
                args: ['class.active']
            }], isMobile: [{
                type: HostBinding,
                args: ['class.mobile']
            }] } });
//# sourceMappingURL=data:application/json;base64,