import { Component, EventEmitter, HostBinding, Input, Output, ViewChild, ViewContainerRef, } from '@angular/core';
import { take } from 'rxjs/operators';
import { untilDestroy } from '../../../shared/operators/untilDestroy';
import { ECRPackageProducts, } from '../../models';
import { CompleteResultNotificationAlertSeverity } from '../../models/api-models/CompleteResult';
import { EReportViewModel } from '../../services/view-mode.service';
import { DEFAULT_TEXT_CONFIG } from '../../utils/constants';
import { truthy } from '../../utils/operators';
import { OptionsDialogComponent } from '../options-dialog/options-dialog.component';
import * as i0 from "@angular/core";
import * as i1 from "../../services/report.service";
import * as i2 from "../../services/view-mode.service";
import * as i3 from "../../services/layout-media-query.service";
import * as i4 from "@angular/material/dialog";
import * as i5 from "../../services/statistics.service";
import * as i6 from "../../services/direction.service";
import * as i7 from "../../services/copyleaks-translate.service";
import * as i8 from "@angular/cdk/a11y";
import * as i9 from "../../../expansion-panel/expansion-panel.component";
import * as i10 from "@angular/material/button";
import * as i11 from "@angular/material/icon";
import * as i12 from "../spinner/spinner.component";
import * as i13 from "@swimlane/ngx-charts";
import * as i14 from "@angular/material/divider";
import * as i15 from "../notifications/notifications.component";
import * as i16 from "ngx-skeleton-loader";
import * as i17 from "@angular/common";
import * as i18 from "@angular/material/tooltip";
import * as i19 from "@angular/flex-layout/flex";
import * as i20 from "@angular/flex-layout/extended";
import * as i21 from "../../../shared/pipes/time-ago.pipe";
import * as i22 from "../../../shared/pipes/short-number.pipe";
import * as i23 from "../../../shared/pipes/similarity.pipe";
import * as i24 from "../../../shared/pipes/array.pipe";
export class PropertiesComponent {
    constructor(componentFactoryResolver, reportService, viewModeService, layoutService, dialogService, statistics, directionService, translationsService, announcer) {
        this.componentFactoryResolver = componentFactoryResolver;
        this.reportService = reportService;
        this.viewModeService = viewModeService;
        this.layoutService = layoutService;
        this.dialogService = dialogService;
        this.statistics = statistics;
        this.directionService = directionService;
        this.translationsService = translationsService;
        this.announcer = announcer;
        this.isPDFDownloading = false;
        this.hideCreationTime = false;
        this.expanded = true;
        this.showUpgradeButton = false;
        this.showAIContentProperty = true;
        this.upgrade = new EventEmitter();
        this.eCRPackageProducts = ECRPackageProducts;
        this.expandChange = new EventEmitter();
        this.progress = null;
        this.previewCount = 0;
        this.hiddenResultsCount = 0;
        this.eNotificationSeverities = CompleteResultNotificationAlertSeverity;
        this.eReportViewMode = EReportViewModel;
        this.customColors = [
            { name: 'Identical', value: '#ff6666' },
            { name: 'Minor changes', value: '#ff9a9a' },
            { name: 'Related meaning', value: '#ffd9b0' },
            { name: 'Original', value: '#f7f7f7' },
        ];
        this.chartData = [];
        this.previewsLoading = false;
        this.messages = DEFAULT_TEXT_CONFIG;
    }
    get btnDownloadTooltip() {
        if (this.isPDFDownloading) {
            return this.translations?.SCAN_PROPERTIES_SECTION?.ACTIONS?.DOWNLOADING || 'Downloading...';
        }
        else {
            return this.translations?.SCAN_PROPERTIES_SECTION?.ACTIONS?.DOWNLOAD || 'Download';
        }
    }
    get isScanning() {
        return (this.progress &&
            (this.progress >= 0 || this.progress < 100) &&
            this.scanSummaryComponent &&
            !this.scanSummeryComponentInstance);
    }
    get done() {
        return this.progress === 100 && (!this.scanSummaryComponent || this.scanSummeryComponentInstance);
    }
    get total() {
        return this.metadata.scannedDocument.totalWords;
    }
    get combined() {
        return this.stats.identical + this.stats.relatedMeaning + this.stats.minorChanges;
    }
    get hasNonAIAlerts() {
        return this.reportService.hasNonAIAlerts();
    }
    get isPlagiarismEnabled() {
        return this.reportService.isPlagiarismEnabled();
    }
    get plagiarismScore() {
        if (this.reportService.isPlagiarismEnabled()) {
            const res = Math.min(1, this.combined / (this.stats.total - this.stats.omittedWords));
            return isNaN(res) ? 0 : res;
        }
        return null;
    }
    get isAiDetectionEnabled() {
        return this.reportService.isAiDetectionEnabled();
    }
    get aiScore() {
        return this.reportService.getAiScore();
    }
    get severity() {
        if (this.plagiarismScore <= 0.1) {
            return 'low';
        }
        if (this.plagiarismScore <= 0.5) {
            return 'medium';
        }
        return 'high';
    }
    get isAlertsView() {
        return this.viewModeService?.reportViewMode$?.value === EReportViewModel.Alerts;
    }
    get isShowingPartialStats() {
        if (!this.options || !this.stats) {
            return false;
        }
        if (!this.options.showIdentical && this.metadata.results.score.identicalWords > 0) {
            return true;
        }
        if (!this.options.showMinorChanges && this.metadata.results.score.minorChangedWords > 0) {
            return true;
        }
        if (!this.options.showRelated && this.metadata.results.score.relatedMeaningWords > 0) {
            return true;
        }
        return false;
    }
    get isAiView() {
        return this.viewModeService?.reportViewMode$?.value === this.eReportViewMode.AIView;
    }
    /**
     * this function will move to scanning result view mode
     */
    showScanningResult() {
        this.viewModeService.changeViewMode$(EReportViewModel.ScanningResult);
    }
    showAiView() {
        this.viewModeService.showAIAlertView(this.metadata);
    }
    /**
     * Help button click handler
     * Passes the click event to `ReportService`
     * @param event native mouse event
     */
    helpClicked(event) {
        this.reportService.helpBtnClicked(event);
    }
    /**
     * Share button click handler
     * Passes the click event to `ReportService`
     * @param event native mouse event
     */
    shareClicked(event) {
        this.reportService.shareBtnClicked(event);
    }
    /**
     * Download button click handler
     * Passes the click event to `ReportService`
     * @param event native mouse event
     */
    downloadClicked(event) {
        this.reportService.downloadBtnClicked(event);
    }
    /** Toggle a comparison */
    toggleComparison(type) {
        const options = { ...this.options };
        options[type] = !options[type];
        this.reportService.configure({ options });
        let announcerMsg = '';
        switch (type) {
            case 'showIdentical':
                announcerMsg = options[type] ? 'Identical results included' : 'Identical results omitted';
                break;
            case 'showMinorChanges':
                announcerMsg = options[type] ? 'Minor Changes results included' : 'Minor Changes results omitted';
                break;
            case 'showRelated':
                announcerMsg = options[type] ? 'Paraphrased results included' : 'Paraphrased results omitted';
                break;
            default:
                break;
        }
        this.announcer.announce(announcerMsg, 'assertive');
    }
    /**
     * check if the results overlay component was passed
     */
    checkAndAddScanSummeryComponent() {
        if (this.scanSummaryComponent) {
            if (!this.scanSummeryComponentInstance) {
                setTimeout(() => {
                    const factory = this.componentFactoryResolver.resolveComponentFactory(this.scanSummaryComponent);
                    if (!this.scanSummeryComponentInstance) {
                        const scanSummeryComponentInstance = this.scanSammeryComponentVcr?.createComponent(factory);
                        if (scanSummeryComponentInstance) {
                            this.scanSummeryComponentInstance = scanSummeryComponentInstance;
                            if (this.metadata) {
                                this.scanSummeryComponentInstance?.instance?.setCompleteResult(this.metadata);
                            }
                        }
                    }
                }, 100);
            }
        }
    }
    /**
     * Life-cycle method
     * subscribe to:
     * - progress changes
     * - scan metadata
     * - share / download visibility
     * - statistics
     * - layout changes
     */
    ngOnInit() {
        this.translations = this.translationsService.translations;
        const { help$, share$, download$, settings$, completeResult$, progress$, previews$, viewMode$, options$, hiddenResults$, filteredPreviews$, totalResults$, } = this.reportService;
        completeResult$.pipe(untilDestroy(this)).subscribe(meta => {
            this.metadata = meta;
            this.scanSummeryComponentInstance?.instance?.setCompleteResult(this.metadata);
            if (meta.filters && meta.filters.resultIds) {
                filteredPreviews$.pipe(untilDestroy(this)).subscribe(previews => {
                    let counter = previews.length;
                    this.previewsLoading = counter !== 0;
                    for (const preview of previews) {
                        const result$ = this.reportService.findResultById$(preview.id);
                        result$.pipe(take(1), untilDestroy(this)).subscribe(() => {
                            --counter;
                            if (counter === 0) {
                                this.previewsLoading = false;
                            }
                        });
                    }
                });
            }
        });
        previews$.pipe(untilDestroy(this)).subscribe(previews => (this.previewCount = previews.length));
        hiddenResults$
            .pipe(untilDestroy(this))
            .subscribe(hiddneResults => (this.hiddenResultsCount = hiddneResults.length));
        help$.pipe(untilDestroy(this)).subscribe(help => (this.help = help));
        share$.pipe(untilDestroy(this)).subscribe(share => (this.share = share));
        download$.pipe(untilDestroy(this)).subscribe(download => (this.download = download));
        settings$.pipe(untilDestroy(this)).subscribe(settings => (this.settings = settings));
        viewMode$.pipe(untilDestroy(this)).subscribe(viewMode => (this.viewMode = viewMode));
        options$.pipe(untilDestroy(this)).subscribe(options => (this.options = options));
        totalResults$.pipe(untilDestroy(this)).subscribe(totalResults => (this.totalResults = totalResults));
        progress$.pipe(untilDestroy(this)).subscribe(value => {
            this.progress = value;
            if (this.progress === 100) {
                setTimeout(() => {
                    this.checkAndAddScanSummeryComponent();
                }, 100);
            }
        });
        this.statistics.statistics$.pipe(untilDestroy(this), truthy()).subscribe(value => {
            this.stats = value;
            const { identical, minorChanges, relatedMeaning, omittedWords, total } = value;
            this.chartData = [
                { name: 'Identical', value: identical },
                { name: 'Minor changes', value: minorChanges },
                { name: 'Related meaning', value: relatedMeaning },
                { name: 'Original', value: total - (identical + minorChanges + relatedMeaning + omittedWords) },
            ];
        });
        this.layoutService.isMobile$.pipe(untilDestroy(this)).subscribe(value => (this.isMobile = value));
        this.viewModeService.reportViewMode$.pipe(untilDestroy(this)).subscribe(viewMode => {
            this.reportViewMode = viewMode;
        });
    }
    /**
     * Displays the settings dialog modal
     */
    openSettingsDialog() {
        this.dialogService.open(OptionsDialogComponent, {
            direction: this.directionService.dir,
            data: this.reportService,
            ariaLabel: 'Choose type of the results that you want to filter out from the report.',
        });
    }
    /**
     * run on properties expand change
     */
    onExpandChange(expanded) {
        if (this.expandChange) {
            this.expandChange.emit(expanded);
        }
    }
    get resultsFound() {
        if (this.previewCount) {
            return this.previewCount;
        }
        return 0;
    }
    get totalViewedResults() {
        if (this.previewCount) {
            return this.totalResults ? this.totalResults : this.previewCount;
        }
        return 0;
    }
    get isShowingOnlyTopResults() {
        return this.options?.showOnlyTopResults;
    }
    /**
     * Show all hidden results
     */
    showAllResults() {
        this.viewModeService.changeViewMode$(EReportViewModel.ScanningResult);
        this.options.showOnlyTopResults = false;
        this.reportService.configure({ options: this.options });
    }
    showAlerts() {
        this.viewModeService.selectedAlert = null;
        this.viewModeService.changeViewMode$(EReportViewModel.Alerts);
    }
    /**
     * Life-cycle method
     * empty for `untilDestroy` rxjs operator
     */
    ngOnDestroy() { }
}
PropertiesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.3", ngImport: i0, type: PropertiesComponent, deps: [{ token: i0.ComponentFactoryResolver }, { token: i1.ReportService }, { token: i2.ViewModeService }, { token: i3.LayoutMediaQueryService }, { token: i4.MatDialog }, { token: i5.StatisticsService }, { token: i6.DirectionService }, { token: i7.CopyleaksTranslateService }, { token: i8.LiveAnnouncer }], target: i0.ɵɵFactoryTarget.Component });
PropertiesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.3", type: PropertiesComponent, selector: "cr-properties", inputs: { scanSummaryComponent: "scanSummaryComponent", isPDFDownloading: "isPDFDownloading", hideCreationTime: "hideCreationTime", expanded: "expanded", showUpgradeButton: "showUpgradeButton", showAIContentProperty: "showAIContentProperty" }, outputs: { upgrade: "upgrade", expandChange: "expandChange" }, host: { properties: { "class.mobile": "this.isMobile" } }, viewQueries: [{ propertyName: "notifications", first: true, predicate: ["notificationsRef"], descendants: true }, { propertyName: "scanSammeryComponentVcr", first: true, predicate: ["scanSummeryComponentVcr"], descendants: true, read: ViewContainerRef }], ngImport: i0, template: "<cr-expansion-panel [expanded]=\"expanded\" (expandChange)=\"onExpandChange($event)\">\n\t<cr-expansion-panel-title>\n\t\t<h3 class=\"expension-panel-title\" aria-hidden=\"true\">\n\t\t\t{{ translations?.SCAN_PROPERTIES_SECTION?.TITLE || 'SCAN PROPERTIES' }}\n\t\t</h3>\n\t</cr-expansion-panel-title>\n\t<cr-expansion-panel-menu>\n\t\t<cr-expansion-panel-menu-item *ngIf=\"help\">\n\t\t\t<button\n\t\t\t\taria-label=\"Click for help.\"\n\t\t\t\ttitle=\"Help\"\n\t\t\t\ttabindex=\"0\"\n\t\t\t\trole=\"button\"\n\t\t\t\tmat-button\n\t\t\t\t[matTooltip]=\"translations?.SCAN_PROPERTIES_SECTION?.ACTIONS?.HELP || 'Help'\"\n\t\t\t\t(click)=\"helpClicked($event)\">\n\t\t\t\t<mat-icon svgIcon=\"help_outline\"></mat-icon>\n\t\t\t</button>\n\t\t</cr-expansion-panel-menu-item>\n\t\t<cr-expansion-panel-menu-item *ngIf=\"share\">\n\t\t\t<button\n\t\t\t\taria-label=\"Click to share report.\"\n\t\t\t\ttitle=\"Share\"\n\t\t\t\ttabindex=\"0\"\n\t\t\t\trole=\"button\"\n\t\t\t\tmat-button\n\t\t\t\t[matTooltip]=\"translations?.SCAN_PROPERTIES_SECTION?.ACTIONS?.SHARE || 'Share'\"\n\t\t\t\t(click)=\"shareClicked($event)\">\n\t\t\t\t<mat-icon svgIcon=\"share\"></mat-icon>\n\t\t\t</button>\n\t\t</cr-expansion-panel-menu-item>\n\t\t<cr-expansion-panel-menu-item *ngIf=\"download\">\n\t\t\t<button\n\t\t\t\taria-label=\"Click to download report.\"\n\t\t\t\trole=\"button\"\n\t\t\t\t[matTooltip]=\"btnDownloadTooltip ? btnDownloadTooltip : 'Download'\"\n\t\t\t\t[title]=\"btnDownloadTooltip\"\n\t\t\t\tmat-button\n\t\t\t\t[disabled]=\"isPDFDownloading\"\n\t\t\t\t(click)=\"downloadClicked($event)\">\n\t\t\t\t<mat-icon svgIcon=\"save_alt\"></mat-icon>\n\t\t\t</button>\n\t\t</cr-expansion-panel-menu-item>\n\t\t<!-- Click to download report. -->\n\t\t<cr-expansion-panel-menu-item>\n\t\t\t<button\n\t\t\t\taria-label=\"Click to open settings.\"\n\t\t\t\tmat-button\n\t\t\t\ttitle=\"Settings\"\n\t\t\t\tid=\"cr-properties-settings-button\"\n\t\t\t\ttabindex=\"0\"\n\t\t\t\trole=\"button\"\n\t\t\t\t[matTooltip]=\"translations?.SCAN_PROPERTIES_SECTION?.ACTIONS?.SETTINGS || 'Settings'\"\n\t\t\t\t(click)=\"openSettingsDialog()\">\n\t\t\t\t<mat-icon svgIcon=\"settings\"></mat-icon>\n\t\t\t</button>\n\t\t</cr-expansion-panel-menu-item>\n\n\t\t<ng-content></ng-content>\n\t</cr-expansion-panel-menu>\n\t<cr-expansion-panel-body fxLayout=\"row nowrap\">\n\t\t<!-- PROGRESS -->\n\t\t<div prop>\n\t\t\t<ng-container>\n\t\t\t\t<!--  -->\n\t\t\t\t<ng-container #scanSummeryComponentVcr></ng-container>\n\t\t\t\t<!--  -->\n\t\t\t\t<ng-container *ngIf=\"!scanSummeryComponentInstance\">\n\t\t\t\t\t<div fxLayout=\"row nowrap\" fxLayoutAlign=\"center center\" fxLayoutGap=\"1em\">\n\t\t\t\t\t\t<div fxLayout=\"row nowrap\" *ngIf=\"!done\" fxLayoutAlign=\"center center\">\n\t\t\t\t\t\t\t<div header>&zwnj;</div>\n\t\t\t\t\t\t\t<cls-spinner width=\"50px\"></cls-spinner>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<div header>\n\t\t\t\t\t\t\t\t<ng-container *ngIf=\"!done && progress !== null && !(scanSummaryComponent && progress == 100)\">\n\t\t\t\t\t\t\t\t\t{{ progress && progress / 100 | percent : '1.0' }}\n\t\t\t\t\t\t\t\t</ng-container>\n\t\t\t\t\t\t\t\t<ng-container *ngIf=\"done\">\n\t\t\t\t\t\t\t\t\t{{ translations?.SCAN_PROPERTIES_SECTION?.SCANNING?.DONE || 'done' }}\n\t\t\t\t\t\t\t\t</ng-container>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<ng-container *ngIf=\"isScanning && !done\">\n\t\t\t\t\t\t\t{{ translations?.SCAN_PROPERTIES_SECTION?.SCANNING?.PROGRESS || 'Scanning' }}...\n\t\t\t\t\t\t</ng-container>\n\t\t\t\t\t\t<ng-container *ngIf=\"!isScanning && !done\">\n\t\t\t\t\t\t\t{{ translations?.SCAN_PROPERTIES_SECTION?.SCANNING?.LOADING || 'Loading' }}...\n\t\t\t\t\t\t</ng-container>\n\t\t\t\t\t\t<ng-container *ngIf=\"done\">\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t*ngIf=\"metadata\"\n\t\t\t\t\t\t\t\t[matTooltip]=\"metadata?.scannedDocument.creationTime | date : 'MMMM d, y, h:mm:ss a'\"\n\t\t\t\t\t\t\t\t[matTooltipDisabled]=\"hideCreationTime\">\n\t\t\t\t\t\t\t\t{{ translations?.SCAN_PROPERTIES_SECTION?.SCANNING?.SCANNED || 'Scanned' }}\n\t\t\t\t\t\t\t\t<ng-container *ngIf=\"!hideCreationTime\">\n\t\t\t\t\t\t\t\t\t{{ metadata?.scannedDocument.creationTime | timeAgo }}\n\t\t\t\t\t\t\t\t</ng-container>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<!--  -->\n\t\t\t\t\t\t</ng-container>\n\t\t\t\t\t</div>\n\t\t\t\t</ng-container>\n\t\t\t</ng-container>\n\t\t</div>\n\n\t\t<ng-container *ngIf=\"isPlagiarismEnabled\">\n\t\t\t<!-- RESULTS FOUND -->\n\t\t\t<div prop [style.cursor]=\"isAlertsView ? 'pointer' : ''\" (click)=\"isAlertsView && showScanningResult()\">\n\t\t\t\t<div id=\"cr-hint-results-found\"></div>\n\t\t\t\t<div header [matTooltip]=\"resultsFound >= 1000 ? (resultsFound | number) + ' results' : null\">\n\t\t\t\t\t<span>{{ resultsFound | shortNumber : 1 }}</span>\n\t\t\t\t\t<ng-container *ngIf=\"resultsFound < totalViewedResults && isShowingOnlyTopResults\">+</ng-container>\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\t[matTooltip]=\"\n\t\t\t\t\t\thiddenResultsCount\n\t\t\t\t\t\t\t? hiddenResultsCount +\n\t\t\t\t\t\t\t  ' ' +\n\t\t\t\t\t\t\t  (translations?.SCAN_PROPERTIES_SECTION?.RESULTS_FOUND_TOOLTIP || 'Results have been filtered')\n\t\t\t\t\t\t\t: null\n\t\t\t\t\t\">\n\t\t\t\t\t{{ translations?.SCAN_PROPERTIES_SECTION?.RESULTS_FOUND || 'results found' }}\n\t\t\t\t\t<span *ngIf=\"hiddenResultsCount\" style=\"color: red\">*</span>\n\t\t\t\t</div>\n\n\t\t\t\t<div\n\t\t\t\t\t*ngIf=\"resultsFound < totalViewedResults && isShowingOnlyTopResults\"\n\t\t\t\t\tclass=\"show-all-result\"\n\t\t\t\t\t(click)=\"showAllResults()\">\n\t\t\t\t\tShow All\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<!-- # COPIED WORDS -->\n\t\t\t<div\n\t\t\t\tprop\n\t\t\t\t*ngIf=\"stats && !previewsLoading; else skeleton__prop\"\n\t\t\t\t[matTooltip]=\"\n\t\t\t\t\ttotal + ' ' + (translations?.SCAN_PROPERTIES_SECTION?.SIMILAR_WORDS_TOOPTIP || 'submitted words')\n\t\t\t\t\">\n\t\t\t\t<div header>\n\t\t\t\t\t{{ combined | shortNumber : 1 }}\n\t\t\t\t</div>\n\t\t\t\t<div>{{ translations?.SCAN_PROPERTIES_SECTION?.SIMILAR_WORDS || 'similar words' }}</div>\n\t\t\t</div>\n\n\t\t\t<!-- STATS -->\n\t\t\t<div stats [fxFlexOrder.lt-md]=\"-5\" fxLayout=\"row nowrap\" fxLayoutAlign=\"stretch stretch\">\n\t\t\t\t<ng-container *ngIf=\"stats && !previewsLoading; else skeleton__stats\">\n\t\t\t\t\t<ngx-charts-pie-chart\n\t\t\t\t\t\trole=\"presentation\"\n\t\t\t\t\t\tfxHide.lt-md\n\t\t\t\t\t\t[customColors]=\"customColors\"\n\t\t\t\t\t\t[results]=\"chartData\"\n\t\t\t\t\t\t[view]=\"[150, 150]\">\n\t\t\t\t\t\t<ng-template #tooltipTemplate let-model=\"model\">\n\t\t\t\t\t\t\t<div style=\"padding: 0.5em\" class=\"mat-typography\">\n\t\t\t\t\t\t\t\t<span style=\"font-size: 1em; display: block\">{{ model.value | number }}</span>\n\t\t\t\t\t\t\t\t<span tooltip-text>\n\t\t\t\t\t\t\t\t\t<ng-container [ngSwitch]=\"model.name\">\n\t\t\t\t\t\t\t\t\t\t<ng-container *ngSwitchCase=\"'Identical'\">\n\t\t\t\t\t\t\t\t\t\t\t{{ translations?.SHARED?.MATCH_TYPES?.IDENTICAL || model.name }}\n\t\t\t\t\t\t\t\t\t\t</ng-container>\n\t\t\t\t\t\t\t\t\t\t<ng-container *ngSwitchCase=\"'Minor changes'\">\n\t\t\t\t\t\t\t\t\t\t\t{{ translations?.SHARED?.MATCH_TYPES?.MINOR_CHANGES || model.name }}\n\t\t\t\t\t\t\t\t\t\t</ng-container>\n\t\t\t\t\t\t\t\t\t\t<ng-container *ngSwitchCase=\"'Related meaning'\">\n\t\t\t\t\t\t\t\t\t\t\t{{ translations?.SHARED?.MATCH_TYPES?.RELATED_MEANING || 'Paraphrased' }}\n\t\t\t\t\t\t\t\t\t\t</ng-container>\n\t\t\t\t\t\t\t\t\t\t<ng-container *ngSwitchCase=\"'Original'\">\n\t\t\t\t\t\t\t\t\t\t\t{{ translations?.SHARED?.MATCH_TYPES?.ORIGINAL || model.name }}\n\t\t\t\t\t\t\t\t\t\t</ng-container>\n\t\t\t\t\t\t\t\t\t\t<ng-container *ngSwitchDefault>\n\t\t\t\t\t\t\t\t\t\t\t{{ model.name }}\n\t\t\t\t\t\t\t\t\t\t</ng-container>\n\t\t\t\t\t\t\t\t\t</ng-container>\n\t\t\t\t\t\t\t\t\t{{ translations?.SHARED?.WORDS || 'words' }}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</ng-template>\n\t\t\t\t\t</ngx-charts-pie-chart>\n\n\t\t\t\t\t<div legend fxLayout=\"column\" fxFlex fxLayoutAlign=\"space-evenly stretch\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tmat-button\n\t\t\t\t\t\t\trow\n\t\t\t\t\t\t\tclass=\"cr-hint-button\"\n\t\t\t\t\t\t\tid=\"cr-hint-identical\"\n\t\t\t\t\t\t\t[attr.aria-label]=\"'Identical results' + (stats?.identical / stats?.total | similarity : '1.0-1')\"\n\t\t\t\t\t\t\t(click)=\"toggleComparison('showIdentical')\"\n\t\t\t\t\t\t\t[matTooltip]=\"\n\t\t\t\t\t\t\t\toptions?.showIdentical\n\t\t\t\t\t\t\t\t\t? translations?.SHARED?.MATCH_TYPES?.IDENTICAL_TOOLTIP || messages.IDENTICAL_TOOLTIP_TEXT\n\t\t\t\t\t\t\t\t\t: translations?.SHARED?.MATCH_TYPES?.OMITTED_MATCH_TOOLTIP_TEXT ||\n\t\t\t\t\t\t\t\t\t  messages.MATCH_TYPE_OMITTED_TOOLTIP_TEXT\n\t\t\t\t\t\t\t\"\n\t\t\t\t\t\t\tdisableRipple>\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclass=\"dot identical\"\n\t\t\t\t\t\t\t\t[ngStyle]=\"{ visibility: options?.showIdentical ? 'visible' : 'hidden' }\"></div>\n\t\t\t\t\t\t\t<div text [ngClass]=\"{ 'cr-strike-out': !options?.showIdentical }\">\n\t\t\t\t\t\t\t\t{{ translations?.SHARED?.MATCH_TYPES?.IDENTICAL || 'Identical' }}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<span fxFlex></span>\n\n\t\t\t\t\t\t\t<div *ngIf=\"options.showIdentical || stats.identical > 0\">\n\t\t\t\t\t\t\t\t{{ stats?.identical / stats?.total | similarity : '1.0-1' }}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<mat-divider></mat-divider>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tmat-button\n\t\t\t\t\t\t\trow\n\t\t\t\t\t\t\tclass=\"cr-hint-button\"\n\t\t\t\t\t\t\t[attr.aria-label]=\"'Minor Changes results' + (stats?.minorChanges / stats?.total | similarity : '1.0-1')\"\n\t\t\t\t\t\t\t(click)=\"toggleComparison('showMinorChanges')\"\n\t\t\t\t\t\t\t[matTooltip]=\"\n\t\t\t\t\t\t\t\toptions?.showMinorChanges\n\t\t\t\t\t\t\t\t\t? translations?.SHARED?.MATCH_TYPES?.MINOR_CHANGES_TOOLTIP || messages.MINOR_CHANGES_TOOLTIP_TEXT\n\t\t\t\t\t\t\t\t\t: translations?.SHARED?.MATCH_TYPES?.OMITTED_MATCH_TOOLTIP_TEXT ||\n\t\t\t\t\t\t\t\t\t  messages.MATCH_TYPE_OMITTED_TOOLTIP_TEXT\n\t\t\t\t\t\t\t\"\n\t\t\t\t\t\t\tdisableRipple>\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclass=\"dot minor-changes\"\n\t\t\t\t\t\t\t\t[ngStyle]=\"{ visibility: options?.showMinorChanges ? 'visible' : 'hidden' }\"></div>\n\t\t\t\t\t\t\t<div text [ngClass]=\"{ 'cr-strike-out': options?.showMinorChanges !== true }\">\n\t\t\t\t\t\t\t\t{{ translations?.SHARED?.MATCH_TYPES?.MINOR_CHANGES || 'Minor Changes' }}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<span fxFlex></span>\n\t\t\t\t\t\t\t<div *ngIf=\"options.showMinorChanges || stats.minorChanges > 0\">\n\t\t\t\t\t\t\t\t{{ stats?.minorChanges / stats?.total | percent : '1.0-1' }}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<mat-divider></mat-divider>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tmat-button\n\t\t\t\t\t\t\trow\n\t\t\t\t\t\t\tclass=\"cr-hint-button\"\n\t\t\t\t\t\t\t[attr.aria-label]=\"'Paraphrased results' + (stats?.relatedMeaning / stats?.total | similarity : '1.0-1')\"\n\t\t\t\t\t\t\t(click)=\"toggleComparison('showRelated')\"\n\t\t\t\t\t\t\t[matTooltip]=\"\n\t\t\t\t\t\t\t\toptions?.showRelated\n\t\t\t\t\t\t\t\t\t? translations?.SHARED?.MATCH_TYPES?.RELATED_MEANING_TOOLTIP || messages.RELATED_MEANING_TOOLTIP_TEXT\n\t\t\t\t\t\t\t\t\t: translations?.SHARED?.MATCH_TYPES?.OMITTED_MATCH_TOOLTIP_TEXT ||\n\t\t\t\t\t\t\t\t\t  messages.MATCH_TYPE_OMITTED_TOOLTIP_TEXT\n\t\t\t\t\t\t\t\"\n\t\t\t\t\t\t\tdisableRipple>\n\t\t\t\t\t\t\t<div class=\"dot related\" [ngStyle]=\"{ visibility: options?.showRelated ? 'visible' : 'hidden' }\"></div>\n\t\t\t\t\t\t\t<div text [ngClass]=\"{ 'cr-strike-out': options?.showRelated !== true }\">\n\t\t\t\t\t\t\t\t{{ translations?.SHARED?.MATCH_TYPES?.RELATED_MEANING || 'Paraphrased' }}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<span fxFlex></span>\n\t\t\t\t\t\t\t<div *ngIf=\"options.showRelated || stats.relatedMeaning > 0\">\n\t\t\t\t\t\t\t\t{{ stats?.relatedMeaning / stats?.total | percent : '1.0-1' }}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</button>\n\n\t\t\t\t\t\t<mat-divider></mat-divider>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t[matTooltip]=\"\n\t\t\t\t\t\t\t\ttranslations?.SHARED?.MATCH_TYPES?.OMITTED_WORDS_TOOLTIP || messages.OMITTED_WORDS_TOOLTIP_TEXT\n\t\t\t\t\t\t\t\"\n\t\t\t\t\t\t\trow\n\t\t\t\t\t\t\tfxLayout=\"row\"\n\t\t\t\t\t\t\tfxLayoutAlign=\"start center\"\n\t\t\t\t\t\t\tfxLayoutGap=\"0.5em\">\n\t\t\t\t\t\t\t<div class=\"dot omitted\"></div>\n\t\t\t\t\t\t\t<div text>\n\t\t\t\t\t\t\t\t{{ translations?.SHARED?.MATCH_TYPES?.OMITTED_WORDS || 'Omitted Words' }}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<span fxFlex></span>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t{{ stats && metadata.scannedDocument.totalExcluded / stats?.total | percent : '1.0-1' }}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<ng-template #statsSpinner>\n\t\t\t\t\t\t<cls-spinner title=\"Spinner\" *ngIf=\"!stats\" width=\"16px\" style=\"display: inline-block\"></cls-spinner>\n\t\t\t\t\t</ng-template>\n\t\t\t\t</ng-container>\n\t\t\t</div>\n\t\t</ng-container>\n\n\t\t<!-- % PLAGIARISM -->\n\t\t<div\n\t\t\tprop\n\t\t\tid=\"cr-hint-results-score\"\n\t\t\t*ngIf=\"stats && !previewsLoading; else skeleton__prop\"\n\t\t\t[ngClass]=\"{\n\t\t\t\tdisabled_score: plagiarismScore == null,\n\t\t\t\tlow: plagiarismScore != null && plagiarismScore <= 0.1,\n\t\t\t\tmedium: plagiarismScore > 0.1 && plagiarismScore <= 0.5,\n\t\t\t\thigh: plagiarismScore > 0.5\n\t\t\t}\">\n\t\t\t<div header>\n\t\t\t\t<ng-container *ngIf=\"plagiarismScore != null\">{{ plagiarismScore | percent : '1.0-1' }}</ng-container>\n\t\t\t\t<ng-container *ngIf=\"plagiarismScore == null\">N/A</ng-container>\n\t\t\t</div>\n\t\t\t<div [matTooltip]=\"isShowingPartialStats ? 'Some matches are ommited according to your settings' : null\">\n\t\t\t\t<span>\n\t\t\t\t\t{{ translations?.SCAN_PROPERTIES_SECTION?.PLAGIARISM || 'matches' }}{{ isShowingPartialStats ? '*' : '' }}\n\t\t\t\t</span>\n\t\t\t</div>\n\n\t\t\t<ng-container *ngIf=\"isPlagiarismEnabled && hasNonAIAlerts && !isAiView\">\n\t\t\t\t<cr-notifications #notificationsRef></cr-notifications>\n\t\t\t</ng-container>\n\t\t\t<!-- View -->\n\t\t\t<section class=\"score-group-buttons\">\n\t\t\t\t<button\n\t\t\t\t\tmatTooltip=\"SEE ALERTS\"\n\t\t\t\t\t*ngIf=\"isPlagiarismEnabled && isAiDetectionEnabled && hasNonAIAlerts && isAiView\"\n\t\t\t\t\tclass=\"side-icon-button\"\n\t\t\t\t\tmat-icon-button\n\t\t\t\t\t(click)=\"showAlerts()\"\n\t\t\t\t\t[ngClass]=\"{\n\t\t\t\t\t\t'btn-notifications-error':\n\t\t\t\t\t\t\tnotificationSeverity == eNotificationSeverities.High ||\n\t\t\t\t\t\t\tnotificationSeverity == eNotificationSeverities.VeryHigh,\n\t\t\t\t\t\t'btn-notifications-warning': notificationSeverity == eNotificationSeverities.Medium\n\t\t\t\t\t}\">\n\t\t\t\t\t<ng-container [ngSwitch]=\"notificationSeverity\">\n\t\t\t\t\t\t<mat-icon *ngSwitchCase=\"eNotificationSeverities.Medium\">warning</mat-icon>\n\t\t\t\t\t\t<mat-icon *ngSwitchCase=\"eNotificationSeverities.High\">error</mat-icon>\n\t\t\t\t\t\t<mat-icon *ngSwitchCase=\"eNotificationSeverities.VeryHigh\">error</mat-icon>\n\t\t\t\t\t\t<mat-icon *ngSwitchDefault>info</mat-icon>\n\t\t\t\t\t</ng-container>\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\t*ngIf=\"isPlagiarismEnabled && isAiDetectionEnabled && isAiView\"\n\t\t\t\t\tclass=\"btn-view\"\n\t\t\t\t\tmat-stroked-button\n\t\t\t\t\tcolor=\"basic\"\n\t\t\t\t\t(click)=\"showScanningResult()\">\n\t\t\t\t\t<mat-icon class=\"mat-18\">visibility</mat-icon>\n\t\t\t\t\tView\n\t\t\t\t</button>\n\t\t\t</section>\n\t\t\t<!-- Viewing -->\n\t\t\t<button\n\t\t\t\t*ngIf=\"isPlagiarismEnabled && isAiDetectionEnabled && !hasNonAIAlerts && !isAiView\"\n\t\t\t\tclass=\"btn-viewing\"\n\t\t\t\tmat-stroked-button\n\t\t\t\tcolor=\"basic\"\n\t\t\t\tdisabled>\n\t\t\t\tViewing\n\t\t\t</button>\n\t\t\t<!-- Upgrade -->\n\t\t\t<button\n\t\t\t\t*ngIf=\"!isPlagiarismEnabled && showUpgradeButton\"\n\t\t\t\t(click)=\"upgrade.emit(eCRPackageProducts.plagiairsm)\"\n\t\t\t\tclass=\"btn-upgrade\"\n\t\t\t\tmat-stroked-button\n\t\t\t\tcolor=\"basic\">\n\t\t\t\t<svg width=\"25\" height=\"24\" viewBox=\"0 0 25 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t<path\n\t\t\t\t\t\tfill-rule=\"evenodd\"\n\t\t\t\t\t\tclip-rule=\"evenodd\"\n\t\t\t\t\t\td=\"M13.1531 7.6355C13.666 7.27341 14.001 6.67607 14.001 6.00049C14.001 4.89592 13.1055 4.00049 12.001 4.00049C10.8964 4.00049 10.001 4.89592 10.001 6.00049C10.001 6.69982 10.3599 7.31531 10.9036 7.67281C9.84466 9.34691 8.40096 11.8147 8.40096 12.8253C7.83778 11.4693 6.28214 10.5836 4.9844 10.0586C5.17624 9.75158 5.28711 9.3888 5.28711 9.00012C5.28711 7.89555 4.39168 7.00012 3.28711 7.00012C2.18254 7.00012 1.28711 7.89555 1.28711 9.00012C1.28711 10.1047 2.18254 11.0001 3.28711 11.0001C3.31361 11.0001 3.34 10.9996 3.36625 10.9986L5.00096 17.9995H19.001L20.6428 10.968C20.759 10.989 20.8787 11 21.001 11C22.1055 11 23.001 10.1046 23.001 9C23.001 7.89543 22.1055 7 21.001 7C19.8964 7 19.001 7.89543 19.001 9C19.001 9.35977 19.096 9.69736 19.2622 9.98904C17.9757 10.5038 16.3376 11.4075 15.6817 12.8253C15.6817 11.6225 14.2328 9.24225 13.1531 7.6355ZM5.07272 19.9995C5.0252 19.6702 5.00096 19.3361 5.00096 18.9995H12.001H19.001C19.001 19.3361 18.9767 19.6702 18.9292 19.9995H5.07272Z\"\n\t\t\t\t\t\tfill=\"#3F9AF5\" />\n\t\t\t\t</svg>\n\t\t\t\tUpgrade\n\t\t\t</button>\n\t\t</div>\n\n\t\t<!-- % AI -->\n\t\t<ng-container *ngIf=\"showAIContentProperty\">\n\t\t\t<div\n\t\t\t\tprop\n\t\t\t\tid=\"cr-hint-results-score\"\n\t\t\t\t*ngIf=\"stats && !previewsLoading; else skeleton__prop\"\n\t\t\t\t[ngClass]=\"{\n\t\t\t\t\tdisabled_score: aiScore == null,\n\t\t\t\t\tlow: aiScore != null && aiScore <= 0.1,\n\t\t\t\t\tmedium: aiScore > 0.1 && aiScore <= 0.5,\n\t\t\t\t\thigh: aiScore > 0.5\n\t\t\t\t}\">\n\t\t\t\t<div header>\n\t\t\t\t\t<ng-container *ngIf=\"aiScore != null\">{{ aiScore | percent : '1.0-1' }}</ng-container>\n\t\t\t\t\t<ng-container *ngIf=\"aiScore == null\">N/A</ng-container>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t{{ translations?.SCAN_PROPERTIES_SECTION?.AiContent || 'ai content' }}\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t\t<!-- View -->\n\t\t\t\t<button\n\t\t\t\t\t*ngIf=\"isPlagiarismEnabled && isAiDetectionEnabled && !isAiView\"\n\t\t\t\t\tclass=\"btn-view\"\n\t\t\t\t\tmat-stroked-button\n\t\t\t\t\tcolor=\"basic\"\n\t\t\t\t\t(click)=\"showAiView()\">\n\t\t\t\t\t<mat-icon class=\"mat-18\">visibility</mat-icon>\n\t\t\t\t\tView\n\t\t\t\t</button>\n\t\t\t\t<!-- Viewing -->\n\t\t\t\t<button\n\t\t\t\t\t*ngIf=\"isPlagiarismEnabled && isAiDetectionEnabled && isAiView\"\n\t\t\t\t\tclass=\"btn-viewing\"\n\t\t\t\t\tmat-stroked-button\n\t\t\t\t\tcolor=\"basic\"\n\t\t\t\t\tdisabled>\n\t\t\t\t\tViewing\n\t\t\t\t</button>\n\t\t\t\t<!-- Upgrade -->\n\t\t\t\t<button\n\t\t\t\t\t*ngIf=\"!isAiDetectionEnabled && showUpgradeButton\"\n\t\t\t\t\t(click)=\"upgrade.emit(eCRPackageProducts.ai)\"\n\t\t\t\t\tclass=\"btn-upgrade\"\n\t\t\t\t\tmat-stroked-button\n\t\t\t\t\tcolor=\"basic\">\n\t\t\t\t\t<svg width=\"25\" height=\"24\" viewBox=\"0 0 25 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tfill-rule=\"evenodd\"\n\t\t\t\t\t\t\tclip-rule=\"evenodd\"\n\t\t\t\t\t\t\td=\"M13.1531 7.6355C13.666 7.27341 14.001 6.67607 14.001 6.00049C14.001 4.89592 13.1055 4.00049 12.001 4.00049C10.8964 4.00049 10.001 4.89592 10.001 6.00049C10.001 6.69982 10.3599 7.31531 10.9036 7.67281C9.84466 9.34691 8.40096 11.8147 8.40096 12.8253C7.83778 11.4693 6.28214 10.5836 4.9844 10.0586C5.17624 9.75158 5.28711 9.3888 5.28711 9.00012C5.28711 7.89555 4.39168 7.00012 3.28711 7.00012C2.18254 7.00012 1.28711 7.89555 1.28711 9.00012C1.28711 10.1047 2.18254 11.0001 3.28711 11.0001C3.31361 11.0001 3.34 10.9996 3.36625 10.9986L5.00096 17.9995H19.001L20.6428 10.968C20.759 10.989 20.8787 11 21.001 11C22.1055 11 23.001 10.1046 23.001 9C23.001 7.89543 22.1055 7 21.001 7C19.8964 7 19.001 7.89543 19.001 9C19.001 9.35977 19.096 9.69736 19.2622 9.98904C17.9757 10.5038 16.3376 11.4075 15.6817 12.8253C15.6817 11.6225 14.2328 9.24225 13.1531 7.6355ZM5.07272 19.9995C5.0252 19.6702 5.00096 19.3361 5.00096 18.9995H12.001H19.001C19.001 19.3361 18.9767 19.6702 18.9292 19.9995H5.07272Z\"\n\t\t\t\t\t\t\tfill=\"#3F9AF5\" />\n\t\t\t\t\t</svg>\n\t\t\t\t\tUpgrade\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</ng-container>\n\t</cr-expansion-panel-body>\n</cr-expansion-panel>\n\n<ng-template #skeleton__prop>\n\t<div prop>\n\t\t<ngx-skeleton-loader [theme]=\"{ height: '3em', width: '95px', margin: '0.5em' }\"></ngx-skeleton-loader>\n\t\t<ngx-skeleton-loader [theme]=\"{ height: '1em', width: '3em' }\"></ngx-skeleton-loader>\n\t</div>\n</ng-template>\n\n<ng-template #skeleton__stats>\n\t<div fxLayout=\"column\">\n\t\t<ngx-skeleton-loader\n\t\t\t[theme]=\"{ width: '118px', height: '113px', margin: '1em' }\"\n\t\t\tappearance=\"circle\"></ngx-skeleton-loader>\n\t</div>\n\n\t<div fxLayout=\"column\" fxFlex fxLayoutAlign=\"space-evenly stretch\">\n\t\t<ng-container *ngFor=\"let x of 4 | array; let last = last\">\n\t\t\t<div fxLayout=\"row\" fxLayoutGap=\"1em\" style=\"padding: 0em 0.5em\" fxLayoutAlign=\"center center\">\n\t\t\t\t<ngx-skeleton-loader\n\t\t\t\t\tappearance=\"circle\"\n\t\t\t\t\t[theme]=\"{ width: '1.75em', height: '1.75em', margin: '0px' }\"></ngx-skeleton-loader>\n\t\t\t\t<ngx-skeleton-loader [theme]=\"{ margin: '0', width: '5em' }\"></ngx-skeleton-loader>\n\t\t\t\t<span fxFlex></span>\n\t\t\t\t<ngx-skeleton-loader [theme]=\"{ margin: '0', width: '3em' }\"></ngx-skeleton-loader>\n\t\t\t</div>\n\t\t\t<mat-divider *ngIf=\"!last\"></mat-divider>\n\t\t</ng-container>\n\t</div>\n</ng-template>\n", styles: [".sat-tooltip{color:#fff;border-radius:4px;margin:14px;max-width:250px;padding:.5em;overflow:hidden;text-overflow:ellipsis;background:rgba(0,0,0,.8)}.identical{background-color:#ff796e}.minor-changes{background-color:#ff9a9a}.related{background-color:#ffd9b0}.omitted{background-color:#fff}.text-identical{color:#ff796e}.text-minor-changes{color:#ff9a9a}.text-related{color:#ffd9b0}.dot{border:1px solid #171717;width:1.5em;min-width:1.5em;min-height:1.5em;height:1.5em;border-radius:50%}@media screen and (max-width: 959px){.dot{width:1em;min-width:1em;min-height:1em;height:1em}}.copyleaks-report-dialog .mat-dialog-container{padding:0}.cdk-keyboard-focused{outline:2px solid black!important}:host{box-sizing:border-box;width:100%;background-color:#fff}cr-expansion-panel-title h3{margin:0;font-size:14px;font-weight:500}cr-expansion-panel{margin:1em 1em 0;background-color:#fff}cr-expansion-panel-menu-item [mat-button]{border-radius:0;min-width:36px;padding:0}cr-expansion-panel-body{overflow-x:auto}cr-expansion-panel-body>div:not(:last-child){border-right:1px solid #e6e6e6}cr-expansion-panel-body [progress]{display:flex;flex-direction:column;justify-content:center;padding:1em;align-items:center;flex:1}cr-expansion-panel-body [progress] mat-icon{color:#6ac259}cr-expansion-panel-body .disabled_score{color:#212121}cr-expansion-panel-body .disabled_score [header]{color:#8590a2;font-weight:500;margin-bottom:0;font-size:32px!important}cr-expansion-panel-body .low{color:#29c44d}cr-expansion-panel-body .medium{color:#906d16}cr-expansion-panel-body .high{color:#ec4f3a}cr-expansion-panel-body [stats]{flex:3;max-width:475px;min-width:375px}@media screen and (max-width: 959px){cr-expansion-panel-body [stats]{max-width:300px;min-width:unset}}cr-expansion-panel-body [stats] [legend] [row]{padding:0 .5em;flex:1}cr-expansion-panel-body [stats] [legend] [row]:not(:last-child){cursor:pointer}cr-expansion-panel-body [stats] [legend] [row] [text]{white-space:nowrap}cr-expansion-panel-body [stats] [legend] [row] .cr-strike-out{text-decoration:line-through}cr-expansion-panel-body [prop]{padding:1em;display:flex;flex:1;flex-flow:column nowrap;justify-content:center;align-items:center;text-transform:uppercase;font-weight:700;white-space:nowrap}cr-expansion-panel-body [prop] [header]{line-height:1em;font-size:2.6em}@media screen and (max-width: 959px){cr-expansion-panel-body [prop] [header]{font-size:2em}}#cr-hint-results-score span{font-size:19px}#cr-hint-results-found{position:relative;top:-30px}.show-all-result{color:#17a1ff;font-size:11px}.show-all-result:hover{text-decoration:underline;cursor:pointer}.score-group-buttons{display:flex;justify-content:center;align-items:center}.btn-view,.btn-viewing{position:relative;color:#52616b;border-color:#52616b;font-weight:700;font-size:14px;text-transform:uppercase;line-height:29px;margin:10px 5px;padding-bottom:2px}.btn-view mat-icon,.btn-viewing mat-icon{font-size:18px;height:18px;width:18px;line-height:18px;margin-right:4px}.btn-view:hover{color:#3f9af5;border-color:#3f9af5}.btn-viewing{background:#8590a2;color:#fff!important;border-color:#8590a2!important}.btn-upgrade{margin-top:10px;color:#3f9af5;border-color:#3f9af5;font-weight:700;line-height:2.2;padding:0 8px 0 7px}.btn-upgrade svg{margin-top:-5px}.cr-hint-button{border-radius:unset;font-weight:400;line-height:normal}.cr-hint-button ::ng-deep .mat-button-wrapper{display:flex;place-content:center flex-start;align-items:center;gap:.5em}\n"], components: [{ type: i9.ExpansionPanelComponent, selector: "cr-expansion-panel", inputs: ["expanded", "disabled"], outputs: ["expandChange"] }, { type: i9.ExpansionPanelTitleComponent, selector: "cr-expansion-panel-title" }, { type: i9.ExpansionPanelMenuComponent, selector: "cr-expansion-panel-menu" }, { type: i9.ExpansionPanelMenuItemComponent, selector: "cr-expansion-panel-menu-item" }, { type: i10.MatButton, selector: "button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]", inputs: ["disabled", "disableRipple", "color"], exportAs: ["matButton"] }, { type: i11.MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }, { type: i9.ExpansionPanelBodyComponent, selector: "cr-expansion-panel-body" }, { type: i12.SpinnerComponent, selector: "cls-spinner", inputs: ["width", "color"] }, { type: i13.PieChartComponent, selector: "ngx-charts-pie-chart", inputs: ["labels", "legend", "legendTitle", "legendPosition", "explodeSlices", "doughnut", "arcWidth", "activeEntries", "tooltipDisabled", "trimLabels", "maxLabelLength", "margins", "gradient", "labelFormatting", "tooltipText"], outputs: ["dblclick", "select", "activate", "deactivate"] }, { type: i14.MatDivider, selector: "mat-divider", inputs: ["vertical", "inset"] }, { type: i15.NotificationsComponent, selector: "cr-notifications", outputs: ["severityChange"] }, { type: i16.NgxSkeletonLoaderComponent, selector: "ngx-skeleton-loader", inputs: ["count", "appearance", "theme"] }], directives: [{ type: i17.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i18.MatTooltip, selector: "[matTooltip]", exportAs: ["matTooltip"] }, { type: i19.DefaultLayoutDirective, selector: "  [fxLayout], [fxLayout.xs], [fxLayout.sm], [fxLayout.md],  [fxLayout.lg], [fxLayout.xl], [fxLayout.lt-sm], [fxLayout.lt-md],  [fxLayout.lt-lg], [fxLayout.lt-xl], [fxLayout.gt-xs], [fxLayout.gt-sm],  [fxLayout.gt-md], [fxLayout.gt-lg]", inputs: ["fxLayout", "fxLayout.xs", "fxLayout.sm", "fxLayout.md", "fxLayout.lg", "fxLayout.xl", "fxLayout.lt-sm", "fxLayout.lt-md", "fxLayout.lt-lg", "fxLayout.lt-xl", "fxLayout.gt-xs", "fxLayout.gt-sm", "fxLayout.gt-md", "fxLayout.gt-lg"] }, { type: i19.DefaultLayoutAlignDirective, selector: "  [fxLayoutAlign], [fxLayoutAlign.xs], [fxLayoutAlign.sm], [fxLayoutAlign.md],  [fxLayoutAlign.lg], [fxLayoutAlign.xl], [fxLayoutAlign.lt-sm], [fxLayoutAlign.lt-md],  [fxLayoutAlign.lt-lg], [fxLayoutAlign.lt-xl], [fxLayoutAlign.gt-xs], [fxLayoutAlign.gt-sm],  [fxLayoutAlign.gt-md], [fxLayoutAlign.gt-lg]", inputs: ["fxLayoutAlign", "fxLayoutAlign.xs", "fxLayoutAlign.sm", "fxLayoutAlign.md", "fxLayoutAlign.lg", "fxLayoutAlign.xl", "fxLayoutAlign.lt-sm", "fxLayoutAlign.lt-md", "fxLayoutAlign.lt-lg", "fxLayoutAlign.lt-xl", "fxLayoutAlign.gt-xs", "fxLayoutAlign.gt-sm", "fxLayoutAlign.gt-md", "fxLayoutAlign.gt-lg"] }, { type: i19.DefaultLayoutGapDirective, selector: "  [fxLayoutGap], [fxLayoutGap.xs], [fxLayoutGap.sm], [fxLayoutGap.md],  [fxLayoutGap.lg], [fxLayoutGap.xl], [fxLayoutGap.lt-sm], [fxLayoutGap.lt-md],  [fxLayoutGap.lt-lg], [fxLayoutGap.lt-xl], [fxLayoutGap.gt-xs], [fxLayoutGap.gt-sm],  [fxLayoutGap.gt-md], [fxLayoutGap.gt-lg]", inputs: ["fxLayoutGap", "fxLayoutGap.xs", "fxLayoutGap.sm", "fxLayoutGap.md", "fxLayoutGap.lg", "fxLayoutGap.xl", "fxLayoutGap.lt-sm", "fxLayoutGap.lt-md", "fxLayoutGap.lt-lg", "fxLayoutGap.lt-xl", "fxLayoutGap.gt-xs", "fxLayoutGap.gt-sm", "fxLayoutGap.gt-md", "fxLayoutGap.gt-lg"] }, { type: i19.DefaultFlexOrderDirective, selector: "  [fxFlexOrder], [fxFlexOrder.xs], [fxFlexOrder.sm], [fxFlexOrder.md],  [fxFlexOrder.lg], [fxFlexOrder.xl], [fxFlexOrder.lt-sm], [fxFlexOrder.lt-md],  [fxFlexOrder.lt-lg], [fxFlexOrder.lt-xl], [fxFlexOrder.gt-xs], [fxFlexOrder.gt-sm],  [fxFlexOrder.gt-md], [fxFlexOrder.gt-lg]", inputs: ["fxFlexOrder", "fxFlexOrder.xs", "fxFlexOrder.sm", "fxFlexOrder.md", "fxFlexOrder.lg", "fxFlexOrder.xl", "fxFlexOrder.lt-sm", "fxFlexOrder.lt-md", "fxFlexOrder.lt-lg", "fxFlexOrder.lt-xl", "fxFlexOrder.gt-xs", "fxFlexOrder.gt-sm", "fxFlexOrder.gt-md", "fxFlexOrder.gt-lg"] }, { type: i20.DefaultShowHideDirective, selector: "  [fxShow], [fxShow.print],  [fxShow.xs], [fxShow.sm], [fxShow.md], [fxShow.lg], [fxShow.xl],  [fxShow.lt-sm], [fxShow.lt-md], [fxShow.lt-lg], [fxShow.lt-xl],  [fxShow.gt-xs], [fxShow.gt-sm], [fxShow.gt-md], [fxShow.gt-lg],  [fxHide], [fxHide.print],  [fxHide.xs], [fxHide.sm], [fxHide.md], [fxHide.lg], [fxHide.xl],  [fxHide.lt-sm], [fxHide.lt-md], [fxHide.lt-lg], [fxHide.lt-xl],  [fxHide.gt-xs], [fxHide.gt-sm], [fxHide.gt-md], [fxHide.gt-lg]", inputs: ["fxShow", "fxShow.print", "fxShow.xs", "fxShow.sm", "fxShow.md", "fxShow.lg", "fxShow.xl", "fxShow.lt-sm", "fxShow.lt-md", "fxShow.lt-lg", "fxShow.lt-xl", "fxShow.gt-xs", "fxShow.gt-sm", "fxShow.gt-md", "fxShow.gt-lg", "fxHide", "fxHide.print", "fxHide.xs", "fxHide.sm", "fxHide.md", "fxHide.lg", "fxHide.xl", "fxHide.lt-sm", "fxHide.lt-md", "fxHide.lt-lg", "fxHide.lt-xl", "fxHide.gt-xs", "fxHide.gt-sm", "fxHide.gt-md", "fxHide.gt-lg"] }, { type: i17.NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { type: i17.NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { type: i17.NgSwitchDefault, selector: "[ngSwitchDefault]" }, { type: i19.DefaultFlexDirective, selector: "  [fxFlex], [fxFlex.xs], [fxFlex.sm], [fxFlex.md],  [fxFlex.lg], [fxFlex.xl], [fxFlex.lt-sm], [fxFlex.lt-md],  [fxFlex.lt-lg], [fxFlex.lt-xl], [fxFlex.gt-xs], [fxFlex.gt-sm],  [fxFlex.gt-md], [fxFlex.gt-lg]", inputs: ["fxFlex", "fxFlex.xs", "fxFlex.sm", "fxFlex.md", "fxFlex.lg", "fxFlex.xl", "fxFlex.lt-sm", "fxFlex.lt-md", "fxFlex.lt-lg", "fxFlex.lt-xl", "fxFlex.gt-xs", "fxFlex.gt-sm", "fxFlex.gt-md", "fxFlex.gt-lg"] }, { type: i17.NgStyle, selector: "[ngStyle]", inputs: ["ngStyle"] }, { type: i20.DefaultStyleDirective, selector: "  [ngStyle],  [ngStyle.xs], [ngStyle.sm], [ngStyle.md], [ngStyle.lg], [ngStyle.xl],  [ngStyle.lt-sm], [ngStyle.lt-md], [ngStyle.lt-lg], [ngStyle.lt-xl],  [ngStyle.gt-xs], [ngStyle.gt-sm], [ngStyle.gt-md], [ngStyle.gt-lg]", inputs: ["ngStyle", "ngStyle.xs", "ngStyle.sm", "ngStyle.md", "ngStyle.lg", "ngStyle.xl", "ngStyle.lt-sm", "ngStyle.lt-md", "ngStyle.lt-lg", "ngStyle.lt-xl", "ngStyle.gt-xs", "ngStyle.gt-sm", "ngStyle.gt-md", "ngStyle.gt-lg"] }, { type: i17.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i20.DefaultClassDirective, selector: "  [ngClass], [ngClass.xs], [ngClass.sm], [ngClass.md], [ngClass.lg], [ngClass.xl],  [ngClass.lt-sm], [ngClass.lt-md], [ngClass.lt-lg], [ngClass.lt-xl],  [ngClass.gt-xs], [ngClass.gt-sm], [ngClass.gt-md], [ngClass.gt-lg]", inputs: ["ngClass", "ngClass.xs", "ngClass.sm", "ngClass.md", "ngClass.lg", "ngClass.xl", "ngClass.lt-sm", "ngClass.lt-md", "ngClass.lt-lg", "ngClass.lt-xl", "ngClass.gt-xs", "ngClass.gt-sm", "ngClass.gt-md", "ngClass.gt-lg"] }, { type: i17.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }], pipes: { "percent": i17.PercentPipe, "date": i17.DatePipe, "timeAgo": i21.TimeAgoPipe, "number": i17.DecimalPipe, "shortNumber": i22.ShortNumberPipe, "similarity": i23.SimilarityPipe, "array": i24.ArrayPipe }, animations: [] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.3", ngImport: i0, type: PropertiesComponent, decorators: [{
            type: Component,
            args: [{ selector: 'cr-properties', animations: [], template: "<cr-expansion-panel [expanded]=\"expanded\" (expandChange)=\"onExpandChange($event)\">\n\t<cr-expansion-panel-title>\n\t\t<h3 class=\"expension-panel-title\" aria-hidden=\"true\">\n\t\t\t{{ translations?.SCAN_PROPERTIES_SECTION?.TITLE || 'SCAN PROPERTIES' }}\n\t\t</h3>\n\t</cr-expansion-panel-title>\n\t<cr-expansion-panel-menu>\n\t\t<cr-expansion-panel-menu-item *ngIf=\"help\">\n\t\t\t<button\n\t\t\t\taria-label=\"Click for help.\"\n\t\t\t\ttitle=\"Help\"\n\t\t\t\ttabindex=\"0\"\n\t\t\t\trole=\"button\"\n\t\t\t\tmat-button\n\t\t\t\t[matTooltip]=\"translations?.SCAN_PROPERTIES_SECTION?.ACTIONS?.HELP || 'Help'\"\n\t\t\t\t(click)=\"helpClicked($event)\">\n\t\t\t\t<mat-icon svgIcon=\"help_outline\"></mat-icon>\n\t\t\t</button>\n\t\t</cr-expansion-panel-menu-item>\n\t\t<cr-expansion-panel-menu-item *ngIf=\"share\">\n\t\t\t<button\n\t\t\t\taria-label=\"Click to share report.\"\n\t\t\t\ttitle=\"Share\"\n\t\t\t\ttabindex=\"0\"\n\t\t\t\trole=\"button\"\n\t\t\t\tmat-button\n\t\t\t\t[matTooltip]=\"translations?.SCAN_PROPERTIES_SECTION?.ACTIONS?.SHARE || 'Share'\"\n\t\t\t\t(click)=\"shareClicked($event)\">\n\t\t\t\t<mat-icon svgIcon=\"share\"></mat-icon>\n\t\t\t</button>\n\t\t</cr-expansion-panel-menu-item>\n\t\t<cr-expansion-panel-menu-item *ngIf=\"download\">\n\t\t\t<button\n\t\t\t\taria-label=\"Click to download report.\"\n\t\t\t\trole=\"button\"\n\t\t\t\t[matTooltip]=\"btnDownloadTooltip ? btnDownloadTooltip : 'Download'\"\n\t\t\t\t[title]=\"btnDownloadTooltip\"\n\t\t\t\tmat-button\n\t\t\t\t[disabled]=\"isPDFDownloading\"\n\t\t\t\t(click)=\"downloadClicked($event)\">\n\t\t\t\t<mat-icon svgIcon=\"save_alt\"></mat-icon>\n\t\t\t</button>\n\t\t</cr-expansion-panel-menu-item>\n\t\t<!-- Click to download report. -->\n\t\t<cr-expansion-panel-menu-item>\n\t\t\t<button\n\t\t\t\taria-label=\"Click to open settings.\"\n\t\t\t\tmat-button\n\t\t\t\ttitle=\"Settings\"\n\t\t\t\tid=\"cr-properties-settings-button\"\n\t\t\t\ttabindex=\"0\"\n\t\t\t\trole=\"button\"\n\t\t\t\t[matTooltip]=\"translations?.SCAN_PROPERTIES_SECTION?.ACTIONS?.SETTINGS || 'Settings'\"\n\t\t\t\t(click)=\"openSettingsDialog()\">\n\t\t\t\t<mat-icon svgIcon=\"settings\"></mat-icon>\n\t\t\t</button>\n\t\t</cr-expansion-panel-menu-item>\n\n\t\t<ng-content></ng-content>\n\t</cr-expansion-panel-menu>\n\t<cr-expansion-panel-body fxLayout=\"row nowrap\">\n\t\t<!-- PROGRESS -->\n\t\t<div prop>\n\t\t\t<ng-container>\n\t\t\t\t<!--  -->\n\t\t\t\t<ng-container #scanSummeryComponentVcr></ng-container>\n\t\t\t\t<!--  -->\n\t\t\t\t<ng-container *ngIf=\"!scanSummeryComponentInstance\">\n\t\t\t\t\t<div fxLayout=\"row nowrap\" fxLayoutAlign=\"center center\" fxLayoutGap=\"1em\">\n\t\t\t\t\t\t<div fxLayout=\"row nowrap\" *ngIf=\"!done\" fxLayoutAlign=\"center center\">\n\t\t\t\t\t\t\t<div header>&zwnj;</div>\n\t\t\t\t\t\t\t<cls-spinner width=\"50px\"></cls-spinner>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<div header>\n\t\t\t\t\t\t\t\t<ng-container *ngIf=\"!done && progress !== null && !(scanSummaryComponent && progress == 100)\">\n\t\t\t\t\t\t\t\t\t{{ progress && progress / 100 | percent : '1.0' }}\n\t\t\t\t\t\t\t\t</ng-container>\n\t\t\t\t\t\t\t\t<ng-container *ngIf=\"done\">\n\t\t\t\t\t\t\t\t\t{{ translations?.SCAN_PROPERTIES_SECTION?.SCANNING?.DONE || 'done' }}\n\t\t\t\t\t\t\t\t</ng-container>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<ng-container *ngIf=\"isScanning && !done\">\n\t\t\t\t\t\t\t{{ translations?.SCAN_PROPERTIES_SECTION?.SCANNING?.PROGRESS || 'Scanning' }}...\n\t\t\t\t\t\t</ng-container>\n\t\t\t\t\t\t<ng-container *ngIf=\"!isScanning && !done\">\n\t\t\t\t\t\t\t{{ translations?.SCAN_PROPERTIES_SECTION?.SCANNING?.LOADING || 'Loading' }}...\n\t\t\t\t\t\t</ng-container>\n\t\t\t\t\t\t<ng-container *ngIf=\"done\">\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t*ngIf=\"metadata\"\n\t\t\t\t\t\t\t\t[matTooltip]=\"metadata?.scannedDocument.creationTime | date : 'MMMM d, y, h:mm:ss a'\"\n\t\t\t\t\t\t\t\t[matTooltipDisabled]=\"hideCreationTime\">\n\t\t\t\t\t\t\t\t{{ translations?.SCAN_PROPERTIES_SECTION?.SCANNING?.SCANNED || 'Scanned' }}\n\t\t\t\t\t\t\t\t<ng-container *ngIf=\"!hideCreationTime\">\n\t\t\t\t\t\t\t\t\t{{ metadata?.scannedDocument.creationTime | timeAgo }}\n\t\t\t\t\t\t\t\t</ng-container>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<!--  -->\n\t\t\t\t\t\t</ng-container>\n\t\t\t\t\t</div>\n\t\t\t\t</ng-container>\n\t\t\t</ng-container>\n\t\t</div>\n\n\t\t<ng-container *ngIf=\"isPlagiarismEnabled\">\n\t\t\t<!-- RESULTS FOUND -->\n\t\t\t<div prop [style.cursor]=\"isAlertsView ? 'pointer' : ''\" (click)=\"isAlertsView && showScanningResult()\">\n\t\t\t\t<div id=\"cr-hint-results-found\"></div>\n\t\t\t\t<div header [matTooltip]=\"resultsFound >= 1000 ? (resultsFound | number) + ' results' : null\">\n\t\t\t\t\t<span>{{ resultsFound | shortNumber : 1 }}</span>\n\t\t\t\t\t<ng-container *ngIf=\"resultsFound < totalViewedResults && isShowingOnlyTopResults\">+</ng-container>\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\t[matTooltip]=\"\n\t\t\t\t\t\thiddenResultsCount\n\t\t\t\t\t\t\t? hiddenResultsCount +\n\t\t\t\t\t\t\t  ' ' +\n\t\t\t\t\t\t\t  (translations?.SCAN_PROPERTIES_SECTION?.RESULTS_FOUND_TOOLTIP || 'Results have been filtered')\n\t\t\t\t\t\t\t: null\n\t\t\t\t\t\">\n\t\t\t\t\t{{ translations?.SCAN_PROPERTIES_SECTION?.RESULTS_FOUND || 'results found' }}\n\t\t\t\t\t<span *ngIf=\"hiddenResultsCount\" style=\"color: red\">*</span>\n\t\t\t\t</div>\n\n\t\t\t\t<div\n\t\t\t\t\t*ngIf=\"resultsFound < totalViewedResults && isShowingOnlyTopResults\"\n\t\t\t\t\tclass=\"show-all-result\"\n\t\t\t\t\t(click)=\"showAllResults()\">\n\t\t\t\t\tShow All\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<!-- # COPIED WORDS -->\n\t\t\t<div\n\t\t\t\tprop\n\t\t\t\t*ngIf=\"stats && !previewsLoading; else skeleton__prop\"\n\t\t\t\t[matTooltip]=\"\n\t\t\t\t\ttotal + ' ' + (translations?.SCAN_PROPERTIES_SECTION?.SIMILAR_WORDS_TOOPTIP || 'submitted words')\n\t\t\t\t\">\n\t\t\t\t<div header>\n\t\t\t\t\t{{ combined | shortNumber : 1 }}\n\t\t\t\t</div>\n\t\t\t\t<div>{{ translations?.SCAN_PROPERTIES_SECTION?.SIMILAR_WORDS || 'similar words' }}</div>\n\t\t\t</div>\n\n\t\t\t<!-- STATS -->\n\t\t\t<div stats [fxFlexOrder.lt-md]=\"-5\" fxLayout=\"row nowrap\" fxLayoutAlign=\"stretch stretch\">\n\t\t\t\t<ng-container *ngIf=\"stats && !previewsLoading; else skeleton__stats\">\n\t\t\t\t\t<ngx-charts-pie-chart\n\t\t\t\t\t\trole=\"presentation\"\n\t\t\t\t\t\tfxHide.lt-md\n\t\t\t\t\t\t[customColors]=\"customColors\"\n\t\t\t\t\t\t[results]=\"chartData\"\n\t\t\t\t\t\t[view]=\"[150, 150]\">\n\t\t\t\t\t\t<ng-template #tooltipTemplate let-model=\"model\">\n\t\t\t\t\t\t\t<div style=\"padding: 0.5em\" class=\"mat-typography\">\n\t\t\t\t\t\t\t\t<span style=\"font-size: 1em; display: block\">{{ model.value | number }}</span>\n\t\t\t\t\t\t\t\t<span tooltip-text>\n\t\t\t\t\t\t\t\t\t<ng-container [ngSwitch]=\"model.name\">\n\t\t\t\t\t\t\t\t\t\t<ng-container *ngSwitchCase=\"'Identical'\">\n\t\t\t\t\t\t\t\t\t\t\t{{ translations?.SHARED?.MATCH_TYPES?.IDENTICAL || model.name }}\n\t\t\t\t\t\t\t\t\t\t</ng-container>\n\t\t\t\t\t\t\t\t\t\t<ng-container *ngSwitchCase=\"'Minor changes'\">\n\t\t\t\t\t\t\t\t\t\t\t{{ translations?.SHARED?.MATCH_TYPES?.MINOR_CHANGES || model.name }}\n\t\t\t\t\t\t\t\t\t\t</ng-container>\n\t\t\t\t\t\t\t\t\t\t<ng-container *ngSwitchCase=\"'Related meaning'\">\n\t\t\t\t\t\t\t\t\t\t\t{{ translations?.SHARED?.MATCH_TYPES?.RELATED_MEANING || 'Paraphrased' }}\n\t\t\t\t\t\t\t\t\t\t</ng-container>\n\t\t\t\t\t\t\t\t\t\t<ng-container *ngSwitchCase=\"'Original'\">\n\t\t\t\t\t\t\t\t\t\t\t{{ translations?.SHARED?.MATCH_TYPES?.ORIGINAL || model.name }}\n\t\t\t\t\t\t\t\t\t\t</ng-container>\n\t\t\t\t\t\t\t\t\t\t<ng-container *ngSwitchDefault>\n\t\t\t\t\t\t\t\t\t\t\t{{ model.name }}\n\t\t\t\t\t\t\t\t\t\t</ng-container>\n\t\t\t\t\t\t\t\t\t</ng-container>\n\t\t\t\t\t\t\t\t\t{{ translations?.SHARED?.WORDS || 'words' }}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</ng-template>\n\t\t\t\t\t</ngx-charts-pie-chart>\n\n\t\t\t\t\t<div legend fxLayout=\"column\" fxFlex fxLayoutAlign=\"space-evenly stretch\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tmat-button\n\t\t\t\t\t\t\trow\n\t\t\t\t\t\t\tclass=\"cr-hint-button\"\n\t\t\t\t\t\t\tid=\"cr-hint-identical\"\n\t\t\t\t\t\t\t[attr.aria-label]=\"'Identical results' + (stats?.identical / stats?.total | similarity : '1.0-1')\"\n\t\t\t\t\t\t\t(click)=\"toggleComparison('showIdentical')\"\n\t\t\t\t\t\t\t[matTooltip]=\"\n\t\t\t\t\t\t\t\toptions?.showIdentical\n\t\t\t\t\t\t\t\t\t? translations?.SHARED?.MATCH_TYPES?.IDENTICAL_TOOLTIP || messages.IDENTICAL_TOOLTIP_TEXT\n\t\t\t\t\t\t\t\t\t: translations?.SHARED?.MATCH_TYPES?.OMITTED_MATCH_TOOLTIP_TEXT ||\n\t\t\t\t\t\t\t\t\t  messages.MATCH_TYPE_OMITTED_TOOLTIP_TEXT\n\t\t\t\t\t\t\t\"\n\t\t\t\t\t\t\tdisableRipple>\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclass=\"dot identical\"\n\t\t\t\t\t\t\t\t[ngStyle]=\"{ visibility: options?.showIdentical ? 'visible' : 'hidden' }\"></div>\n\t\t\t\t\t\t\t<div text [ngClass]=\"{ 'cr-strike-out': !options?.showIdentical }\">\n\t\t\t\t\t\t\t\t{{ translations?.SHARED?.MATCH_TYPES?.IDENTICAL || 'Identical' }}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<span fxFlex></span>\n\n\t\t\t\t\t\t\t<div *ngIf=\"options.showIdentical || stats.identical > 0\">\n\t\t\t\t\t\t\t\t{{ stats?.identical / stats?.total | similarity : '1.0-1' }}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<mat-divider></mat-divider>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tmat-button\n\t\t\t\t\t\t\trow\n\t\t\t\t\t\t\tclass=\"cr-hint-button\"\n\t\t\t\t\t\t\t[attr.aria-label]=\"'Minor Changes results' + (stats?.minorChanges / stats?.total | similarity : '1.0-1')\"\n\t\t\t\t\t\t\t(click)=\"toggleComparison('showMinorChanges')\"\n\t\t\t\t\t\t\t[matTooltip]=\"\n\t\t\t\t\t\t\t\toptions?.showMinorChanges\n\t\t\t\t\t\t\t\t\t? translations?.SHARED?.MATCH_TYPES?.MINOR_CHANGES_TOOLTIP || messages.MINOR_CHANGES_TOOLTIP_TEXT\n\t\t\t\t\t\t\t\t\t: translations?.SHARED?.MATCH_TYPES?.OMITTED_MATCH_TOOLTIP_TEXT ||\n\t\t\t\t\t\t\t\t\t  messages.MATCH_TYPE_OMITTED_TOOLTIP_TEXT\n\t\t\t\t\t\t\t\"\n\t\t\t\t\t\t\tdisableRipple>\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclass=\"dot minor-changes\"\n\t\t\t\t\t\t\t\t[ngStyle]=\"{ visibility: options?.showMinorChanges ? 'visible' : 'hidden' }\"></div>\n\t\t\t\t\t\t\t<div text [ngClass]=\"{ 'cr-strike-out': options?.showMinorChanges !== true }\">\n\t\t\t\t\t\t\t\t{{ translations?.SHARED?.MATCH_TYPES?.MINOR_CHANGES || 'Minor Changes' }}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<span fxFlex></span>\n\t\t\t\t\t\t\t<div *ngIf=\"options.showMinorChanges || stats.minorChanges > 0\">\n\t\t\t\t\t\t\t\t{{ stats?.minorChanges / stats?.total | percent : '1.0-1' }}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<mat-divider></mat-divider>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tmat-button\n\t\t\t\t\t\t\trow\n\t\t\t\t\t\t\tclass=\"cr-hint-button\"\n\t\t\t\t\t\t\t[attr.aria-label]=\"'Paraphrased results' + (stats?.relatedMeaning / stats?.total | similarity : '1.0-1')\"\n\t\t\t\t\t\t\t(click)=\"toggleComparison('showRelated')\"\n\t\t\t\t\t\t\t[matTooltip]=\"\n\t\t\t\t\t\t\t\toptions?.showRelated\n\t\t\t\t\t\t\t\t\t? translations?.SHARED?.MATCH_TYPES?.RELATED_MEANING_TOOLTIP || messages.RELATED_MEANING_TOOLTIP_TEXT\n\t\t\t\t\t\t\t\t\t: translations?.SHARED?.MATCH_TYPES?.OMITTED_MATCH_TOOLTIP_TEXT ||\n\t\t\t\t\t\t\t\t\t  messages.MATCH_TYPE_OMITTED_TOOLTIP_TEXT\n\t\t\t\t\t\t\t\"\n\t\t\t\t\t\t\tdisableRipple>\n\t\t\t\t\t\t\t<div class=\"dot related\" [ngStyle]=\"{ visibility: options?.showRelated ? 'visible' : 'hidden' }\"></div>\n\t\t\t\t\t\t\t<div text [ngClass]=\"{ 'cr-strike-out': options?.showRelated !== true }\">\n\t\t\t\t\t\t\t\t{{ translations?.SHARED?.MATCH_TYPES?.RELATED_MEANING || 'Paraphrased' }}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<span fxFlex></span>\n\t\t\t\t\t\t\t<div *ngIf=\"options.showRelated || stats.relatedMeaning > 0\">\n\t\t\t\t\t\t\t\t{{ stats?.relatedMeaning / stats?.total | percent : '1.0-1' }}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</button>\n\n\t\t\t\t\t\t<mat-divider></mat-divider>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t[matTooltip]=\"\n\t\t\t\t\t\t\t\ttranslations?.SHARED?.MATCH_TYPES?.OMITTED_WORDS_TOOLTIP || messages.OMITTED_WORDS_TOOLTIP_TEXT\n\t\t\t\t\t\t\t\"\n\t\t\t\t\t\t\trow\n\t\t\t\t\t\t\tfxLayout=\"row\"\n\t\t\t\t\t\t\tfxLayoutAlign=\"start center\"\n\t\t\t\t\t\t\tfxLayoutGap=\"0.5em\">\n\t\t\t\t\t\t\t<div class=\"dot omitted\"></div>\n\t\t\t\t\t\t\t<div text>\n\t\t\t\t\t\t\t\t{{ translations?.SHARED?.MATCH_TYPES?.OMITTED_WORDS || 'Omitted Words' }}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<span fxFlex></span>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t{{ stats && metadata.scannedDocument.totalExcluded / stats?.total | percent : '1.0-1' }}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<ng-template #statsSpinner>\n\t\t\t\t\t\t<cls-spinner title=\"Spinner\" *ngIf=\"!stats\" width=\"16px\" style=\"display: inline-block\"></cls-spinner>\n\t\t\t\t\t</ng-template>\n\t\t\t\t</ng-container>\n\t\t\t</div>\n\t\t</ng-container>\n\n\t\t<!-- % PLAGIARISM -->\n\t\t<div\n\t\t\tprop\n\t\t\tid=\"cr-hint-results-score\"\n\t\t\t*ngIf=\"stats && !previewsLoading; else skeleton__prop\"\n\t\t\t[ngClass]=\"{\n\t\t\t\tdisabled_score: plagiarismScore == null,\n\t\t\t\tlow: plagiarismScore != null && plagiarismScore <= 0.1,\n\t\t\t\tmedium: plagiarismScore > 0.1 && plagiarismScore <= 0.5,\n\t\t\t\thigh: plagiarismScore > 0.5\n\t\t\t}\">\n\t\t\t<div header>\n\t\t\t\t<ng-container *ngIf=\"plagiarismScore != null\">{{ plagiarismScore | percent : '1.0-1' }}</ng-container>\n\t\t\t\t<ng-container *ngIf=\"plagiarismScore == null\">N/A</ng-container>\n\t\t\t</div>\n\t\t\t<div [matTooltip]=\"isShowingPartialStats ? 'Some matches are ommited according to your settings' : null\">\n\t\t\t\t<span>\n\t\t\t\t\t{{ translations?.SCAN_PROPERTIES_SECTION?.PLAGIARISM || 'matches' }}{{ isShowingPartialStats ? '*' : '' }}\n\t\t\t\t</span>\n\t\t\t</div>\n\n\t\t\t<ng-container *ngIf=\"isPlagiarismEnabled && hasNonAIAlerts && !isAiView\">\n\t\t\t\t<cr-notifications #notificationsRef></cr-notifications>\n\t\t\t</ng-container>\n\t\t\t<!-- View -->\n\t\t\t<section class=\"score-group-buttons\">\n\t\t\t\t<button\n\t\t\t\t\tmatTooltip=\"SEE ALERTS\"\n\t\t\t\t\t*ngIf=\"isPlagiarismEnabled && isAiDetectionEnabled && hasNonAIAlerts && isAiView\"\n\t\t\t\t\tclass=\"side-icon-button\"\n\t\t\t\t\tmat-icon-button\n\t\t\t\t\t(click)=\"showAlerts()\"\n\t\t\t\t\t[ngClass]=\"{\n\t\t\t\t\t\t'btn-notifications-error':\n\t\t\t\t\t\t\tnotificationSeverity == eNotificationSeverities.High ||\n\t\t\t\t\t\t\tnotificationSeverity == eNotificationSeverities.VeryHigh,\n\t\t\t\t\t\t'btn-notifications-warning': notificationSeverity == eNotificationSeverities.Medium\n\t\t\t\t\t}\">\n\t\t\t\t\t<ng-container [ngSwitch]=\"notificationSeverity\">\n\t\t\t\t\t\t<mat-icon *ngSwitchCase=\"eNotificationSeverities.Medium\">warning</mat-icon>\n\t\t\t\t\t\t<mat-icon *ngSwitchCase=\"eNotificationSeverities.High\">error</mat-icon>\n\t\t\t\t\t\t<mat-icon *ngSwitchCase=\"eNotificationSeverities.VeryHigh\">error</mat-icon>\n\t\t\t\t\t\t<mat-icon *ngSwitchDefault>info</mat-icon>\n\t\t\t\t\t</ng-container>\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\t*ngIf=\"isPlagiarismEnabled && isAiDetectionEnabled && isAiView\"\n\t\t\t\t\tclass=\"btn-view\"\n\t\t\t\t\tmat-stroked-button\n\t\t\t\t\tcolor=\"basic\"\n\t\t\t\t\t(click)=\"showScanningResult()\">\n\t\t\t\t\t<mat-icon class=\"mat-18\">visibility</mat-icon>\n\t\t\t\t\tView\n\t\t\t\t</button>\n\t\t\t</section>\n\t\t\t<!-- Viewing -->\n\t\t\t<button\n\t\t\t\t*ngIf=\"isPlagiarismEnabled && isAiDetectionEnabled && !hasNonAIAlerts && !isAiView\"\n\t\t\t\tclass=\"btn-viewing\"\n\t\t\t\tmat-stroked-button\n\t\t\t\tcolor=\"basic\"\n\t\t\t\tdisabled>\n\t\t\t\tViewing\n\t\t\t</button>\n\t\t\t<!-- Upgrade -->\n\t\t\t<button\n\t\t\t\t*ngIf=\"!isPlagiarismEnabled && showUpgradeButton\"\n\t\t\t\t(click)=\"upgrade.emit(eCRPackageProducts.plagiairsm)\"\n\t\t\t\tclass=\"btn-upgrade\"\n\t\t\t\tmat-stroked-button\n\t\t\t\tcolor=\"basic\">\n\t\t\t\t<svg width=\"25\" height=\"24\" viewBox=\"0 0 25 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t<path\n\t\t\t\t\t\tfill-rule=\"evenodd\"\n\t\t\t\t\t\tclip-rule=\"evenodd\"\n\t\t\t\t\t\td=\"M13.1531 7.6355C13.666 7.27341 14.001 6.67607 14.001 6.00049C14.001 4.89592 13.1055 4.00049 12.001 4.00049C10.8964 4.00049 10.001 4.89592 10.001 6.00049C10.001 6.69982 10.3599 7.31531 10.9036 7.67281C9.84466 9.34691 8.40096 11.8147 8.40096 12.8253C7.83778 11.4693 6.28214 10.5836 4.9844 10.0586C5.17624 9.75158 5.28711 9.3888 5.28711 9.00012C5.28711 7.89555 4.39168 7.00012 3.28711 7.00012C2.18254 7.00012 1.28711 7.89555 1.28711 9.00012C1.28711 10.1047 2.18254 11.0001 3.28711 11.0001C3.31361 11.0001 3.34 10.9996 3.36625 10.9986L5.00096 17.9995H19.001L20.6428 10.968C20.759 10.989 20.8787 11 21.001 11C22.1055 11 23.001 10.1046 23.001 9C23.001 7.89543 22.1055 7 21.001 7C19.8964 7 19.001 7.89543 19.001 9C19.001 9.35977 19.096 9.69736 19.2622 9.98904C17.9757 10.5038 16.3376 11.4075 15.6817 12.8253C15.6817 11.6225 14.2328 9.24225 13.1531 7.6355ZM5.07272 19.9995C5.0252 19.6702 5.00096 19.3361 5.00096 18.9995H12.001H19.001C19.001 19.3361 18.9767 19.6702 18.9292 19.9995H5.07272Z\"\n\t\t\t\t\t\tfill=\"#3F9AF5\" />\n\t\t\t\t</svg>\n\t\t\t\tUpgrade\n\t\t\t</button>\n\t\t</div>\n\n\t\t<!-- % AI -->\n\t\t<ng-container *ngIf=\"showAIContentProperty\">\n\t\t\t<div\n\t\t\t\tprop\n\t\t\t\tid=\"cr-hint-results-score\"\n\t\t\t\t*ngIf=\"stats && !previewsLoading; else skeleton__prop\"\n\t\t\t\t[ngClass]=\"{\n\t\t\t\t\tdisabled_score: aiScore == null,\n\t\t\t\t\tlow: aiScore != null && aiScore <= 0.1,\n\t\t\t\t\tmedium: aiScore > 0.1 && aiScore <= 0.5,\n\t\t\t\t\thigh: aiScore > 0.5\n\t\t\t\t}\">\n\t\t\t\t<div header>\n\t\t\t\t\t<ng-container *ngIf=\"aiScore != null\">{{ aiScore | percent : '1.0-1' }}</ng-container>\n\t\t\t\t\t<ng-container *ngIf=\"aiScore == null\">N/A</ng-container>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t{{ translations?.SCAN_PROPERTIES_SECTION?.AiContent || 'ai content' }}\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t\t<!-- View -->\n\t\t\t\t<button\n\t\t\t\t\t*ngIf=\"isPlagiarismEnabled && isAiDetectionEnabled && !isAiView\"\n\t\t\t\t\tclass=\"btn-view\"\n\t\t\t\t\tmat-stroked-button\n\t\t\t\t\tcolor=\"basic\"\n\t\t\t\t\t(click)=\"showAiView()\">\n\t\t\t\t\t<mat-icon class=\"mat-18\">visibility</mat-icon>\n\t\t\t\t\tView\n\t\t\t\t</button>\n\t\t\t\t<!-- Viewing -->\n\t\t\t\t<button\n\t\t\t\t\t*ngIf=\"isPlagiarismEnabled && isAiDetectionEnabled && isAiView\"\n\t\t\t\t\tclass=\"btn-viewing\"\n\t\t\t\t\tmat-stroked-button\n\t\t\t\t\tcolor=\"basic\"\n\t\t\t\t\tdisabled>\n\t\t\t\t\tViewing\n\t\t\t\t</button>\n\t\t\t\t<!-- Upgrade -->\n\t\t\t\t<button\n\t\t\t\t\t*ngIf=\"!isAiDetectionEnabled && showUpgradeButton\"\n\t\t\t\t\t(click)=\"upgrade.emit(eCRPackageProducts.ai)\"\n\t\t\t\t\tclass=\"btn-upgrade\"\n\t\t\t\t\tmat-stroked-button\n\t\t\t\t\tcolor=\"basic\">\n\t\t\t\t\t<svg width=\"25\" height=\"24\" viewBox=\"0 0 25 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tfill-rule=\"evenodd\"\n\t\t\t\t\t\t\tclip-rule=\"evenodd\"\n\t\t\t\t\t\t\td=\"M13.1531 7.6355C13.666 7.27341 14.001 6.67607 14.001 6.00049C14.001 4.89592 13.1055 4.00049 12.001 4.00049C10.8964 4.00049 10.001 4.89592 10.001 6.00049C10.001 6.69982 10.3599 7.31531 10.9036 7.67281C9.84466 9.34691 8.40096 11.8147 8.40096 12.8253C7.83778 11.4693 6.28214 10.5836 4.9844 10.0586C5.17624 9.75158 5.28711 9.3888 5.28711 9.00012C5.28711 7.89555 4.39168 7.00012 3.28711 7.00012C2.18254 7.00012 1.28711 7.89555 1.28711 9.00012C1.28711 10.1047 2.18254 11.0001 3.28711 11.0001C3.31361 11.0001 3.34 10.9996 3.36625 10.9986L5.00096 17.9995H19.001L20.6428 10.968C20.759 10.989 20.8787 11 21.001 11C22.1055 11 23.001 10.1046 23.001 9C23.001 7.89543 22.1055 7 21.001 7C19.8964 7 19.001 7.89543 19.001 9C19.001 9.35977 19.096 9.69736 19.2622 9.98904C17.9757 10.5038 16.3376 11.4075 15.6817 12.8253C15.6817 11.6225 14.2328 9.24225 13.1531 7.6355ZM5.07272 19.9995C5.0252 19.6702 5.00096 19.3361 5.00096 18.9995H12.001H19.001C19.001 19.3361 18.9767 19.6702 18.9292 19.9995H5.07272Z\"\n\t\t\t\t\t\t\tfill=\"#3F9AF5\" />\n\t\t\t\t\t</svg>\n\t\t\t\t\tUpgrade\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</ng-container>\n\t</cr-expansion-panel-body>\n</cr-expansion-panel>\n\n<ng-template #skeleton__prop>\n\t<div prop>\n\t\t<ngx-skeleton-loader [theme]=\"{ height: '3em', width: '95px', margin: '0.5em' }\"></ngx-skeleton-loader>\n\t\t<ngx-skeleton-loader [theme]=\"{ height: '1em', width: '3em' }\"></ngx-skeleton-loader>\n\t</div>\n</ng-template>\n\n<ng-template #skeleton__stats>\n\t<div fxLayout=\"column\">\n\t\t<ngx-skeleton-loader\n\t\t\t[theme]=\"{ width: '118px', height: '113px', margin: '1em' }\"\n\t\t\tappearance=\"circle\"></ngx-skeleton-loader>\n\t</div>\n\n\t<div fxLayout=\"column\" fxFlex fxLayoutAlign=\"space-evenly stretch\">\n\t\t<ng-container *ngFor=\"let x of 4 | array; let last = last\">\n\t\t\t<div fxLayout=\"row\" fxLayoutGap=\"1em\" style=\"padding: 0em 0.5em\" fxLayoutAlign=\"center center\">\n\t\t\t\t<ngx-skeleton-loader\n\t\t\t\t\tappearance=\"circle\"\n\t\t\t\t\t[theme]=\"{ width: '1.75em', height: '1.75em', margin: '0px' }\"></ngx-skeleton-loader>\n\t\t\t\t<ngx-skeleton-loader [theme]=\"{ margin: '0', width: '5em' }\"></ngx-skeleton-loader>\n\t\t\t\t<span fxFlex></span>\n\t\t\t\t<ngx-skeleton-loader [theme]=\"{ margin: '0', width: '3em' }\"></ngx-skeleton-loader>\n\t\t\t</div>\n\t\t\t<mat-divider *ngIf=\"!last\"></mat-divider>\n\t\t</ng-container>\n\t</div>\n</ng-template>\n", styles: [".sat-tooltip{color:#fff;border-radius:4px;margin:14px;max-width:250px;padding:.5em;overflow:hidden;text-overflow:ellipsis;background:rgba(0,0,0,.8)}.identical{background-color:#ff796e}.minor-changes{background-color:#ff9a9a}.related{background-color:#ffd9b0}.omitted{background-color:#fff}.text-identical{color:#ff796e}.text-minor-changes{color:#ff9a9a}.text-related{color:#ffd9b0}.dot{border:1px solid #171717;width:1.5em;min-width:1.5em;min-height:1.5em;height:1.5em;border-radius:50%}@media screen and (max-width: 959px){.dot{width:1em;min-width:1em;min-height:1em;height:1em}}.copyleaks-report-dialog .mat-dialog-container{padding:0}.cdk-keyboard-focused{outline:2px solid black!important}:host{box-sizing:border-box;width:100%;background-color:#fff}cr-expansion-panel-title h3{margin:0;font-size:14px;font-weight:500}cr-expansion-panel{margin:1em 1em 0;background-color:#fff}cr-expansion-panel-menu-item [mat-button]{border-radius:0;min-width:36px;padding:0}cr-expansion-panel-body{overflow-x:auto}cr-expansion-panel-body>div:not(:last-child){border-right:1px solid #e6e6e6}cr-expansion-panel-body [progress]{display:flex;flex-direction:column;justify-content:center;padding:1em;align-items:center;flex:1}cr-expansion-panel-body [progress] mat-icon{color:#6ac259}cr-expansion-panel-body .disabled_score{color:#212121}cr-expansion-panel-body .disabled_score [header]{color:#8590a2;font-weight:500;margin-bottom:0;font-size:32px!important}cr-expansion-panel-body .low{color:#29c44d}cr-expansion-panel-body .medium{color:#906d16}cr-expansion-panel-body .high{color:#ec4f3a}cr-expansion-panel-body [stats]{flex:3;max-width:475px;min-width:375px}@media screen and (max-width: 959px){cr-expansion-panel-body [stats]{max-width:300px;min-width:unset}}cr-expansion-panel-body [stats] [legend] [row]{padding:0 .5em;flex:1}cr-expansion-panel-body [stats] [legend] [row]:not(:last-child){cursor:pointer}cr-expansion-panel-body [stats] [legend] [row] [text]{white-space:nowrap}cr-expansion-panel-body [stats] [legend] [row] .cr-strike-out{text-decoration:line-through}cr-expansion-panel-body [prop]{padding:1em;display:flex;flex:1;flex-flow:column nowrap;justify-content:center;align-items:center;text-transform:uppercase;font-weight:700;white-space:nowrap}cr-expansion-panel-body [prop] [header]{line-height:1em;font-size:2.6em}@media screen and (max-width: 959px){cr-expansion-panel-body [prop] [header]{font-size:2em}}#cr-hint-results-score span{font-size:19px}#cr-hint-results-found{position:relative;top:-30px}.show-all-result{color:#17a1ff;font-size:11px}.show-all-result:hover{text-decoration:underline;cursor:pointer}.score-group-buttons{display:flex;justify-content:center;align-items:center}.btn-view,.btn-viewing{position:relative;color:#52616b;border-color:#52616b;font-weight:700;font-size:14px;text-transform:uppercase;line-height:29px;margin:10px 5px;padding-bottom:2px}.btn-view mat-icon,.btn-viewing mat-icon{font-size:18px;height:18px;width:18px;line-height:18px;margin-right:4px}.btn-view:hover{color:#3f9af5;border-color:#3f9af5}.btn-viewing{background:#8590a2;color:#fff!important;border-color:#8590a2!important}.btn-upgrade{margin-top:10px;color:#3f9af5;border-color:#3f9af5;font-weight:700;line-height:2.2;padding:0 8px 0 7px}.btn-upgrade svg{margin-top:-5px}.cr-hint-button{border-radius:unset;font-weight:400;line-height:normal}.cr-hint-button ::ng-deep .mat-button-wrapper{display:flex;place-content:center flex-start;align-items:center;gap:.5em}\n"] }]
        }], ctorParameters: function () { return [{ type: i0.ComponentFactoryResolver }, { type: i1.ReportService }, { type: i2.ViewModeService }, { type: i3.LayoutMediaQueryService }, { type: i4.MatDialog }, { type: i5.StatisticsService }, { type: i6.DirectionService }, { type: i7.CopyleaksTranslateService }, { type: i8.LiveAnnouncer }]; }, propDecorators: { isMobile: [{
                type: HostBinding,
                args: ['class.mobile']
            }], notifications: [{
                type: ViewChild,
                args: ['notificationsRef']
            }], scanSummaryComponent: [{
                type: Input
            }], isPDFDownloading: [{
                type: Input
            }], hideCreationTime: [{
                type: Input
            }], expanded: [{
                type: Input
            }], showUpgradeButton: [{
                type: Input
            }], showAIContentProperty: [{
                type: Input
            }], upgrade: [{
                type: Output
            }], expandChange: [{
                type: Output
            }], scanSammeryComponentVcr: [{
                type: ViewChild,
                args: ['scanSummeryComponentVcr', { read: ViewContainerRef, static: false }]
            }] } });
//# sourceMappingURL=data:application/json;base64,