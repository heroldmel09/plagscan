import { Pipe } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * A pipe that takes a list of items and returns that list without duplicates
 */
export class UniquePipe {
    /**
     * Filter an array of items, removing duplicates possible using a key to compare
     * @param value the array of items
     * @param key the key to compare by
     */
    transform(value, key) {
        const dict = value.reduce((prev, curr) => {
            prev[curr[key]] = curr;
            return prev;
        }, {});
        return Object.values(dict);
    }
}
UniquePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.3", ngImport: i0, type: UniquePipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
UniquePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.3.3", ngImport: i0, type: UniquePipe, name: "unique" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.3", ngImport: i0, type: UniquePipe, decorators: [{
            type: Pipe,
            args: [{ name: 'unique' }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidW5pcXVlLnBpcGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9wbGFnaWFyaXNtLXJlcG9ydC9zcmMvbGliL3NoYXJlZC9waXBlcy91bmlxdWUucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsSUFBSSxFQUFpQixNQUFNLGVBQWUsQ0FBQzs7QUFFcEQ7O0dBRUc7QUFFSCxNQUFNLE9BQU8sVUFBVTtJQUN0Qjs7OztPQUlHO0lBQ0gsU0FBUyxDQUFJLEtBQVUsRUFBRSxHQUFXO1FBQ25DLE1BQU0sSUFBSSxHQUFHLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQyxJQUFJLEVBQUUsSUFBSSxFQUFFLEVBQUU7WUFDeEMsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQztZQUN2QixPQUFPLElBQUksQ0FBQztRQUNiLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztRQUNQLE9BQU8sTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUM1QixDQUFDOzt1R0FaVyxVQUFVO3FHQUFWLFVBQVU7MkZBQVYsVUFBVTtrQkFEdEIsSUFBSTttQkFBQyxFQUFFLElBQUksRUFBRSxRQUFRLEVBQUUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQaXBlLCBQaXBlVHJhbnNmb3JtIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbi8qKlxuICogQSBwaXBlIHRoYXQgdGFrZXMgYSBsaXN0IG9mIGl0ZW1zIGFuZCByZXR1cm5zIHRoYXQgbGlzdCB3aXRob3V0IGR1cGxpY2F0ZXNcbiAqL1xuQFBpcGUoeyBuYW1lOiAndW5pcXVlJyB9KVxuZXhwb3J0IGNsYXNzIFVuaXF1ZVBpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcblx0LyoqXG5cdCAqIEZpbHRlciBhbiBhcnJheSBvZiBpdGVtcywgcmVtb3ZpbmcgZHVwbGljYXRlcyBwb3NzaWJsZSB1c2luZyBhIGtleSB0byBjb21wYXJlXG5cdCAqIEBwYXJhbSB2YWx1ZSB0aGUgYXJyYXkgb2YgaXRlbXNcblx0ICogQHBhcmFtIGtleSB0aGUga2V5IHRvIGNvbXBhcmUgYnlcblx0ICovXG5cdHRyYW5zZm9ybTxUPih2YWx1ZTogVFtdLCBrZXk6IHN0cmluZyk6IFRbXSB7XG5cdFx0Y29uc3QgZGljdCA9IHZhbHVlLnJlZHVjZSgocHJldiwgY3VycikgPT4ge1xuXHRcdFx0cHJldltjdXJyW2tleV1dID0gY3Vycjtcblx0XHRcdHJldHVybiBwcmV2O1xuXHRcdH0sIHt9KTtcblx0XHRyZXR1cm4gT2JqZWN0LnZhbHVlcyhkaWN0KTtcblx0fVxufVxuIl19