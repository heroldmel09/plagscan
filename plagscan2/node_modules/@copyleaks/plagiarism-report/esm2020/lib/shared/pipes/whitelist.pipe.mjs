import { Pipe } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * A pipe that filters a list of data according to some **whitelist** information
 */
export class WhitelistPipe {
    /**
     * Filter a list according to a whitelist data, and possible a key to compare by
     * @param value an array of items
     * @param key the key to compare the items by, if missing, use shallow comparison
     * @param whitelist the whitelist data to filter by
     */
    transform(value, key, whitelist) {
        if (!whitelist || whitelist.length === 0) {
            return value;
        }
        return (value || []).filter(item => whitelist.includes(key ? item[key] : item));
    }
}
WhitelistPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.3", ngImport: i0, type: WhitelistPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
WhitelistPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.3.3", ngImport: i0, type: WhitelistPipe, name: "whitelist" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.3", ngImport: i0, type: WhitelistPipe, decorators: [{
            type: Pipe,
            args: [{
                    name: 'whitelist',
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2hpdGVsaXN0LnBpcGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9wbGFnaWFyaXNtLXJlcG9ydC9zcmMvbGliL3NoYXJlZC9waXBlcy93aGl0ZWxpc3QucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsSUFBSSxFQUFpQixNQUFNLGVBQWUsQ0FBQzs7QUFFcEQ7O0dBRUc7QUFJSCxNQUFNLE9BQU8sYUFBYTtJQUN6Qjs7Ozs7T0FLRztJQUNJLFNBQVMsQ0FBQyxLQUFZLEVBQUUsR0FBVyxFQUFFLFNBQWdCO1FBQzNELElBQUksQ0FBQyxTQUFTLElBQUksU0FBUyxDQUFDLE1BQU0sS0FBSyxDQUFDLEVBQUU7WUFDekMsT0FBTyxLQUFLLENBQUM7U0FDYjtRQUNELE9BQU8sQ0FBQyxLQUFLLElBQUksRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztJQUNqRixDQUFDOzswR0FaVyxhQUFhO3dHQUFiLGFBQWE7MkZBQWIsYUFBYTtrQkFIekIsSUFBSTttQkFBQztvQkFDTCxJQUFJLEVBQUUsV0FBVztpQkFDakIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQaXBlLCBQaXBlVHJhbnNmb3JtIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbi8qKlxuICogQSBwaXBlIHRoYXQgZmlsdGVycyBhIGxpc3Qgb2YgZGF0YSBhY2NvcmRpbmcgdG8gc29tZSAqKndoaXRlbGlzdCoqIGluZm9ybWF0aW9uXG4gKi9cbkBQaXBlKHtcblx0bmFtZTogJ3doaXRlbGlzdCcsXG59KVxuZXhwb3J0IGNsYXNzIFdoaXRlbGlzdFBpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcblx0LyoqXG5cdCAqIEZpbHRlciBhIGxpc3QgYWNjb3JkaW5nIHRvIGEgd2hpdGVsaXN0IGRhdGEsIGFuZCBwb3NzaWJsZSBhIGtleSB0byBjb21wYXJlIGJ5XG5cdCAqIEBwYXJhbSB2YWx1ZSBhbiBhcnJheSBvZiBpdGVtc1xuXHQgKiBAcGFyYW0ga2V5IHRoZSBrZXkgdG8gY29tcGFyZSB0aGUgaXRlbXMgYnksIGlmIG1pc3NpbmcsIHVzZSBzaGFsbG93IGNvbXBhcmlzb25cblx0ICogQHBhcmFtIHdoaXRlbGlzdCB0aGUgd2hpdGVsaXN0IGRhdGEgdG8gZmlsdGVyIGJ5XG5cdCAqL1xuXHRwdWJsaWMgdHJhbnNmb3JtKHZhbHVlOiBhbnlbXSwga2V5OiBzdHJpbmcsIHdoaXRlbGlzdDogYW55W10pIHtcblx0XHRpZiAoIXdoaXRlbGlzdCB8fCB3aGl0ZWxpc3QubGVuZ3RoID09PSAwKSB7XG5cdFx0XHRyZXR1cm4gdmFsdWU7XG5cdFx0fVxuXHRcdHJldHVybiAodmFsdWUgfHwgW10pLmZpbHRlcihpdGVtID0+IHdoaXRlbGlzdC5pbmNsdWRlcyhrZXkgPyBpdGVtW2tleV0gOiBpdGVtKSk7XG5cdH1cbn1cbiJdfQ==