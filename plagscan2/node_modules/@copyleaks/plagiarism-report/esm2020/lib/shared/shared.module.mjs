import { NgModule } from '@angular/core';
import { CommonModule, PercentPipe } from '@angular/common';
import { ShortNumberPipe } from './pipes/short-number.pipe';
import { SafePipe } from './pipes/safe.pipe';
import { SearchPipe } from './pipes/search.pipe';
import { ArrayPipe } from './pipes/array.pipe';
import { ClickStopPropagationDirective } from './directives/click-stop-propagation.directive';
import { TimeAgoPipe } from './pipes/time-ago.pipe';
import { WhitelistPipe } from './pipes/whitelist.pipe';
import { UniquePipe } from './pipes/unique.pipe';
import { SimilarityPipe } from './pipes/similarity.pipe';
import * as i0 from "@angular/core";
/**
 * A shared module containing all sort of generic reuseable stuff
 */
export class SharedModule {
}
SharedModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.3", ngImport: i0, type: SharedModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
SharedModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.3.3", ngImport: i0, type: SharedModule, declarations: [ShortNumberPipe,
        SafePipe,
        SearchPipe,
        ArrayPipe,
        TimeAgoPipe,
        WhitelistPipe,
        UniquePipe,
        SimilarityPipe,
        ClickStopPropagationDirective], imports: [CommonModule], exports: [ShortNumberPipe,
        SafePipe,
        SearchPipe,
        ArrayPipe,
        TimeAgoPipe,
        WhitelistPipe,
        SimilarityPipe,
        ClickStopPropagationDirective] });
SharedModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.3.3", ngImport: i0, type: SharedModule, providers: [PercentPipe], imports: [[CommonModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.3", ngImport: i0, type: SharedModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [
                        ShortNumberPipe,
                        SafePipe,
                        SearchPipe,
                        ArrayPipe,
                        TimeAgoPipe,
                        WhitelistPipe,
                        UniquePipe,
                        SimilarityPipe,
                        ClickStopPropagationDirective,
                    ],
                    imports: [CommonModule],
                    providers: [PercentPipe],
                    exports: [
                        ShortNumberPipe,
                        SafePipe,
                        SearchPipe,
                        ArrayPipe,
                        TimeAgoPipe,
                        WhitelistPipe,
                        SimilarityPipe,
                        ClickStopPropagationDirective,
                    ],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2hhcmVkLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3BsYWdpYXJpc20tcmVwb3J0L3NyYy9saWIvc2hhcmVkL3NoYXJlZC5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsWUFBWSxFQUFFLFdBQVcsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQzVELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUM1RCxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDN0MsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ2pELE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUMvQyxPQUFPLEVBQUUsNkJBQTZCLEVBQUUsTUFBTSwrQ0FBK0MsQ0FBQztBQUU5RixPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDcEQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUNqRCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0seUJBQXlCLENBQUM7O0FBRXpEOztHQUVHO0FBMEJILE1BQU0sT0FBTyxZQUFZOzt5R0FBWixZQUFZOzBHQUFaLFlBQVksaUJBdkJ2QixlQUFlO1FBQ2YsUUFBUTtRQUNSLFVBQVU7UUFDVixTQUFTO1FBQ1QsV0FBVztRQUNYLGFBQWE7UUFDYixVQUFVO1FBQ1YsY0FBYztRQUNkLDZCQUE2QixhQUVwQixZQUFZLGFBR3JCLGVBQWU7UUFDZixRQUFRO1FBQ1IsVUFBVTtRQUNWLFNBQVM7UUFDVCxXQUFXO1FBQ1gsYUFBYTtRQUNiLGNBQWM7UUFDZCw2QkFBNkI7MEdBR2xCLFlBQVksYUFaYixDQUFDLFdBQVcsQ0FBQyxZQURmLENBQUMsWUFBWSxDQUFDOzJGQWFYLFlBQVk7a0JBekJ4QixRQUFRO21CQUFDO29CQUNULFlBQVksRUFBRTt3QkFDYixlQUFlO3dCQUNmLFFBQVE7d0JBQ1IsVUFBVTt3QkFDVixTQUFTO3dCQUNULFdBQVc7d0JBQ1gsYUFBYTt3QkFDYixVQUFVO3dCQUNWLGNBQWM7d0JBQ2QsNkJBQTZCO3FCQUM3QjtvQkFDRCxPQUFPLEVBQUUsQ0FBQyxZQUFZLENBQUM7b0JBQ3ZCLFNBQVMsRUFBRSxDQUFDLFdBQVcsQ0FBQztvQkFDeEIsT0FBTyxFQUFFO3dCQUNSLGVBQWU7d0JBQ2YsUUFBUTt3QkFDUixVQUFVO3dCQUNWLFNBQVM7d0JBQ1QsV0FBVzt3QkFDWCxhQUFhO3dCQUNiLGNBQWM7d0JBQ2QsNkJBQTZCO3FCQUM3QjtpQkFDRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUsIFBlcmNlbnRQaXBlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IFNob3J0TnVtYmVyUGlwZSB9IGZyb20gJy4vcGlwZXMvc2hvcnQtbnVtYmVyLnBpcGUnO1xuaW1wb3J0IHsgU2FmZVBpcGUgfSBmcm9tICcuL3BpcGVzL3NhZmUucGlwZSc7XG5pbXBvcnQgeyBTZWFyY2hQaXBlIH0gZnJvbSAnLi9waXBlcy9zZWFyY2gucGlwZSc7XG5pbXBvcnQgeyBBcnJheVBpcGUgfSBmcm9tICcuL3BpcGVzL2FycmF5LnBpcGUnO1xuaW1wb3J0IHsgQ2xpY2tTdG9wUHJvcGFnYXRpb25EaXJlY3RpdmUgfSBmcm9tICcuL2RpcmVjdGl2ZXMvY2xpY2stc3RvcC1wcm9wYWdhdGlvbi5kaXJlY3RpdmUnO1xuXG5pbXBvcnQgeyBUaW1lQWdvUGlwZSB9IGZyb20gJy4vcGlwZXMvdGltZS1hZ28ucGlwZSc7XG5pbXBvcnQgeyBXaGl0ZWxpc3RQaXBlIH0gZnJvbSAnLi9waXBlcy93aGl0ZWxpc3QucGlwZSc7XG5pbXBvcnQgeyBVbmlxdWVQaXBlIH0gZnJvbSAnLi9waXBlcy91bmlxdWUucGlwZSc7XG5pbXBvcnQgeyBTaW1pbGFyaXR5UGlwZSB9IGZyb20gJy4vcGlwZXMvc2ltaWxhcml0eS5waXBlJztcblxuLyoqXG4gKiBBIHNoYXJlZCBtb2R1bGUgY29udGFpbmluZyBhbGwgc29ydCBvZiBnZW5lcmljIHJldXNlYWJsZSBzdHVmZlxuICovXG5ATmdNb2R1bGUoe1xuXHRkZWNsYXJhdGlvbnM6IFtcblx0XHRTaG9ydE51bWJlclBpcGUsXG5cdFx0U2FmZVBpcGUsXG5cdFx0U2VhcmNoUGlwZSxcblx0XHRBcnJheVBpcGUsXG5cdFx0VGltZUFnb1BpcGUsXG5cdFx0V2hpdGVsaXN0UGlwZSxcblx0XHRVbmlxdWVQaXBlLFxuXHRcdFNpbWlsYXJpdHlQaXBlLFxuXHRcdENsaWNrU3RvcFByb3BhZ2F0aW9uRGlyZWN0aXZlLFxuXHRdLFxuXHRpbXBvcnRzOiBbQ29tbW9uTW9kdWxlXSxcblx0cHJvdmlkZXJzOiBbUGVyY2VudFBpcGVdLFxuXHRleHBvcnRzOiBbXG5cdFx0U2hvcnROdW1iZXJQaXBlLFxuXHRcdFNhZmVQaXBlLFxuXHRcdFNlYXJjaFBpcGUsXG5cdFx0QXJyYXlQaXBlLFxuXHRcdFRpbWVBZ29QaXBlLFxuXHRcdFdoaXRlbGlzdFBpcGUsXG5cdFx0U2ltaWxhcml0eVBpcGUsXG5cdFx0Q2xpY2tTdG9wUHJvcGFnYXRpb25EaXJlY3RpdmUsXG5cdF0sXG59KVxuZXhwb3J0IGNsYXNzIFNoYXJlZE1vZHVsZSB7fVxuIl19