import { Component, EventEmitter, Input, Output } from '@angular/core';
import { trigger, state, style, transition, animate } from '@angular/animations';
import * as i0 from "@angular/core";
import * as i1 from "@angular/cdk/a11y";
import * as i2 from "@angular/material/button";
import * as i3 from "@angular/material/icon";
import * as i4 from "@angular/material/divider";
import * as i5 from "@angular/flex-layout/flex";
import * as i6 from "@angular/material/tooltip";
import * as i7 from "@angular/common";
/** animation for expanding and collapsing an element's height */
export const expandCollapseAnimation = trigger('expandCollapse', [
    state('open', style({
        height: '*',
    })),
    state('close', style({
        height: '0px',
        overflow: 'hidden',
    })),
    transition('open <=> close', animate(200)),
]);
export class ExpansionPanelComponent {
    constructor(announcer) {
        this.announcer = announcer;
        this.expanded = false;
        this.disabled = false;
        this.expandChange = new EventEmitter();
        this.animationState = 'close';
    }
    /**
     * Flips the expansion panel `expanded` state.
     *
     * or close the panel accordingly
     * @param force if given, will force the `expanded` state accordingly
     */
    toggle(force) {
        this.expanded = force === undefined ? !this.expanded : force;
        this.animationState = this.expanded ? 'open' : 'close';
        if (this.expandChange) {
            this.expandChange.emit(this.expanded);
        }
        this.announcer.announce(this.expanded ? 'Scan properties expended' : 'Scan properties collapsed', 'assertive');
    }
}
ExpansionPanelComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.3", ngImport: i0, type: ExpansionPanelComponent, deps: [{ token: i1.LiveAnnouncer }], target: i0.ɵɵFactoryTarget.Component });
ExpansionPanelComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.3", type: ExpansionPanelComponent, selector: "cr-expansion-panel", inputs: { expanded: "expanded", disabled: "disabled" }, outputs: { expandChange: "expandChange" }, ngImport: i0, template: "<div fxLayout=\"row nowrap\" fxLayoutAlign=\"start stretch\" top>\n\t<button\n\t\tclass=\"expension-btn\"\n\t\tmat-icon-button\n\t\tfxFlex\n\t\ttop-title\n\t\t(click)=\"toggle()\"\n\t\t[attr.aria-label]=\"expanded ? 'Click to collapse scan properties' : 'Click to expand scan properties'\"\n\t\taria-controls=\"body\"\n\t\tdisableRipple\n\t\t[matTooltip]=\"expanded ? 'Click to Collapse' : 'Click to Expand'\">\n\t\t<ng-container [ngTemplateOutlet]=\"title\"></ng-container>\n\t\t<mat-icon [svgIcon]=\"expanded ? 'expand_less' : 'expand_more'\"></mat-icon>\n\t</button>\n\t<div>\n\t\t<ng-container [ngTemplateOutlet]=\"menu\"></ng-container>\n\t</div>\n</div>\n<div *ngIf=\"expanded\" [@expandCollapse]=\"expanded ? 'open' : 'close'\" body id=\"body\">\n\t<mat-divider></mat-divider>\n\t<ng-container [ngTemplateOutlet]=\"body\"></ng-container>\n</div>\n\n<!-- content for outlets -->\n<ng-template #title>\n\t<ng-content select=\"cr-expansion-panel-title\"></ng-content>\n</ng-template>\n\n<ng-template #menu>\n\t<ng-content select=\"cr-expansion-panel-menu\"></ng-content>\n</ng-template>\n<ng-template #body>\n\t<ng-content select=\"cr-expansion-panel-body\"></ng-content>\n</ng-template>\n", styles: [":host(cr-expansion-panel){border:1px solid #e6e6e6;display:flex;flex-direction:column}:host(cr-expansion-panel) [top]{height:2.5em;cursor:pointer}:host(cr-expansion-panel) [top] [top-title]{text-align:center}:host(cr-expansion-panel-title){vertical-align:super}:host(cr-expansion-panel-menu){display:flex;flex-flow:row nowrap;height:100%}:host(cr-expansion-panel-menu-item){display:flex}.expension-btn{display:flex;margin-bottom:0;justify-content:center;align-items:center;border-radius:unset;height:auto;line-height:normal;font-size:14px;font-weight:500}.expension-btn ::ng-deep .mat-button-wrapper{display:flex;align-items:center;place-content:center;white-space:break-spaces}.expension-btn:focus-visible{outline:2px solid black!important}\n"], components: [{ type: i2.MatButton, selector: "button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]", inputs: ["disabled", "disableRipple", "color"], exportAs: ["matButton"] }, { type: i3.MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }, { type: i4.MatDivider, selector: "mat-divider", inputs: ["vertical", "inset"] }], directives: [{ type: i5.DefaultLayoutDirective, selector: "  [fxLayout], [fxLayout.xs], [fxLayout.sm], [fxLayout.md],  [fxLayout.lg], [fxLayout.xl], [fxLayout.lt-sm], [fxLayout.lt-md],  [fxLayout.lt-lg], [fxLayout.lt-xl], [fxLayout.gt-xs], [fxLayout.gt-sm],  [fxLayout.gt-md], [fxLayout.gt-lg]", inputs: ["fxLayout", "fxLayout.xs", "fxLayout.sm", "fxLayout.md", "fxLayout.lg", "fxLayout.xl", "fxLayout.lt-sm", "fxLayout.lt-md", "fxLayout.lt-lg", "fxLayout.lt-xl", "fxLayout.gt-xs", "fxLayout.gt-sm", "fxLayout.gt-md", "fxLayout.gt-lg"] }, { type: i5.DefaultLayoutAlignDirective, selector: "  [fxLayoutAlign], [fxLayoutAlign.xs], [fxLayoutAlign.sm], [fxLayoutAlign.md],  [fxLayoutAlign.lg], [fxLayoutAlign.xl], [fxLayoutAlign.lt-sm], [fxLayoutAlign.lt-md],  [fxLayoutAlign.lt-lg], [fxLayoutAlign.lt-xl], [fxLayoutAlign.gt-xs], [fxLayoutAlign.gt-sm],  [fxLayoutAlign.gt-md], [fxLayoutAlign.gt-lg]", inputs: ["fxLayoutAlign", "fxLayoutAlign.xs", "fxLayoutAlign.sm", "fxLayoutAlign.md", "fxLayoutAlign.lg", "fxLayoutAlign.xl", "fxLayoutAlign.lt-sm", "fxLayoutAlign.lt-md", "fxLayoutAlign.lt-lg", "fxLayoutAlign.lt-xl", "fxLayoutAlign.gt-xs", "fxLayoutAlign.gt-sm", "fxLayoutAlign.gt-md", "fxLayoutAlign.gt-lg"] }, { type: i5.DefaultFlexDirective, selector: "  [fxFlex], [fxFlex.xs], [fxFlex.sm], [fxFlex.md],  [fxFlex.lg], [fxFlex.xl], [fxFlex.lt-sm], [fxFlex.lt-md],  [fxFlex.lt-lg], [fxFlex.lt-xl], [fxFlex.gt-xs], [fxFlex.gt-sm],  [fxFlex.gt-md], [fxFlex.gt-lg]", inputs: ["fxFlex", "fxFlex.xs", "fxFlex.sm", "fxFlex.md", "fxFlex.lg", "fxFlex.xl", "fxFlex.lt-sm", "fxFlex.lt-md", "fxFlex.lt-lg", "fxFlex.lt-xl", "fxFlex.gt-xs", "fxFlex.gt-sm", "fxFlex.gt-md", "fxFlex.gt-lg"] }, { type: i6.MatTooltip, selector: "[matTooltip]", exportAs: ["matTooltip"] }, { type: i7.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }, { type: i7.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], animations: [expandCollapseAnimation] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.3", ngImport: i0, type: ExpansionPanelComponent, decorators: [{
            type: Component,
            args: [{ selector: 'cr-expansion-panel', animations: [expandCollapseAnimation], template: "<div fxLayout=\"row nowrap\" fxLayoutAlign=\"start stretch\" top>\n\t<button\n\t\tclass=\"expension-btn\"\n\t\tmat-icon-button\n\t\tfxFlex\n\t\ttop-title\n\t\t(click)=\"toggle()\"\n\t\t[attr.aria-label]=\"expanded ? 'Click to collapse scan properties' : 'Click to expand scan properties'\"\n\t\taria-controls=\"body\"\n\t\tdisableRipple\n\t\t[matTooltip]=\"expanded ? 'Click to Collapse' : 'Click to Expand'\">\n\t\t<ng-container [ngTemplateOutlet]=\"title\"></ng-container>\n\t\t<mat-icon [svgIcon]=\"expanded ? 'expand_less' : 'expand_more'\"></mat-icon>\n\t</button>\n\t<div>\n\t\t<ng-container [ngTemplateOutlet]=\"menu\"></ng-container>\n\t</div>\n</div>\n<div *ngIf=\"expanded\" [@expandCollapse]=\"expanded ? 'open' : 'close'\" body id=\"body\">\n\t<mat-divider></mat-divider>\n\t<ng-container [ngTemplateOutlet]=\"body\"></ng-container>\n</div>\n\n<!-- content for outlets -->\n<ng-template #title>\n\t<ng-content select=\"cr-expansion-panel-title\"></ng-content>\n</ng-template>\n\n<ng-template #menu>\n\t<ng-content select=\"cr-expansion-panel-menu\"></ng-content>\n</ng-template>\n<ng-template #body>\n\t<ng-content select=\"cr-expansion-panel-body\"></ng-content>\n</ng-template>\n", styles: [":host(cr-expansion-panel){border:1px solid #e6e6e6;display:flex;flex-direction:column}:host(cr-expansion-panel) [top]{height:2.5em;cursor:pointer}:host(cr-expansion-panel) [top] [top-title]{text-align:center}:host(cr-expansion-panel-title){vertical-align:super}:host(cr-expansion-panel-menu){display:flex;flex-flow:row nowrap;height:100%}:host(cr-expansion-panel-menu-item){display:flex}.expension-btn{display:flex;margin-bottom:0;justify-content:center;align-items:center;border-radius:unset;height:auto;line-height:normal;font-size:14px;font-weight:500}.expension-btn ::ng-deep .mat-button-wrapper{display:flex;align-items:center;place-content:center;white-space:break-spaces}.expension-btn:focus-visible{outline:2px solid black!important}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.LiveAnnouncer }]; }, propDecorators: { expanded: [{
                type: Input
            }], disabled: [{
                type: Input
            }], expandChange: [{
                type: Output
            }] } });
export class ExpansionPanelTitleComponent {
}
ExpansionPanelTitleComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.3", ngImport: i0, type: ExpansionPanelTitleComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
ExpansionPanelTitleComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.3", type: ExpansionPanelTitleComponent, selector: "cr-expansion-panel-title", ngImport: i0, template: '<ng-content></ng-content>', isInline: true, styles: [":host(cr-expansion-panel){border:1px solid #e6e6e6;display:flex;flex-direction:column}:host(cr-expansion-panel) [top]{height:2.5em;cursor:pointer}:host(cr-expansion-panel) [top] [top-title]{text-align:center}:host(cr-expansion-panel-title){vertical-align:super}:host(cr-expansion-panel-menu){display:flex;flex-flow:row nowrap;height:100%}:host(cr-expansion-panel-menu-item){display:flex}.expension-btn{display:flex;margin-bottom:0;justify-content:center;align-items:center;border-radius:unset;height:auto;line-height:normal;font-size:14px;font-weight:500}.expension-btn ::ng-deep .mat-button-wrapper{display:flex;align-items:center;place-content:center;white-space:break-spaces}.expension-btn:focus-visible{outline:2px solid black!important}\n"] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.3", ngImport: i0, type: ExpansionPanelTitleComponent, decorators: [{
            type: Component,
            args: [{ selector: 'cr-expansion-panel-title', template: '<ng-content></ng-content>', styles: [":host(cr-expansion-panel){border:1px solid #e6e6e6;display:flex;flex-direction:column}:host(cr-expansion-panel) [top]{height:2.5em;cursor:pointer}:host(cr-expansion-panel) [top] [top-title]{text-align:center}:host(cr-expansion-panel-title){vertical-align:super}:host(cr-expansion-panel-menu){display:flex;flex-flow:row nowrap;height:100%}:host(cr-expansion-panel-menu-item){display:flex}.expension-btn{display:flex;margin-bottom:0;justify-content:center;align-items:center;border-radius:unset;height:auto;line-height:normal;font-size:14px;font-weight:500}.expension-btn ::ng-deep .mat-button-wrapper{display:flex;align-items:center;place-content:center;white-space:break-spaces}.expension-btn:focus-visible{outline:2px solid black!important}\n"] }]
        }] });
export class ExpansionPanelMenuComponent {
}
ExpansionPanelMenuComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.3", ngImport: i0, type: ExpansionPanelMenuComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
ExpansionPanelMenuComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.3", type: ExpansionPanelMenuComponent, selector: "cr-expansion-panel-menu", ngImport: i0, template: `
		<ng-content accept="cr-expansion-panel-menu-item"></ng-content>
	`, isInline: true, styles: [":host(cr-expansion-panel){border:1px solid #e6e6e6;display:flex;flex-direction:column}:host(cr-expansion-panel) [top]{height:2.5em;cursor:pointer}:host(cr-expansion-panel) [top] [top-title]{text-align:center}:host(cr-expansion-panel-title){vertical-align:super}:host(cr-expansion-panel-menu){display:flex;flex-flow:row nowrap;height:100%}:host(cr-expansion-panel-menu-item){display:flex}.expension-btn{display:flex;margin-bottom:0;justify-content:center;align-items:center;border-radius:unset;height:auto;line-height:normal;font-size:14px;font-weight:500}.expension-btn ::ng-deep .mat-button-wrapper{display:flex;align-items:center;place-content:center;white-space:break-spaces}.expension-btn:focus-visible{outline:2px solid black!important}\n"] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.3", ngImport: i0, type: ExpansionPanelMenuComponent, decorators: [{
            type: Component,
            args: [{ selector: 'cr-expansion-panel-menu', template: `
		<ng-content accept="cr-expansion-panel-menu-item"></ng-content>
	`, styles: [":host(cr-expansion-panel){border:1px solid #e6e6e6;display:flex;flex-direction:column}:host(cr-expansion-panel) [top]{height:2.5em;cursor:pointer}:host(cr-expansion-panel) [top] [top-title]{text-align:center}:host(cr-expansion-panel-title){vertical-align:super}:host(cr-expansion-panel-menu){display:flex;flex-flow:row nowrap;height:100%}:host(cr-expansion-panel-menu-item){display:flex}.expension-btn{display:flex;margin-bottom:0;justify-content:center;align-items:center;border-radius:unset;height:auto;line-height:normal;font-size:14px;font-weight:500}.expension-btn ::ng-deep .mat-button-wrapper{display:flex;align-items:center;place-content:center;white-space:break-spaces}.expension-btn:focus-visible{outline:2px solid black!important}\n"] }]
        }] });
export class ExpansionPanelMenuItemComponent {
}
ExpansionPanelMenuItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.3", ngImport: i0, type: ExpansionPanelMenuItemComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
ExpansionPanelMenuItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.3", type: ExpansionPanelMenuItemComponent, selector: "cr-expansion-panel-menu-item", ngImport: i0, template: `
		<mat-divider vertical="true"></mat-divider>
		<ng-content></ng-content>
	`, isInline: true, styles: [":host(cr-expansion-panel){border:1px solid #e6e6e6;display:flex;flex-direction:column}:host(cr-expansion-panel) [top]{height:2.5em;cursor:pointer}:host(cr-expansion-panel) [top] [top-title]{text-align:center}:host(cr-expansion-panel-title){vertical-align:super}:host(cr-expansion-panel-menu){display:flex;flex-flow:row nowrap;height:100%}:host(cr-expansion-panel-menu-item){display:flex}.expension-btn{display:flex;margin-bottom:0;justify-content:center;align-items:center;border-radius:unset;height:auto;line-height:normal;font-size:14px;font-weight:500}.expension-btn ::ng-deep .mat-button-wrapper{display:flex;align-items:center;place-content:center;white-space:break-spaces}.expension-btn:focus-visible{outline:2px solid black!important}\n"], components: [{ type: i4.MatDivider, selector: "mat-divider", inputs: ["vertical", "inset"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.3", ngImport: i0, type: ExpansionPanelMenuItemComponent, decorators: [{
            type: Component,
            args: [{ selector: 'cr-expansion-panel-menu-item', template: `
		<mat-divider vertical="true"></mat-divider>
		<ng-content></ng-content>
	`, styles: [":host(cr-expansion-panel){border:1px solid #e6e6e6;display:flex;flex-direction:column}:host(cr-expansion-panel) [top]{height:2.5em;cursor:pointer}:host(cr-expansion-panel) [top] [top-title]{text-align:center}:host(cr-expansion-panel-title){vertical-align:super}:host(cr-expansion-panel-menu){display:flex;flex-flow:row nowrap;height:100%}:host(cr-expansion-panel-menu-item){display:flex}.expension-btn{display:flex;margin-bottom:0;justify-content:center;align-items:center;border-radius:unset;height:auto;line-height:normal;font-size:14px;font-weight:500}.expension-btn ::ng-deep .mat-button-wrapper{display:flex;align-items:center;place-content:center;white-space:break-spaces}.expension-btn:focus-visible{outline:2px solid black!important}\n"] }]
        }] });
export class ExpansionPanelBodyComponent {
}
ExpansionPanelBodyComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.3", ngImport: i0, type: ExpansionPanelBodyComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
ExpansionPanelBodyComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.3", type: ExpansionPanelBodyComponent, selector: "cr-expansion-panel-body", ngImport: i0, template: '<ng-content></ng-content>', isInline: true, styles: [":host(cr-expansion-panel){border:1px solid #e6e6e6;display:flex;flex-direction:column}:host(cr-expansion-panel) [top]{height:2.5em;cursor:pointer}:host(cr-expansion-panel) [top] [top-title]{text-align:center}:host(cr-expansion-panel-title){vertical-align:super}:host(cr-expansion-panel-menu){display:flex;flex-flow:row nowrap;height:100%}:host(cr-expansion-panel-menu-item){display:flex}.expension-btn{display:flex;margin-bottom:0;justify-content:center;align-items:center;border-radius:unset;height:auto;line-height:normal;font-size:14px;font-weight:500}.expension-btn ::ng-deep .mat-button-wrapper{display:flex;align-items:center;place-content:center;white-space:break-spaces}.expension-btn:focus-visible{outline:2px solid black!important}\n"] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.3", ngImport: i0, type: ExpansionPanelBodyComponent, decorators: [{
            type: Component,
            args: [{ selector: 'cr-expansion-panel-body', template: '<ng-content></ng-content>', styles: [":host(cr-expansion-panel){border:1px solid #e6e6e6;display:flex;flex-direction:column}:host(cr-expansion-panel) [top]{height:2.5em;cursor:pointer}:host(cr-expansion-panel) [top] [top-title]{text-align:center}:host(cr-expansion-panel-title){vertical-align:super}:host(cr-expansion-panel-menu){display:flex;flex-flow:row nowrap;height:100%}:host(cr-expansion-panel-menu-item){display:flex}.expension-btn{display:flex;margin-bottom:0;justify-content:center;align-items:center;border-radius:unset;height:auto;line-height:normal;font-size:14px;font-weight:500}.expension-btn ::ng-deep .mat-button-wrapper{display:flex;align-items:center;place-content:center;white-space:break-spaces}.expension-btn:focus-visible{outline:2px solid black!important}\n"] }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhwYW5zaW9uLXBhbmVsLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3BsYWdpYXJpc20tcmVwb3J0L3NyYy9saWIvZXhwYW5zaW9uLXBhbmVsL2V4cGFuc2lvbi1wYW5lbC5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9wbGFnaWFyaXNtLXJlcG9ydC9zcmMvbGliL2V4cGFuc2lvbi1wYW5lbC9leHBhbnNpb24tcGFuZWwuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN2RSxPQUFPLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLE9BQU8sRUFBRSxNQUFNLHFCQUFxQixDQUFDOzs7Ozs7Ozs7QUFHakYsaUVBQWlFO0FBQ2pFLE1BQU0sQ0FBQyxNQUFNLHVCQUF1QixHQUFHLE9BQU8sQ0FBQyxnQkFBZ0IsRUFBRTtJQUNoRSxLQUFLLENBQ0osTUFBTSxFQUNOLEtBQUssQ0FBQztRQUNMLE1BQU0sRUFBRSxHQUFHO0tBQ1gsQ0FBQyxDQUNGO0lBQ0QsS0FBSyxDQUNKLE9BQU8sRUFDUCxLQUFLLENBQUM7UUFDTCxNQUFNLEVBQUUsS0FBSztRQUNiLFFBQVEsRUFBRSxRQUFRO0tBQ2xCLENBQUMsQ0FDRjtJQUNELFVBQVUsQ0FBQyxnQkFBZ0IsRUFBRSxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUM7Q0FDMUMsQ0FBQyxDQUFDO0FBUUgsTUFBTSxPQUFPLHVCQUF1QjtJQU1uQyxZQUFvQixTQUF3QjtRQUF4QixjQUFTLEdBQVQsU0FBUyxDQUFlO1FBTG5DLGFBQVEsR0FBRyxLQUFLLENBQUM7UUFDakIsYUFBUSxHQUFHLEtBQUssQ0FBQztRQUNoQixpQkFBWSxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7UUFDbEMsbUJBQWMsR0FBRyxPQUFPLENBQUM7SUFFWSxDQUFDO0lBRWhEOzs7OztPQUtHO0lBQ0gsTUFBTSxDQUFDLEtBQWU7UUFDckIsSUFBSSxDQUFDLFFBQVEsR0FBRyxLQUFLLEtBQUssU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQztRQUM3RCxJQUFJLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDO1FBQ3ZELElBQUksSUFBSSxDQUFDLFlBQVksRUFBRTtZQUN0QixJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7U0FDdEM7UUFFRCxJQUFJLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQywwQkFBMEIsQ0FBQyxDQUFDLENBQUMsMkJBQTJCLEVBQUUsV0FBVyxDQUFDLENBQUM7SUFDaEgsQ0FBQzs7b0hBdEJXLHVCQUF1Qjt3R0FBdkIsdUJBQXVCLDZKQzVCcEMsMnFDQWtDQSxrckdEUmEsQ0FBQyx1QkFBdUIsQ0FBQzsyRkFFekIsdUJBQXVCO2tCQU5uQyxTQUFTOytCQUNDLG9CQUFvQixjQUdsQixDQUFDLHVCQUF1QixDQUFDO29HQUc1QixRQUFRO3NCQUFoQixLQUFLO2dCQUNHLFFBQVE7c0JBQWhCLEtBQUs7Z0JBQ0ksWUFBWTtzQkFBckIsTUFBTTs7QUEyQlIsTUFBTSxPQUFPLDRCQUE0Qjs7eUhBQTVCLDRCQUE0Qjs2R0FBNUIsNEJBQTRCLGdFQUg5QiwyQkFBMkI7MkZBR3pCLDRCQUE0QjtrQkFMeEMsU0FBUzsrQkFDQywwQkFBMEIsWUFDMUIsMkJBQTJCOztBQVl0QyxNQUFNLE9BQU8sMkJBQTJCOzt3SEFBM0IsMkJBQTJCOzRHQUEzQiwyQkFBMkIsK0RBTDdCOztFQUVUOzJGQUdXLDJCQUEyQjtrQkFQdkMsU0FBUzsrQkFDQyx5QkFBeUIsWUFDekI7O0VBRVQ7O0FBY0YsTUFBTSxPQUFPLCtCQUErQjs7NEhBQS9CLCtCQUErQjtnSEFBL0IsK0JBQStCLG9FQVBqQzs7O0VBR1Q7MkZBSVcsK0JBQStCO2tCQVQzQyxTQUFTOytCQUNDLDhCQUE4QixZQUM5Qjs7O0VBR1Q7O0FBV0YsTUFBTSxPQUFPLDJCQUEyQjs7d0hBQTNCLDJCQUEyQjs0R0FBM0IsMkJBQTJCLCtEQUg3QiwyQkFBMkI7MkZBR3pCLDJCQUEyQjtrQkFMdkMsU0FBUzsrQkFDQyx5QkFBeUIsWUFDekIsMkJBQTJCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPdXRwdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IHRyaWdnZXIsIHN0YXRlLCBzdHlsZSwgdHJhbnNpdGlvbiwgYW5pbWF0ZSB9IGZyb20gJ0Bhbmd1bGFyL2FuaW1hdGlvbnMnO1xuaW1wb3J0IHsgTGl2ZUFubm91bmNlciB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9hMTF5JztcblxuLyoqIGFuaW1hdGlvbiBmb3IgZXhwYW5kaW5nIGFuZCBjb2xsYXBzaW5nIGFuIGVsZW1lbnQncyBoZWlnaHQgKi9cbmV4cG9ydCBjb25zdCBleHBhbmRDb2xsYXBzZUFuaW1hdGlvbiA9IHRyaWdnZXIoJ2V4cGFuZENvbGxhcHNlJywgW1xuXHRzdGF0ZShcblx0XHQnb3BlbicsXG5cdFx0c3R5bGUoe1xuXHRcdFx0aGVpZ2h0OiAnKicsXG5cdFx0fSlcblx0KSxcblx0c3RhdGUoXG5cdFx0J2Nsb3NlJyxcblx0XHRzdHlsZSh7XG5cdFx0XHRoZWlnaHQ6ICcwcHgnLFxuXHRcdFx0b3ZlcmZsb3c6ICdoaWRkZW4nLFxuXHRcdH0pXG5cdCksXG5cdHRyYW5zaXRpb24oJ29wZW4gPD0+IGNsb3NlJywgYW5pbWF0ZSgyMDApKSxcbl0pO1xuXG5AQ29tcG9uZW50KHtcblx0c2VsZWN0b3I6ICdjci1leHBhbnNpb24tcGFuZWwnLFxuXHR0ZW1wbGF0ZVVybDogJy4vZXhwYW5zaW9uLXBhbmVsLmNvbXBvbmVudC5odG1sJyxcblx0c3R5bGVVcmxzOiBbJy4vZXhwYW5zaW9uLXBhbmVsLmNvbXBvbmVudC5zY3NzJ10sXG5cdGFuaW1hdGlvbnM6IFtleHBhbmRDb2xsYXBzZUFuaW1hdGlvbl0sXG59KVxuZXhwb3J0IGNsYXNzIEV4cGFuc2lvblBhbmVsQ29tcG9uZW50IHtcblx0QElucHV0KCkgZXhwYW5kZWQgPSBmYWxzZTtcblx0QElucHV0KCkgZGlzYWJsZWQgPSBmYWxzZTtcblx0QE91dHB1dCgpIGV4cGFuZENoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcblx0cHJvdGVjdGVkIGFuaW1hdGlvblN0YXRlID0gJ2Nsb3NlJztcblxuXHRjb25zdHJ1Y3Rvcihwcml2YXRlIGFubm91bmNlcjogTGl2ZUFubm91bmNlcikge31cblxuXHQvKipcblx0ICogRmxpcHMgdGhlIGV4cGFuc2lvbiBwYW5lbCBgZXhwYW5kZWRgIHN0YXRlLlxuXHQgKlxuXHQgKiBvciBjbG9zZSB0aGUgcGFuZWwgYWNjb3JkaW5nbHlcblx0ICogQHBhcmFtIGZvcmNlIGlmIGdpdmVuLCB3aWxsIGZvcmNlIHRoZSBgZXhwYW5kZWRgIHN0YXRlIGFjY29yZGluZ2x5XG5cdCAqL1xuXHR0b2dnbGUoZm9yY2U/OiBib29sZWFuKSB7XG5cdFx0dGhpcy5leHBhbmRlZCA9IGZvcmNlID09PSB1bmRlZmluZWQgPyAhdGhpcy5leHBhbmRlZCA6IGZvcmNlO1xuXHRcdHRoaXMuYW5pbWF0aW9uU3RhdGUgPSB0aGlzLmV4cGFuZGVkID8gJ29wZW4nIDogJ2Nsb3NlJztcblx0XHRpZiAodGhpcy5leHBhbmRDaGFuZ2UpIHtcblx0XHRcdHRoaXMuZXhwYW5kQ2hhbmdlLmVtaXQodGhpcy5leHBhbmRlZCk7XG5cdFx0fVxuXG5cdFx0dGhpcy5hbm5vdW5jZXIuYW5ub3VuY2UodGhpcy5leHBhbmRlZCA/ICdTY2FuIHByb3BlcnRpZXMgZXhwZW5kZWQnIDogJ1NjYW4gcHJvcGVydGllcyBjb2xsYXBzZWQnLCAnYXNzZXJ0aXZlJyk7XG5cdH1cbn1cblxuQENvbXBvbmVudCh7XG5cdHNlbGVjdG9yOiAnY3ItZXhwYW5zaW9uLXBhbmVsLXRpdGxlJyxcblx0dGVtcGxhdGU6ICc8bmctY29udGVudD48L25nLWNvbnRlbnQ+Jyxcblx0c3R5bGVVcmxzOiBbJy4vZXhwYW5zaW9uLXBhbmVsLmNvbXBvbmVudC5zY3NzJ10sXG59KVxuZXhwb3J0IGNsYXNzIEV4cGFuc2lvblBhbmVsVGl0bGVDb21wb25lbnQge31cblxuQENvbXBvbmVudCh7XG5cdHNlbGVjdG9yOiAnY3ItZXhwYW5zaW9uLXBhbmVsLW1lbnUnLFxuXHR0ZW1wbGF0ZTogYFxuXHRcdDxuZy1jb250ZW50IGFjY2VwdD1cImNyLWV4cGFuc2lvbi1wYW5lbC1tZW51LWl0ZW1cIj48L25nLWNvbnRlbnQ+XG5cdGAsXG5cdHN0eWxlVXJsczogWycuL2V4cGFuc2lvbi1wYW5lbC5jb21wb25lbnQuc2NzcyddLFxufSlcbmV4cG9ydCBjbGFzcyBFeHBhbnNpb25QYW5lbE1lbnVDb21wb25lbnQge31cblxuQENvbXBvbmVudCh7XG5cdHNlbGVjdG9yOiAnY3ItZXhwYW5zaW9uLXBhbmVsLW1lbnUtaXRlbScsXG5cdHRlbXBsYXRlOiBgXG5cdFx0PG1hdC1kaXZpZGVyIHZlcnRpY2FsPVwidHJ1ZVwiPjwvbWF0LWRpdmlkZXI+XG5cdFx0PG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxuXHRgLFxuXHRzdHlsZVVybHM6IFsnLi9leHBhbnNpb24tcGFuZWwuY29tcG9uZW50LnNjc3MnXSxcblx0Ly8gZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZVxufSlcbmV4cG9ydCBjbGFzcyBFeHBhbnNpb25QYW5lbE1lbnVJdGVtQ29tcG9uZW50IHt9XG5cbkBDb21wb25lbnQoe1xuXHRzZWxlY3RvcjogJ2NyLWV4cGFuc2lvbi1wYW5lbC1ib2R5Jyxcblx0dGVtcGxhdGU6ICc8bmctY29udGVudD48L25nLWNvbnRlbnQ+Jyxcblx0c3R5bGVVcmxzOiBbJy4vZXhwYW5zaW9uLXBhbmVsLmNvbXBvbmVudC5zY3NzJ10sXG59KVxuZXhwb3J0IGNsYXNzIEV4cGFuc2lvblBhbmVsQm9keUNvbXBvbmVudCB7fVxuIiwiPGRpdiBmeExheW91dD1cInJvdyBub3dyYXBcIiBmeExheW91dEFsaWduPVwic3RhcnQgc3RyZXRjaFwiIHRvcD5cblx0PGJ1dHRvblxuXHRcdGNsYXNzPVwiZXhwZW5zaW9uLWJ0blwiXG5cdFx0bWF0LWljb24tYnV0dG9uXG5cdFx0ZnhGbGV4XG5cdFx0dG9wLXRpdGxlXG5cdFx0KGNsaWNrKT1cInRvZ2dsZSgpXCJcblx0XHRbYXR0ci5hcmlhLWxhYmVsXT1cImV4cGFuZGVkID8gJ0NsaWNrIHRvIGNvbGxhcHNlIHNjYW4gcHJvcGVydGllcycgOiAnQ2xpY2sgdG8gZXhwYW5kIHNjYW4gcHJvcGVydGllcydcIlxuXHRcdGFyaWEtY29udHJvbHM9XCJib2R5XCJcblx0XHRkaXNhYmxlUmlwcGxlXG5cdFx0W21hdFRvb2x0aXBdPVwiZXhwYW5kZWQgPyAnQ2xpY2sgdG8gQ29sbGFwc2UnIDogJ0NsaWNrIHRvIEV4cGFuZCdcIj5cblx0XHQ8bmctY29udGFpbmVyIFtuZ1RlbXBsYXRlT3V0bGV0XT1cInRpdGxlXCI+PC9uZy1jb250YWluZXI+XG5cdFx0PG1hdC1pY29uIFtzdmdJY29uXT1cImV4cGFuZGVkID8gJ2V4cGFuZF9sZXNzJyA6ICdleHBhbmRfbW9yZSdcIj48L21hdC1pY29uPlxuXHQ8L2J1dHRvbj5cblx0PGRpdj5cblx0XHQ8bmctY29udGFpbmVyIFtuZ1RlbXBsYXRlT3V0bGV0XT1cIm1lbnVcIj48L25nLWNvbnRhaW5lcj5cblx0PC9kaXY+XG48L2Rpdj5cbjxkaXYgKm5nSWY9XCJleHBhbmRlZFwiIFtAZXhwYW5kQ29sbGFwc2VdPVwiZXhwYW5kZWQgPyAnb3BlbicgOiAnY2xvc2UnXCIgYm9keSBpZD1cImJvZHlcIj5cblx0PG1hdC1kaXZpZGVyPjwvbWF0LWRpdmlkZXI+XG5cdDxuZy1jb250YWluZXIgW25nVGVtcGxhdGVPdXRsZXRdPVwiYm9keVwiPjwvbmctY29udGFpbmVyPlxuPC9kaXY+XG5cbjwhLS0gY29udGVudCBmb3Igb3V0bGV0cyAtLT5cbjxuZy10ZW1wbGF0ZSAjdGl0bGU+XG5cdDxuZy1jb250ZW50IHNlbGVjdD1cImNyLWV4cGFuc2lvbi1wYW5lbC10aXRsZVwiPjwvbmctY29udGVudD5cbjwvbmctdGVtcGxhdGU+XG5cbjxuZy10ZW1wbGF0ZSAjbWVudT5cblx0PG5nLWNvbnRlbnQgc2VsZWN0PVwiY3ItZXhwYW5zaW9uLXBhbmVsLW1lbnVcIj48L25nLWNvbnRlbnQ+XG48L25nLXRlbXBsYXRlPlxuPG5nLXRlbXBsYXRlICNib2R5PlxuXHQ8bmctY29udGVudCBzZWxlY3Q9XCJjci1leHBhbnNpb24tcGFuZWwtYm9keVwiPjwvbmctY29udGVudD5cbjwvbmctdGVtcGxhdGU+XG4iXX0=