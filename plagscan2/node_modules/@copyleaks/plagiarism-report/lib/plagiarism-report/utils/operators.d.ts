/**
 * An rxjs operator that filters any value that is evaluated to true.
 */
export declare const truthy: <T>() => import("rxjs").MonoTypeOperatorFunction<T>;
/**
 * An rxjs operator that filters any value that is evaluated to false.
 */
export declare const falsey: <T>() => import("rxjs").MonoTypeOperatorFunction<T>;
/**
 * An rxjs operator that filters any array that has one or more elements.
 */
export declare const notEmpty: <T extends {
    length: number;
}>() => import("rxjs").MonoTypeOperatorFunction<T>;
/**
 * An rxjs operator that will accumulate items to an array
 */
export declare const accumulate: <T>() => import("rxjs").OperatorFunction<T, T[]>;
/**
 * An rxjs operator that will filter deeply equal sequential items
 */
export declare const distinct: <T>() => import("rxjs").MonoTypeOperatorFunction<T>;
