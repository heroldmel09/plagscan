import { OnDestroy } from '@angular/core';
import { ReportStatistics, CompleteResult, ResultItem, CopyleaksReportOptions } from '../models';
import { ReportService } from './report.service';
import * as i0 from "@angular/core";
export declare class StatisticsService implements OnDestroy {
    private _statistics;
    constructor(reportService: ReportService);
    statistics$: import("rxjs").Observable<ReportStatistics>;
    /**
     * Retreive statistics for a one-to-one comparison using the complete result, suspect, and report options
     * @param completeResult The complete result - contains the count of total words and excluded words in the document
     * @param suspect the currently viewed suspect Result
     * @param options the current report options
     */
    retreiveOneToOneStatistics(completeResult: CompleteResult, suspect: ResultItem, options: CopyleaksReportOptions): void;
    /**
     * Retreive statistics for a one-to-many comparison using the complete result, results,filtered results, and report options
     * @param completeResult the complete result
     * @param results list of result items containing all the results from the current scan
     * @param filteredResults list of results filtered by user settings, will be the same as `results` when no filter applied
     * @param options the current report options
     */
    retreieveOneToManyStatistics(completeResult: CompleteResult, results: ResultItem[], filteredResults: ResultItem[], options: CopyleaksReportOptions): void;
    /** dtor */
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<StatisticsService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<StatisticsService>;
}
