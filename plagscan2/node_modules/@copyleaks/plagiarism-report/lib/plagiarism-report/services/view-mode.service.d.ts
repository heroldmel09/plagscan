import { OnDestroy } from '@angular/core';
import { BehaviorSubject } from 'rxjs';
import { CompleteResult, CompleteResultNotificationAlert } from '../models';
import { ReportService } from './report.service';
import * as i0 from "@angular/core";
export declare enum EReportViewModel {
    ScanningResult = 0,
    Alerts = 1,
    AIView = 2
}
export declare class ViewModeService implements OnDestroy {
    private reportService;
    private readonly _reportViewMode$;
    private _selectedAlert;
    private _unsub;
    get reportViewMode$(): BehaviorSubject<EReportViewModel>;
    get selectedAlert(): CompleteResultNotificationAlert;
    set selectedAlert(alert: CompleteResultNotificationAlert);
    constructor(reportService: ReportService);
    showAIAlertView(completeResult: CompleteResult): void;
    /**
     * change the view of the report
     * @param mode view mode
     */
    changeViewMode$(mode: EReportViewModel): void;
    /**
     * unsubscribe from observalbes on destroy
     */
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<ViewModeService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<ViewModeService>;
}
