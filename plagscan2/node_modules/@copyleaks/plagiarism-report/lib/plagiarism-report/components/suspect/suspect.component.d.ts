import { OnDestroy, OnInit } from '@angular/core';
import { PageChangeEvent } from '../../../mat-pagination/mat-pagination.component';
import { MatchType, ResultPreview, SlicedMatch } from '../../models';
import { ScanResult } from '../../models/api-models/ScanResult';
import { ContentMode, DirectionMode } from '../../models/CopyleaksReportConfig';
import { LayoutMediaQueryService } from '../../services/layout-media-query.service';
import { MatchService } from '../../services/match.service';
import { ReportService } from '../../services/report.service';
import { CopyleaksTranslateService, CopyleaksTranslations } from '../../services/copyleaks-translate.service';
import { HighlightService } from '../../services/highlight.service';
import * as i0 from "@angular/core";
export declare class SuspectComponent implements OnInit, OnDestroy {
    private reportService;
    private layoutService;
    private matchService;
    private translatesService;
    private highlightService;
    translates: CopyleaksTranslations;
    preview: ResultPreview;
    constructor(reportService: ReportService, layoutService: LayoutMediaQueryService, matchService: MatchService, translatesService: CopyleaksTranslateService, highlightService: HighlightService);
    readonly MatchType: typeof MatchType;
    isMobile: boolean;
    zoom: number;
    direction: DirectionMode;
    currentPage: number;
    textMatches: SlicedMatch[][];
    suspect: ScanResult;
    contentMode: ContentMode;
    disableBackButton: boolean;
    get hasHtml(): boolean;
    get isHtml(): boolean;
    get hasUrl(): boolean;
    get pages(): number[];
    /**
     * toggles between `text` and `html` content mode
     */
    toggleContent(): void;
    /**
     * exits one-to-one mode and goes to one-to-many mode
     */
    goBack(): void;
    /**
     * updates the font size of the suspect text.
     * @param amount a decimal number
     */
    decreaseFontSize(amount?: number): void;
    /**
     * updates the font size of the suspect text.
     * @param amount a decimal number
     */
    increaseFontSize(amount?: number): void;
    /**
     * Handle a page event from `cr-mat-paginator` component
     * Pass the `PageChangeEvent` to `ReportService`
     * @param event the page event containing page data
     */
    onPage(event: PageChangeEvent): void;
    /**
     * life-cycle method
     * Subscribe to:
     * - suspect changes
     * - content mode changes
     * - matches changes
     * - mobile layout changes
     */
    ngOnInit(): void;
    /**
     * this will open the suspect preview url in a new tab
     */
    openUrl(): void;
    /**
     * Setup suspect and source Matches
     */
    private setupMatches;
    /**
     * life-cycle method
     * empty for `untilDestroy` rxjs operator
     */
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<SuspectComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<SuspectComponent, "cr-suspect", never, {}, {}, never, never>;
}
