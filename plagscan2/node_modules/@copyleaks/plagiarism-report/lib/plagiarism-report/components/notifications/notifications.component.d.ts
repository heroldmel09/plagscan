import { OnInit, OnDestroy, EventEmitter } from '@angular/core';
import { MatDialog } from '@angular/material/dialog';
import { ReportService } from '../../services/report.service';
import { CompleteResultNotificationAlertSeverity } from '../../models';
import { EReportViewModel, ViewModeService } from '../../services/view-mode.service';
import { BehaviorSubject } from 'rxjs';
import { LiveAnnouncer } from '@angular/cdk/a11y';
import * as i0 from "@angular/core";
export declare class NotificationsComponent implements OnInit, OnDestroy {
    private matDialog;
    private viewModeService;
    private reportService;
    private announcer;
    severity: CompleteResultNotificationAlertSeverity;
    severities: typeof CompleteResultNotificationAlertSeverity;
    currentViewMode$: BehaviorSubject<EReportViewModel>;
    eReportViewModel: typeof EReportViewModel;
    severityChange: EventEmitter<CompleteResultNotificationAlertSeverity>;
    constructor(matDialog: MatDialog, viewModeService: ViewModeService, reportService: ReportService, announcer: LiveAnnouncer);
    /**
     * Life-cycle method
     */
    ngOnInit(): void;
    /**
     * shows the notification dialogs with the alerts
     */
    showNotificationsDialog(): void;
    /**
     * change view to alerts view
     */
    toggleView(): void;
    /**
     * Life-cycle method
     * empty for `untilDestroy` rxjs operator
     */
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<NotificationsComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<NotificationsComponent, "cr-notifications", never, {}, { "severityChange": "severityChange"; }, never, never>;
}
