import { AfterContentInit, OnDestroy } from '@angular/core';
import { ContentMode, Match, ScanResult } from '../../models';
import { HighlightService } from '../../services/highlight.service';
import { ReportService } from '../../services/report.service';
import * as i0 from "@angular/core";
export declare class SuspectTextHelperDirective implements AfterContentInit, OnDestroy {
    private highlightService;
    private reportService;
    host: {
        currentPage: number;
    };
    constructor(highlightService: HighlightService, reportService: ReportService);
    private children;
    /**
     * Handle a match click that was broadcasted by the source text helper
     * @param elem the broadcasted element
     * @param suspect the suspected scan result
     * @param contentMode content mode of the broadcasting match
     */
    handleBroadcast(match: Match, suspect: ScanResult, contentMode: ContentMode): void;
    /**
     * Life-cycle method
     * - listen to text match clicks from `source`
     */
    ngAfterContentInit(): void;
    /**
     * Life-cycle method
     * empty for `untilDestroy` rxjs operator
     */
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<SuspectTextHelperDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<SuspectTextHelperDirective, "[crSuspectTextHelper]", never, { "host": "host"; }, {}, ["children"]>;
}
