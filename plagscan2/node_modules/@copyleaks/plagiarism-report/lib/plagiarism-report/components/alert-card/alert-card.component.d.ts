import { EventEmitter, OnDestroy } from '@angular/core';
import { CompleteResultNotificationAlert, CompleteResultNotificationAlertSeverity } from '../../models';
import { HighlightService } from '../../services/highlight.service';
import { MatchService } from '../../services/match.service';
import { ReportService } from '../../services/report.service';
import { ViewModeService } from '../../services/view-mode.service';
import * as i0 from "@angular/core";
export declare class AlertCardComponent implements OnDestroy {
    private viewModeService;
    private highlightService;
    private reportService;
    private matchsService;
    alert: CompleteResultNotificationAlert;
    afterToggleError: EventEmitter<any>;
    severity: typeof CompleteResultNotificationAlertSeverity;
    alertsConstants: {
        SUSPECTED_CHARACTER_REPLACEMENT_CODE: string;
        SUSPECTED_CHEATING_DETECTED_CODE: string;
        SUSPECTED_AI_TEXT_DETECTED: string;
    };
    get isSelected(): boolean;
    constructor(viewModeService: ViewModeService, highlightService: HighlightService, reportService: ReportService, matchsService: MatchService);
    /**
     * this function will select an alert
     */
    toggleAlertPreview(alert: CompleteResultNotificationAlert): void;
    /**
     * life cycel method
     * required for untilDestored
     */
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<AlertCardComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<AlertCardComponent, "cr-alert-card", never, { "alert": "alert"; }, { "afterToggleError": "afterToggleError"; }, never, never>;
}
