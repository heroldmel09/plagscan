import { OnDestroy, OnInit } from '@angular/core';
import { MatDialogRef } from '@angular/material/dialog';
import { CopyleaksReportOptions } from '../../models/ResultsSettings';
import { ReportService } from '../../services/report.service';
import { CopyleaksTranslateService, CopyleaksTranslations } from '../../services/copyleaks-translate.service';
import { DirectionService } from '../../services/direction.service';
import * as i0 from "@angular/core";
export declare class OptionsDialogComponent implements OnInit, OnDestroy {
    private translatesService;
    private dialogRef;
    directionService: DirectionService;
    reportService: ReportService;
    translations: CopyleaksTranslations;
    constructor(translatesService: CopyleaksTranslateService, dialogRef: MatDialogRef<OptionsDialogComponent>, directionService: DirectionService, reportService: ReportService);
    options: CopyleaksReportOptions;
    /**
     * Closes the dialog while indicating whether to save changes or not.
     */
    close(save?: boolean): void;
    /**
     * Life-cycle method
     * subscribe to:
     * - current report settings ( clone it)
     * - dialog events
     */
    ngOnInit(): void;
    /**
     * Life-cycle method
     * empty for `untilDestroy` rxjs operator
     */
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<OptionsDialogComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<OptionsDialogComponent, "cr-options-dialog", never, {}, {}, never, never>;
}
