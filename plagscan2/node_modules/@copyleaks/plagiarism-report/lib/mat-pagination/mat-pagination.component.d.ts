import { EventEmitter, OnInit } from '@angular/core';
import { CopyleaksTranslateService, CopyleaksTranslations } from '../plagiarism-report/services/copyleaks-translate.service';
import { LiveAnnouncer } from '@angular/cdk/a11y';
import * as i0 from "@angular/core";
export interface PageChangeEvent {
    currentPage: number;
    previousPage: number;
    totalPages: number;
}
export declare class MatPaginationComponent implements OnInit {
    private translationsService;
    private announcer;
    totalPages: number;
    page: EventEmitter<PageChangeEvent>;
    private _currentPage;
    translations: CopyleaksTranslations;
    get currentPage(): number;
    set currentPage(v: number);
    currentPageChange: EventEmitter<number>;
    private _disabled;
    get disabled(): boolean;
    set disabled(value: boolean);
    private _showFirstLastButtons;
    get showFirstLastButtons(): boolean;
    set showFirstLastButtons(value: boolean);
    constructor(translationsService: CopyleaksTranslateService, announcer: LiveAnnouncer);
    /**
     * init translations on component init
     */
    ngOnInit(): void;
    /**
     * Navigate to the next page.
     * This will cause the paginator to emit a `PageChangeEvent`
     */
    next(): void;
    /**
     * Navigate to the previous page.
     * This will cause the paginator to emit a `PageChangeEvent`
     */
    back(): void;
    /**
     * Navigate to page.
     * This will cause the paginator to emit a `PageChangeEvent`
     */
    goToPage(page: number): void;
    /**
     * On blur handler for the paginator input will update the input with the current page
     * @param event the default blur event object
     */
    onInputBlur(event: FocusEvent): void;
    /**
     * flag indicating whether the paginator has multiple pages
     */
    get hasPages(): boolean;
    /**
     * check if the paginator is at the first page
     */
    get isFirstPage(): boolean;
    /**
     * check if the paginator is at the last page
     */
    get isLastPage(): boolean;
    static ɵfac: i0.ɵɵFactoryDeclaration<MatPaginationComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<MatPaginationComponent, "cr-mat-pagination", never, { "totalPages": "totalPages"; "currentPage": "currentPage"; "disabled": "disabled"; "showFirstLastButtons": "showFirstLastButtons"; }, { "page": "page"; "currentPageChange": "currentPageChange"; }, never, never>;
}
